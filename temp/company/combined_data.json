[
   {
      "problem_name": "Find Subsequence of Length K With the Largest Sum",
      "company": ["Accenture"],
      "num_occur": [1]
   },
   {
      "problem_name": "Count Odd Numbers in an Interval Range",
      "company": ["Accenture", "Adobe", "Amazon", "Apple"],
      "num_occur": [2, 2, 2, 2]
   },
   {
      "problem_name": "Merge Two Sorted Lists",
      "company": [
         "Accenture",
         "Adobe",
         "Amazon",
         "Bloomberg",
         "Facebook",
         "Google",
         "Microsoft",
         "Oracle",
         "Shopee",
         "Uber"
      ],
      "num_occur": [2, 11, 20, 3, 13, "3", "13", 4, 3, 3]
   },
   {
      "problem_name": "Palindrome Number",
      "company": [
         "Accenture",
         "Adobe",
         "Amazon",
         "Apple",
         "Bloomberg",
         "Facebook",
         "Google",
         "Uber",
         "Yahoo"
      ],
      "num_occur": [2, 5, 7, 3, 6, 8, "11", 2, 2]
   },
   {
      "problem_name": "Two Sum",
      "company": [
         "Accenture",
         "Adobe",
         "Amazon",
         "American Express",
         "Apple",
         "Bloomberg",
         "Dell",
         "Expedia",
         "Facebook",
         "Goldman Sachs",
         "Google",
         "IBM",
         "Intel",
         "Intuit",
         "JPMorgan",
         "Microsoft",
         "Morgan Stanley",
         "Oracle",
         "Paypal",
         "Salesforce",
         "Samsung",
         "Spotify",
         "Uber",
         "Visa",
         "Walmart Global Tech",
         "Yahoo",
         "Zillow",
         "Zoho",
         "Zomato",
         "Zoom"
      ],
      "num_occur": [
         3,
         52,
         117,
         3,
         40,
         16,
         3,
         7,
         21,
         "7",
         "44",
         3,
         3,
         2,
         3,
         "39",
         3,
         6,
         3,
         3,
         2,
         8,
         11,
         4,
         3,
         4,
         2,
         4,
         2,
         2
      ]
   },
   {
      "problem_name": "Minimum ASCII Delete Sum for Two Strings",
      "company": ["Activision", "TripleByte"],
      "num_occur": [2, 4]
   },
   {
      "problem_name": "Concatenation of Array",
      "company": ["Adobe", "Google"],
      "num_occur": [2, "4"]
   },
   {
      "problem_name": "Build Array from Permutation",
      "company": ["Adobe", "Apple", "Google", "Uber"],
      "num_occur": [3, 5, "2", 2]
   },
   {
      "problem_name": "Determine Whether Matrix Can Be Obtained By Rotation",
      "company": ["Adobe"],
      "num_occur": [2]
   },
   {
      "problem_name": "Sum of All Subset XOR Totals",
      "company": ["Adobe"],
      "num_occur": [2]
   },
   {
      "problem_name": "Sorting the Sentence",
      "company": ["Adobe", "Google"],
      "num_occur": [2, "2"]
   },
   {
      "problem_name": "Replace All Digits with Characters",
      "company": ["Adobe", "Google"],
      "num_occur": [2, "1"]
   },
   {
      "problem_name": "Count Items Matching a Rule",
      "company": ["Adobe", "Facebook"],
      "num_occur": [3, 2]
   },
   {
      "problem_name": "Maximum Absolute Sum of Any Subarray",
      "company": ["Adobe", "Amazon"],
      "num_occur": [2, 2]
   },
   {
      "problem_name": "Count Good Meals",
      "company": ["Adobe", "Amazon", "Robinhood"],
      "num_occur": [2, 2, 1]
   },
   {
      "problem_name": "Count of Matches in Tournament",
      "company": ["Adobe"],
      "num_occur": [2]
   },
   {
      "problem_name": "Richest Customer Wealth",
      "company": ["Adobe"],
      "num_occur": [2]
   },
   {
      "problem_name": "Smallest String With A Given Numeric Value",
      "company": ["Adobe"],
      "num_occur": [2]
   },
   {
      "problem_name": "Maximum Number of Achievable Transfer Requests",
      "company": ["Adobe", "Amazon"],
      "num_occur": [2, 1]
   },
   {
      "problem_name": "Sum of All Odd Length Subarrays",
      "company": ["Adobe", "Amazon", "Apple"],
      "num_occur": [3, 2, 2]
   },
   {
      "problem_name": "Maximum Length of Subarray With Positive Product",
      "company": ["Adobe", "Amazon", "Arcesium"],
      "num_occur": [2, 29, 4]
   },
   {
      "problem_name": "Make The String Great",
      "company": ["Adobe", "Google"],
      "num_occur": [2, "1"]
   },
   {
      "problem_name": "Number of Good Pairs",
      "company": ["Adobe", "Amazon", "Microsoft"],
      "num_occur": [2, 3, "3"]
   },
   {
      "problem_name": "Maximum Points You Can Obtain from Cards",
      "company": ["Adobe", "Amazon", "Google"],
      "num_occur": [2, 3, "17"]
   },
   {
      "problem_name": "Circle and Rectangle Overlapping",
      "company": ["Adobe"],
      "num_occur": [2]
   },
   {
      "problem_name": "Number of Substrings Containing All Three Characters",
      "company": ["Adobe", "DE Shaw", "Microsoft"],
      "num_occur": [2, 1, "2"]
   },
   {
      "problem_name": "Search Suggestions System",
      "company": ["Adobe", "Amazon", "Apple", "Facebook", "Google", "Oracle"],
      "num_occur": [2, 68, 2, 3, "3", 3]
   },
   {
      "problem_name": "Minimum Remove to Make Valid Parentheses",
      "company": [
         "Adobe",
         "Amazon",
         "Bloomberg",
         "Facebook",
         "Google",
         "Microsoft",
         "Snapchat"
      ],
      "num_occur": [2, 6, 8, 282, "2", "4", 2]
   },
   {
      "problem_name": "Split a String in Balanced Strings",
      "company": ["Adobe", "Amazon", "Bloomberg", "Walmart Global Tech"],
      "num_occur": [2, 2, 2, 2]
   },
   {
      "problem_name": "Unique Number of Occurrences",
      "company": [
         "Adobe",
         "Amazon",
         "Apple",
         "Bloomberg",
         "Facebook",
         "Google"
      ],
      "num_occur": [5, 5, 4, 3, 4, "2"]
   },
   {
      "problem_name": "Maximum Number of Balloons",
      "company": ["Adobe"],
      "num_occur": [2]
   },
   {
      "problem_name": "Number of Equivalent Domino Pairs",
      "company": ["Adobe", "Amazon"],
      "num_occur": [2, 1]
   },
   {
      "problem_name": "Shortest Path in Binary Matrix",
      "company": [
         "Adobe",
         "Amazon",
         "Facebook",
         "Google",
         "Microsoft",
         "Snapchat"
      ],
      "num_occur": [2, 9, 76, "5", "8", 3]
   },
   {
      "problem_name": "Partition Array for Maximum Sum",
      "company": ["Adobe", "Amazon"],
      "num_occur": [3, 4]
   },
   {
      "problem_name": "Complement of Base 10 Integer",
      "company": ["Adobe", "Apple"],
      "num_occur": [4, 2]
   },
   {
      "problem_name": "Find the Town Judge",
      "company": ["Adobe", "Amazon", "Apple", "Google"],
      "num_occur": [2, 2, 2, "2"]
   },
   {
      "problem_name": "Reveal Cards In Increasing Order",
      "company": ["Adobe"],
      "num_occur": [2]
   },
   {
      "problem_name": "3Sum With Multiplicity",
      "company": ["Adobe", "Amazon"],
      "num_occur": [2, 2]
   },
   {
      "problem_name": "Smallest Range I",
      "company": ["Adobe"],
      "num_occur": [1]
   },
   {
      "problem_name": "Online Stock Span",
      "company": ["Adobe", "Amazon", "Bloomberg"],
      "num_occur": [2, 6, 2]
   },
   {
      "problem_name": "Maximum Frequency Stack",
      "company": [
         "Adobe",
         "Amazon",
         "Apple",
         "Facebook",
         "LinkedIn",
         "Microsoft",
         "MindTickle",
         "Twitter"
      ],
      "num_occur": [2, 5, 4, 2, 2, "2", 2, "2"]
   },
   {
      "problem_name": "Middle of the Linked List",
      "company": [
         "Adobe",
         "Amazon",
         "Apple",
         "Facebook",
         "Google",
         "Microsoft",
         "Qualcomm"
      ],
      "num_occur": [4, 5, 2, 3, "3", "2", 2]
   },
   {
      "problem_name": "Champagne Tower",
      "company": ["Adobe", "Amazon", "Uber"],
      "num_occur": [2, 2, 2]
   },
   {
      "problem_name": "Rabbits in Forest",
      "company": ["Adobe", "Amazon", "Swiggy"],
      "num_occur": [2, 2, 2]
   },
   {
      "problem_name": "K-th Symbol in Grammar",
      "company": ["Adobe"],
      "num_occur": [2]
   },
   {
      "problem_name": "Jewels and Stones",
      "company": ["Adobe", "Amazon", "Google"],
      "num_occur": [2, 3, "2"]
   },
   {
      "problem_name": "Min Cost Climbing Stairs",
      "company": ["Adobe", "Amazon", "Bloomberg"],
      "num_occur": [4, 5, 2]
   },
   {
      "problem_name": "Self Dividing Numbers",
      "company": ["Adobe", "Amazon", "Bloomberg", "Epic Systems"],
      "num_occur": [2, 2, 2, 1]
   },
   {
      "problem_name": "Find Pivot Index",
      "company": [
         "Adobe",
         "Amazon",
         "Apple",
         "Cisco",
         "Expedia",
         "Facebook",
         "Goldman Sachs",
         "Google",
         "Microsoft"
      ],
      "num_occur": [2, 3, 3, 2, 2, 14, "9", "2", "2"]
   },
   {
      "problem_name": "Binary Search",
      "company": [
         "Adobe",
         "Amazon",
         "Apple",
         "Bloomberg",
         "Facebook",
         "Google",
         "Microsoft",
         "Uber",
         "Yahoo"
      ],
      "num_occur": [3, 13, 5, 3, 2, "4", "4", 2, 2]
   },
   {
      "problem_name": "Kth Largest Element in a Stream",
      "company": ["Adobe", "Amazon", "Facebook", "Google", "LinkedIn"],
      "num_occur": [4, 4, 3, "4", 2]
   },
   {
      "problem_name": "Degree of an Array",
      "company": [
         "Adobe",
         "Athenahealth",
         "Expedia",
         "IBM",
         "Mathworks",
         "Nvidia",
         "Walmart Global Tech"
      ],
      "num_occur": [2, 4, 5, 3, 3, 2, 3]
   },
   { "problem_name": "Set Mismatch", "company": ["Adobe"], "num_occur": [3] },
   {
      "problem_name": "Array Nesting",
      "company": ["Adobe", "Apple"],
      "num_occur": [3, 1]
   },
   {
      "problem_name": "Subarray Sum Equals K",
      "company": [
         "Adobe",
         "Amazon",
         "Apple",
         "Bloomberg",
         "Bolt",
         "DoorDash",
         "Expedia",
         "Facebook",
         "Google",
         "Microsoft",
         "Nvidia",
         "Oracle",
         "Quora",
         "ServiceNow",
         "tiktok",
         "Visa"
      ],
      "num_occur": [2, 19, 3, 4, 2, 2, 2, 141, "15", "10", 2, 7, 3, 2, 5, 4]
   },
   {
      "problem_name": "01 Matrix",
      "company": ["Adobe", "Amazon", "Facebook", "Google"],
      "num_occur": [2, 6, 2, "6"]
   },
   {
      "problem_name": "Reverse String II",
      "company": ["Adobe"],
      "num_occur": [3]
   },
   {
      "problem_name": "K-diff Pairs in an Array",
      "company": [
         "Adobe",
         "Amazon",
         "Apple",
         "Bloomberg",
         "DoorDash",
         "Goldman Sachs",
         "Uber",
         "Zoho"
      ],
      "num_occur": [2, 2, 2, 2, 2, "2", 2, 2]
   },
   {
      "problem_name": "Fibonacci Number",
      "company": [
         "Adobe",
         "Amazon",
         "Apple",
         "Facebook",
         "Goldman Sachs",
         "Google",
         "Microsoft",
         "Oracle",
         "Zoom"
      ],
      "num_occur": [4, 10, 4, 3, "3", "2", "4", 3, 3]
   },
   { "problem_name": "Perfect Number", "company": ["Adobe"], "num_occur": [2] },
   {
      "problem_name": "Target Sum",
      "company": ["Adobe", "Amazon", "Bloomberg", "Facebook", "Google"],
      "num_occur": [2, 7, 2, 10, "2"]
   },
   {
      "problem_name": "Total Hamming Distance",
      "company": ["Adobe", "Amazon"],
      "num_occur": [2, 2]
   },
   {
      "problem_name": "4Sum II",
      "company": ["Adobe", "Amazon", "Bloomberg", "Facebook"],
      "num_occur": [2, 6, 2, 3]
   },
   {
      "problem_name": "Arithmetic Slices II - Subsequence",
      "company": ["Adobe", "Baidu", "Google", "Uber"],
      "num_occur": [2, 1, "2", 2]
   },
   {
      "problem_name": "Find All Duplicates in an Array",
      "company": ["Adobe", "Amazon", "Apple", "Google", "Microsoft"],
      "num_occur": [2, 5, 2, "2", "4"]
   },
   {
      "problem_name": "Find All Anagrams in a String",
      "company": [
         "Adobe",
         "Amazon",
         "Apple",
         "Bloomberg",
         "Facebook",
         "Google",
         "Microsoft",
         "Oracle",
         "Uber",
         "Yahoo"
      ],
      "num_occur": [4, 15, 4, 3, 5, "2", "11", 3, 3, 3]
   },
   {
      "problem_name": "Longest Repeating Character Replacement",
      "company": ["Adobe", "Amazon", "Google", "Uber"],
      "num_occur": [3, 6, "7", 4]
   },
   {
      "problem_name": "Maximum XOR of Two Numbers in an Array",
      "company": ["Adobe", "Bloomberg"],
      "num_occur": [2, 2]
   },
   {
      "problem_name": "Sum of Left Leaves",
      "company": ["Adobe"],
      "num_occur": [2]
   },
   {
      "problem_name": "Remove K Digits",
      "company": [
         "Adobe",
         "Amazon",
         "Bloomberg",
         "Facebook",
         "Google",
         "MakeMyTrip",
         "Microsoft"
      ],
      "num_occur": [2, 10, 3, 2, "2", 2, "3"]
   },
   {
      "problem_name": "Evaluate Division",
      "company": [
         "Adobe",
         "Amazon",
         "BlackRock",
         "Bloomberg",
         "Facebook",
         "Google",
         "Snapchat",
         "tiktok",
         "Uber"
      ],
      "num_occur": [3, 10, 2, 2, 8, "8", 5, 4, 14]
   },
   {
      "problem_name": "Decode String",
      "company": [
         "Adobe",
         "Amazon",
         "Apple",
         "Bloomberg",
         "ByteDance",
         "Cisco",
         "Cruise Automation",
         "Facebook",
         "Google",
         "Intuit",
         "Microsoft",
         "Oracle",
         "Snapchat",
         "Sumologic",
         "tiktok",
         "Uber",
         "Walmart Global Tech"
      ],
      "num_occur": [3, 12, 5, 33, 2, 8, 2, 11, "19", 2, "14", 6, 5, 2, 5, 3, 2]
   },
   {
      "problem_name": "Is Subsequence",
      "company": ["Adobe", "Amazon", "Google", "Yandex"],
      "num_occur": [2, 4, "3", 3]
   },
   {
      "problem_name": "Elimination Game",
      "company": ["Adobe", "Bloomberg", "Goldman Sachs"],
      "num_occur": [2, 4, "4"]
   },
   {
      "problem_name": "Ransom Note",
      "company": ["Adobe", "Apple", "Google", "Spotify"],
      "num_occur": [2, 3, "3", 10]
   },
   {
      "problem_name": "Kth Smallest Element in a Sorted Matrix",
      "company": [
         "Adobe",
         "Amazon",
         "Bloomberg",
         "ByteDance",
         "Facebook",
         "Google",
         "Microsoft",
         "Uber"
      ],
      "num_occur": [2, 6, 2, 2, 18, "4", "4", 2]
   },
   {
      "problem_name": "Guess Number Higher or Lower",
      "company": ["Adobe", "Bloomberg"],
      "num_occur": [4, 2]
   },
   { "problem_name": "Super Pow", "company": ["Adobe"], "num_occur": [2] },
   {
      "problem_name": "Intersection of Two Arrays II",
      "company": ["Adobe", "Amazon", "Bloomberg", "Facebook", "Yahoo"],
      "num_occur": [3, 4, 2, 4, 4]
   },
   {
      "problem_name": "Intersection of Two Arrays",
      "company": [
         "Adobe",
         "Amazon",
         "Apple",
         "Bloomberg",
         "Facebook",
         "Google",
         "JPMorgan",
         "Microsoft"
      ],
      "num_occur": [5, 9, 6, 2, 6, "3", 2, "2"]
   },
   {
      "problem_name": "Design Tic-Tac-Toe",
      "company": ["Adobe", "Amazon", "Facebook", "Google", "Microsoft"],
      "num_occur": [2, 15, 15, "4", "7"]
   },
   {
      "problem_name": "Top K Frequent Elements",
      "company": [
         "Adobe",
         "Amazon",
         "Apple",
         "Bloomberg",
         "Cisco",
         "Facebook",
         "Google",
         "Microsoft",
         "Oracle",
         "Uber"
      ],
      "num_occur": [3, 29, 5, 4, 3, 97, "8", "12", 7, 6]
   },
   {
      "problem_name": "Reverse String",
      "company": [
         "Adobe",
         "Amazon",
         "Apple",
         "Facebook",
         "Intel",
         "Microsoft",
         "tcs"
      ],
      "num_occur": [5, 6, 2, 3, 2, "5", 3]
   },
   {
      "problem_name": "House Robber III",
      "company": ["Adobe", "Amazon", "Google"],
      "num_occur": [3, 6, "5"]
   },
   {
      "problem_name": "Odd Even Linked List",
      "company": ["Adobe", "Amazon", "eBay", "Facebook", "tiktok"],
      "num_occur": [4, 4, 2, 6, 2]
   },
   { "problem_name": "Wiggle Sort II", "company": ["Adobe"], "num_occur": [2] },
   {
      "problem_name": "Count of Smaller Numbers After Self",
      "company": ["Adobe", "Amazon", "Google", "Microsoft"],
      "num_occur": [2, 3, "6", "5"]
   },
   {
      "problem_name": "Nim Game",
      "company": ["Adobe", "Microsoft"],
      "num_occur": [3, "2"]
   },
   {
      "problem_name": "Word Pattern",
      "company": ["Adobe", "Amazon", "Bolt", "Uber"],
      "num_occur": [2, 4, 3, 2]
   },
   {
      "problem_name": "Game of Life",
      "company": [
         "Adobe",
         "Amazon",
         "Apple",
         "Bloomberg",
         "Dropbox",
         "Google",
         "Microsoft",
         "Opendoor",
         "Snapchat"
      ],
      "num_occur": [4, 6, 2, 4, 5, "3", "3", 10, 2]
   },
   {
      "problem_name": "Inorder Successor in BST",
      "company": ["Adobe", "Facebook", "Google", "Microsoft"],
      "num_occur": [2, 6, "3", "11"]
   },
   {
      "problem_name": "Move Zeroes",
      "company": [
         "Adobe",
         "Amazon",
         "Apple",
         "Bloomberg",
         "Expedia",
         "Facebook",
         "IBM",
         "Microsoft",
         "tcs",
         "tiktok",
         "Uber",
         "Yandex"
      ],
      "num_occur": [2, 8, 8, 4, 2, 19, 2, "10", 4, 2, 2, 6]
   },
   {
      "problem_name": "First Bad Version",
      "company": [
         "Adobe",
         "Amazon",
         "Apple",
         "Cisco",
         "Facebook",
         "Google",
         "Microsoft"
      ],
      "num_occur": [4, 12, 5, 2, 7, "19", "6"]
   },
   {
      "problem_name": "Missing Number",
      "company": [
         "Adobe",
         "Amazon",
         "Apple",
         "Facebook",
         "Microsoft",
         "Nvidia",
         "Salesforce",
         "VMware"
      ],
      "num_occur": [3, 8, 3, 6, "13", 2, 2, 2]
   },
   {
      "problem_name": "Sliding Window Maximum",
      "company": [
         "Adobe",
         "Amazon",
         "Apple",
         "Bloomberg",
         "Booking.com",
         "ByteDance",
         "Citadel",
         "DE Shaw",
         "DoorDash",
         "Facebook",
         "Google",
         "Microsoft",
         "Quora",
         "Salesforce",
         "tiktok",
         "Twilio",
         "Uber",
         "VMware"
      ],
      "num_occur": [4, 32, 3, 2, 2, 4, 4, 2, 2, 5, "8", "6", 2, 6, 3, 3, 5, 2]
   },
   {
      "problem_name": "Product of Array Except Self",
      "company": [
         "Adobe",
         "Amazon",
         "Apple",
         "Asana",
         "Bloomberg",
         "Facebook",
         "Microsoft",
         "Oracle",
         "Uber"
      ],
      "num_occur": [7, 32, 10, 13, 4, 18, "15", 4, 8]
   },
   {
      "problem_name": "Palindrome Linked List",
      "company": [
         "Adobe",
         "Amazon",
         "Apple",
         "Bloomberg",
         "Facebook",
         "Google",
         "Intuit",
         "Microsoft",
         "ServiceNow",
         "VMware",
         "Yahoo"
      ],
      "num_occur": [2, 16, 6, 3, 16, "3", 2, "10", 2, 2, 2]
   },
   {
      "problem_name": "Majority Element II",
      "company": ["Adobe", "Amazon", "Microsoft"],
      "num_occur": [2, 4, "3"]
   },
   {
      "problem_name": "Basic Calculator",
      "company": [
         "Adobe",
         "Amazon",
         "ByteDance",
         "DoorDash",
         "Facebook",
         "Google",
         "Microsoft",
         "Snapchat",
         "Uber"
      ],
      "num_occur": [2, 7, 3, 6, 10, "12", "5", 2, 5]
   },
   {
      "problem_name": "Contains Duplicate III",
      "company": ["Adobe", "Amazon", "Apple", "Google"],
      "num_occur": [2, 2, 2, "4"]
   },
   {
      "problem_name": "Contains Duplicate II",
      "company": [
         "Adobe",
         "Amazon",
         "Bloomberg",
         "Facebook",
         "Google",
         "Microsoft",
         "Uber"
      ],
      "num_occur": [3, 2, 2, 15, "3", "2", 2]
   },
   {
      "problem_name": "Contains Duplicate",
      "company": [
         "Adobe",
         "Amazon",
         "Apple",
         "Bloomberg",
         "Google",
         "Microsoft",
         "tcs",
         "Uber",
         "Yahoo"
      ],
      "num_occur": [12, 19, 6, 2, "6", "3", 2, 2, 2]
   },
   {
      "problem_name": "Kth Largest Element in an Array",
      "company": [
         "Adobe",
         "Amazon",
         "Bloomberg",
         "Facebook",
         "Goldman Sachs",
         "Google",
         "LinkedIn",
         "Microsoft",
         "tiktok"
      ],
      "num_occur": [5, 16, 5, 140, "2", "8", 14, "12", 3]
   },
   {
      "problem_name": "Count Primes",
      "company": [
         "Adobe",
         "Amazon",
         "Apple",
         "Capital One",
         "Microsoft",
         "SAP",
         "tiktok"
      ],
      "num_occur": [2, 4, 2, 14, "4", 2, 2]
   },
   {
      "problem_name": "Remove Linked List Elements",
      "company": ["Adobe", "Amazon", "Facebook", "Microsoft"],
      "num_occur": [2, 4, 2, "3"]
   },
   {
      "problem_name": "Happy Number",
      "company": ["Adobe", "Amazon", "Apple", "Google", "Paypal", "Uber"],
      "num_occur": [4, 6, 7, "22", 4, 3]
   },
   {
      "problem_name": "Bitwise AND of Numbers Range",
      "company": ["Adobe"],
      "num_occur": [2]
   },
   {
      "problem_name": "Number of Islands",
      "company": [
         "Adobe",
         "Amazon",
         "Apple",
         "Bloomberg",
         "ByteDance",
         "Cruise Automation",
         "Docusign",
         "DoorDash",
         "Dropbox",
         "eBay",
         "Facebook",
         "Goldman Sachs",
         "Google",
         "Karat",
         "LinkedIn",
         "Microsoft",
         "Nvidia",
         "Oracle",
         "Paypal",
         "Qualtrics",
         "Salesforce",
         "SAP",
         "ServiceNow",
         "Shopee",
         "Snapchat",
         "Square",
         "tiktok",
         "Twitch",
         "Uber",
         "VMware"
      ],
      "num_occur": [
         3,
         103,
         11,
         33,
         6,
         2,
         5,
         5,
         2,
         2,
         34,
         "3",
         "21",
         4,
         16,
         "42",
         3,
         9,
         3,
         3,
         6,
         4,
         3,
         3,
         2,
         2,
         6,
         2,
         7,
         3
      ]
   },
   {
      "problem_name": "House Robber",
      "company": [
         "Adobe",
         "Amazon",
         "Apple",
         "Bloomberg",
         "Cisco",
         "Facebook",
         "Google",
         "Microsoft",
         "Walmart Global Tech"
      ],
      "num_occur": [4, 21, 8, 2, 6, 2, "7", "5", 2]
   },
   {
      "problem_name": "Largest Number",
      "company": [
         "Adobe",
         "Amazon",
         "Apple",
         "Facebook",
         "Goldman Sachs",
         "Microsoft",
         "Oracle",
         "Salesforce",
         "Visa"
      ],
      "num_occur": [2, 2, 2, 3, "2", "4", 2, 6, 2]
   },
   {
      "problem_name": "Majority Element",
      "company": [
         "Adobe",
         "Amazon",
         "Apple",
         "Bloomberg",
         "Facebook",
         "Google",
         "Microsoft",
         "Rubrik",
         "Uber"
      ],
      "num_occur": [5, 9, 4, 3, 2, "3", "6", 2, 2]
   },
   {
      "problem_name": "Two Sum II - Input Array Is Sorted",
      "company": ["Adobe", "Amazon", "Apple", "Google", "Microsoft", "Yahoo"],
      "num_occur": [5, 11, 3, "4", "2", 2]
   },
   {
      "problem_name": "Intersection of Two Linked Lists",
      "company": [
         "Adobe",
         "Airbnb",
         "Amazon",
         "Facebook",
         "LinkedIn",
         "Microsoft",
         "Nvidia",
         "tiktok"
      ],
      "num_occur": [3, 2, 8, 4, 6, "8", 3, 3]
   },
   {
      "problem_name": "Min Stack",
      "company": [
         "Adobe",
         "Amazon",
         "Bloomberg",
         "Facebook",
         "Google",
         "Microsoft",
         "Oracle",
         "Salesforce"
      ],
      "num_occur": [2, 18, 7, 4, "3", "10", 2, 3]
   },
   {
      "problem_name": "Find Minimum in Rotated Sorted Array",
      "company": [
         "Adobe",
         "Amazon",
         "Facebook",
         "Goldman Sachs",
         "Microsoft",
         "Oracle",
         "Uber"
      ],
      "num_occur": [3, 8, 8, "2", "7", 2, 2]
   },
   {
      "problem_name": "Maximum Product Subarray",
      "company": [
         "Adobe",
         "Amazon",
         "Bloomberg",
         "Google",
         "Infosys",
         "LinkedIn",
         "Microsoft"
      ],
      "num_occur": [2, 17, 3, "2", 3, 29, "3"]
   },
   {
      "problem_name": "LRU Cache",
      "company": [
         "Adobe",
         "Amazon",
         "Apple",
         "Bloomberg",
         "ByteDance",
         "Docusign",
         "Facebook",
         "GoDaddy",
         "Goldman Sachs",
         "Google",
         "Intuit",
         "LinkedIn",
         "Microsoft",
         "Morgan Stanley",
         "Nvidia",
         "Oracle",
         "Paypal",
         "Salesforce",
         "Shopee",
         "Snapchat",
         "tiktok",
         "Twilio",
         "Uber",
         "VMware",
         "Walmart Global Tech",
         "Yahoo"
      ],
      "num_occur": [
         4,
         117,
         20,
         19,
         5,
         2,
         60,
         2,
         "6",
         "9",
         8,
         5,
         "52",
         2,
         3,
         13,
         2,
         10,
         2,
         3,
         6,
         7,
         2,
         2,
         4,
         3
      ]
   },
   {
      "problem_name": "Binary Tree Preorder Traversal",
      "company": ["Adobe", "Google"],
      "num_occur": [2, "2"]
   },
   {
      "problem_name": "Reorder List",
      "company": [
         "Adobe",
         "Amazon",
         "Bloomberg",
         "Facebook",
         "Microsoft",
         "Samsung",
         "Uber"
      ],
      "num_occur": [3, 10, 2, 2, "4", 2, 2]
   },
   {
      "problem_name": "Word Break II",
      "company": [
         "Adobe",
         "Amazon",
         "Apple",
         "Bloomberg",
         "Facebook",
         "Google",
         "Microsoft",
         "Snapchat"
      ],
      "num_occur": [4, 11, 4, 7, 22, "3", "3", 3]
   },
   {
      "problem_name": "Word Break",
      "company": [
         "Adobe",
         "Amazon",
         "Apple",
         "Bloomberg",
         "Facebook",
         "Google",
         "Microsoft",
         "Oracle",
         "Qualtrics"
      ],
      "num_occur": [3, 34, 10, 5, 33, "2", "5", 3, 7]
   },
   {
      "problem_name": "Single Number",
      "company": [
         "Adobe",
         "Amazon",
         "Apple",
         "Atlassian",
         "Bloomberg",
         "Facebook",
         "Google",
         "Microsoft",
         "Uber"
      ],
      "num_occur": [4, 8, 4, 2, 5, 4, "4", "5", 2]
   },
   {
      "problem_name": "Gas Station",
      "company": [
         "Adobe",
         "Amazon",
         "Apple",
         "Bloomberg",
         "IBM",
         "Microsoft",
         "tiktok",
         "Uber",
         "Walmart Global Tech"
      ],
      "num_occur": [3, 19, 5, 3, 8, "7", 5, 2, 3]
   },
   {
      "problem_name": "Longest Consecutive Sequence",
      "company": [
         "Adobe",
         "Amazon",
         "Apple",
         "Bloomberg",
         "eBay",
         "Google",
         "Microsoft",
         "Qualtrics",
         "Spotify",
         "Visa"
      ],
      "num_occur": [3, 9, 2, 2, 2, "7", "8", 2, 3, 2]
   },
   {
      "problem_name": "Word Ladder",
      "company": [
         "Adobe",
         "Amazon",
         "Apple",
         "Facebook",
         "LinkedIn",
         "Lyft",
         "Microsoft",
         "Qualtrics",
         "Snapchat"
      ],
      "num_occur": [4, 41, 5, 13, 7, 4, "6", 6, 4]
   },
   {
      "problem_name": "Valid Palindrome",
      "company": [
         "Adobe",
         "Amazon",
         "American Express",
         "Apple",
         "Bloomberg",
         "Facebook",
         "Microsoft",
         "Wayfair",
         "Yandex"
      ],
      "num_occur": [3, 8, 3, 5, 3, 94, "8", 2, 2]
   },
   {
      "problem_name": "Binary Tree Maximum Path Sum",
      "company": [
         "Adobe",
         "Amazon",
         "Bloomberg",
         "ByteDance",
         "DoorDash",
         "Facebook",
         "Google",
         "Microsoft",
         "Oracle",
         "Snapchat",
         "Sprinklr",
         "tiktok",
         "TuSimple",
         "Twilio",
         "Twitter"
      ],
      "num_occur": [2, 17, 2, 6, 18, 16, "6", "7", 3, 3, 2, 6, 2, 2, "2"]
   },
   {
      "problem_name": "Best Time to Buy and Sell Stock",
      "company": [
         "Adobe",
         "Alation",
         "Amazon",
         "Apple",
         "Atlassian",
         "Bloomberg",
         "ByteDance",
         "Capital One",
         "Cisco",
         "Docusign",
         "eBay",
         "Expedia",
         "Facebook",
         "Goldman Sachs",
         "Google",
         "JPMorgan",
         "Microsoft",
         "Netflix",
         "Oracle",
         "Paypal",
         "Salesforce",
         "ServiceNow",
         "tcs",
         "tiktok",
         "Uber",
         "Visa",
         "VMware",
         "Walmart Global Tech",
         "Zoho",
         "Zoom"
      ],
      "num_occur": [
         8,
         2,
         56,
         8,
         2,
         12,
         3,
         4,
         2,
         2,
         2,
         5,
         16,
         "11",
         "12",
         3,
         "14",
         2,
         4,
         2,
         2,
         2,
         2,
         2,
         7,
         2,
         2,
         3,
         2,
         2
      ]
   },
   {
      "problem_name": "Balanced Binary Tree",
      "company": ["Adobe", "Amazon", "Facebook", "Google", "Spotify"],
      "num_occur": [2, 5, 2, "2", 4]
   },
   {
      "problem_name": "Binary Tree Zigzag Level Order Traversal",
      "company": [
         "Adobe",
         "Amazon",
         "Apple",
         "Bloomberg",
         "Facebook",
         "Google",
         "LinkedIn",
         "Microsoft",
         "Oracle"
      ],
      "num_occur": [2, 28, 2, 5, 18, "3", 2, "13", 2]
   },
   {
      "problem_name": "Symmetric Tree",
      "company": [
         "Adobe",
         "Amazon",
         "Bloomberg",
         "Facebook",
         "Google",
         "LinkedIn",
         "Microsoft",
         "Uber"
      ],
      "num_occur": [2, 8, 3, 12, "5", 5, "5", 2]
   },
   {
      "problem_name": "Recover Binary Search Tree",
      "company": [
         "Adobe",
         "Amazon",
         "Apple",
         "Bloomberg",
         "Google",
         "Microsoft"
      ],
      "num_occur": [2, 15, 3, 2, "2", "4"]
   },
   {
      "problem_name": "Validate Binary Search Tree",
      "company": [
         "Adobe",
         "Amazon",
         "Bloomberg",
         "Facebook",
         "Microsoft",
         "Oracle",
         "Qualtrics",
         "tiktok",
         "VMware"
      ],
      "num_occur": [4, 25, 14, 8, "6", 2, 2, 2, 2]
   },
   {
      "problem_name": "Binary Tree Inorder Traversal",
      "company": ["Adobe", "Amazon", "Apple", "Microsoft"],
      "num_occur": [2, 4, 3, "4"]
   },
   {
      "problem_name": "Reverse Linked List II",
      "company": [
         "Adobe",
         "Amazon",
         "Apple",
         "Facebook",
         "Google",
         "Microsoft"
      ],
      "num_occur": [2, 5, 2, 7, "3", "5"]
   },
   {
      "problem_name": "Subsets II",
      "company": ["Adobe", "Amazon", "Bloomberg", "Facebook"],
      "num_occur": [2, 2, 2, 3]
   },
   { "problem_name": "Partition List", "company": ["Adobe"], "num_occur": [2] },
   {
      "problem_name": "Largest Rectangle in Histogram",
      "company": [
         "Adobe",
         "Amazon",
         "Bloomberg",
         "ByteDance",
         "DoorDash",
         "Facebook",
         "Microsoft",
         "Uber"
      ],
      "num_occur": [4, 12, 2, 2, 2, 4, "6", 4]
   },
   {
      "problem_name": "Remove Duplicates from Sorted List",
      "company": ["Adobe", "Amazon", "Bloomberg", "Facebook", "Microsoft"],
      "num_occur": [2, 6, 2, 4, "2"]
   },
   {
      "problem_name": "Search in Rotated Sorted Array II",
      "company": ["Adobe", "Amazon", "Facebook", "LinkedIn"],
      "num_occur": [3, 5, 2, 4]
   },
   {
      "problem_name": "Remove Duplicates from Sorted Array II",
      "company": ["Adobe"],
      "num_occur": [3]
   },
   {
      "problem_name": "Subsets",
      "company": [
         "Adobe",
         "Amazon",
         "Apple",
         "Bloomberg",
         "Facebook",
         "Google",
         "Microsoft",
         "Reddit",
         "Twitter",
         "Uber"
      ],
      "num_occur": [2, 13, 3, 4, 38, "7", "3", 3, "3", 2]
   },
   {
      "problem_name": "Minimum Window Substring",
      "company": [
         "Adobe",
         "Airbnb",
         "Amazon",
         "Apple",
         "Facebook",
         "LinkedIn",
         "Lyft",
         "Microsoft",
         "Oracle",
         "Snapchat"
      ],
      "num_occur": [3, 6, 11, 4, 20, 10, 9, "7", 2, 2]
   },
   {
      "problem_name": "Sort Colors",
      "company": [
         "Adobe",
         "Amazon",
         "Facebook",
         "Grab",
         "Intel",
         "Microsoft",
         "Nvidia",
         "Salesforce",
         "Uber",
         "VMware"
      ],
      "num_occur": [3, 8, 2, 3, 2, "8", 3, 3, 2, 3]
   },
   {
      "problem_name": "Search a 2D Matrix",
      "company": [
         "Adobe",
         "Amazon",
         "Apple",
         "Bloomberg",
         "Facebook",
         "Goldman Sachs",
         "Microsoft",
         "Nvidia",
         "Oracle",
         "Salesforce"
      ],
      "num_occur": [3, 12, 4, 5, 14, "2", "7", 2, 2, 2]
   },
   {
      "problem_name": "Climbing Stairs",
      "company": [
         "Adobe",
         "Amazon",
         "Bloomberg",
         "Expedia",
         "Goldman Sachs",
         "Google",
         "Microsoft",
         "Uber",
         "Yahoo"
      ],
      "num_occur": [3, 14, 2, 7, "2", "4", "7", 4, 3]
   },
   {
      "problem_name": "Sqrt(x)",
      "company": [
         "Adobe",
         "Amazon",
         "Apple",
         "Bloomberg",
         "Google",
         "LinkedIn",
         "Microsoft"
      ],
      "num_occur": [4, 9, 5, 2, "4", 9, "3"]
   },
   {
      "problem_name": "Add Binary",
      "company": ["Adobe", "Amazon", "Facebook", "Google", "Snapchat", "Uber"],
      "num_occur": [2, 6, 10, "2", 3, 2]
   },
   {
      "problem_name": "Plus One",
      "company": [
         "Adobe",
         "Amazon",
         "Apple",
         "ByteDance",
         "Facebook",
         "Google"
      ],
      "num_occur": [2, 5, 2, 2, 11, "5"]
   },
   {
      "problem_name": "Unique Paths",
      "company": [
         "Adobe",
         "Amazon",
         "Apple",
         "Bloomberg",
         "Facebook",
         "Google",
         "Microsoft"
      ],
      "num_occur": [4, 8, 7, 4, 11, "15", "9"]
   },
   {
      "problem_name": "Permutation Sequence",
      "company": ["Adobe", "Facebook"],
      "num_occur": [2, 2]
   },
   {
      "problem_name": "Merge Intervals",
      "company": [
         "Adobe",
         "Amazon",
         "Apple",
         "Bloomberg",
         "ByteDance",
         "Cisco",
         "Facebook",
         "Google",
         "IBM",
         "Intuit",
         "LinkedIn",
         "Microsoft",
         "Morgan Stanley",
         "Nvidia",
         "Oracle",
         "Salesforce",
         "Shopee",
         "Snapchat",
         "tiktok",
         "Twitter",
         "Uber",
         "VMware",
         "Walmart Global Tech",
         "Yandex"
      ],
      "num_occur": [
         8,
         87,
         18,
         20,
         2,
         2,
         110,
         "28",
         8,
         2,
         7,
         "15",
         2,
         2,
         4,
         19,
         4,
         5,
         2,
         "3",
         14,
         5,
         5,
         4
      ]
   },
   {
      "problem_name": "Spiral Matrix",
      "company": [
         "Adobe",
         "Amazon",
         "Apple",
         "Facebook",
         "Google",
         "LiveRamp",
         "Microsoft",
         "Uber",
         "Zillow"
      ],
      "num_occur": [3, 13, 11, 10, "8", 3, "26", 2, 2]
   },
   {
      "problem_name": "Maximum Subarray",
      "company": [
         "Adobe",
         "Amazon",
         "Apple",
         "Bloomberg",
         "ByteDance",
         "Cisco",
         "Docusign",
         "Facebook",
         "Goldman Sachs",
         "Google",
         "Infosys",
         "JPMorgan",
         "LinkedIn",
         "Microsoft",
         "Oracle",
         "PayTM",
         "Salesforce",
         "Samsung",
         "ServiceNow",
         "Shopee",
         "Uber",
         "VMware",
         "Walmart Global Tech"
      ],
      "num_occur": [
         12,
         35,
         17,
         4,
         3,
         11,
         3,
         11,
         "2",
         "11",
         2,
         5,
         43,
         "15",
         3,
         2,
         3,
         3,
         2,
         5,
         4,
         4,
         2
      ]
   },
   {
      "problem_name": "N-Queens",
      "company": [
         "Adobe",
         "Amazon",
         "Bloomberg",
         "ByteDance",
         "Facebook",
         "Google",
         "Microsoft",
         "tiktok"
      ],
      "num_occur": [3, 7, 3, 3, 4, "3", "4", 2]
   },
   {
      "problem_name": "Pow(x, n)",
      "company": [
         "Adobe",
         "Amazon",
         "Apple",
         "Bloomberg",
         "Facebook",
         "Google",
         "LinkedIn",
         "Microsoft",
         "Yahoo"
      ],
      "num_occur": [3, 9, 5, 8, 162, "5", 7, "5", 3]
   },
   {
      "problem_name": "Group Anagrams",
      "company": [
         "Adobe",
         "Affirm",
         "Alation",
         "Amazon",
         "Apple",
         "BlackRock",
         "Cisco",
         "eBay",
         "Facebook",
         "Goldman Sachs",
         "Google",
         "IBM",
         "JPMorgan",
         "Microsoft",
         "Oracle",
         "Salesforce",
         "ServiceNow",
         "tiktok",
         "Twilio",
         "Uber",
         "Visa",
         "VMware",
         "Walmart Global Tech",
         "Yahoo"
      ],
      "num_occur": [
         4,
         4,
         2,
         51,
         11,
         6,
         2,
         4,
         17,
         "2",
         "5",
         2,
         8,
         "29",
         4,
         3,
         3,
         2,
         3,
         3,
         3,
         2,
         5,
         2
      ]
   },
   {
      "problem_name": "Rotate Image",
      "company": [
         "Adobe",
         "Amazon",
         "Apple",
         "Bloomberg",
         "Cisco",
         "Facebook",
         "Google",
         "Microsoft",
         "Rubrik",
         "Uber"
      ],
      "num_occur": [5, 8, 8, 3, 16, 12, "4", "9", 2, 2]
   },
   {
      "problem_name": "Permutations",
      "company": [
         "Adobe",
         "Amazon",
         "Apple",
         "Bloomberg",
         "Facebook",
         "Goldman Sachs",
         "Google",
         "LinkedIn",
         "Microsoft"
      ],
      "num_occur": [3, 9, 4, 2, 7, "2", "5", 6, "5"]
   },
   {
      "problem_name": "Jump Game II",
      "company": [
         "Adobe",
         "Amazon",
         "Apple",
         "Bloomberg",
         "DoorDash",
         "Google",
         "Microsoft",
         "payu",
         "Tesla",
         "tiktok"
      ],
      "num_occur": [2, 13, 4, 3, 3, "3", "2", 2, 2, 3]
   },
   {
      "problem_name": "Multiply Strings",
      "company": [
         "Adobe",
         "Amazon",
         "Facebook",
         "Google",
         "Microsoft",
         "Two Sigma"
      ],
      "num_occur": [2, 5, 14, "5", "12", "4"]
   },
   {
      "problem_name": "Trapping Rain Water",
      "company": [
         "Adobe",
         "Amazon",
         "Apple",
         "Bloomberg",
         "Citadel",
         "Facebook",
         "Goldman Sachs",
         "Google",
         "Intel",
         "Intuit",
         "Microsoft",
         "National Instruments",
         "Oracle",
         "Paypal",
         "Qualtrics",
         "Rubrik",
         "Sapient",
         "ServiceNow",
         "Snapchat",
         "Tesla",
         "Uber",
         "Visa"
      ],
      "num_occur": [
         7,
         45,
         8,
         15,
         2,
         34,
         "38",
         "8",
         3,
         2,
         "9",
         2,
         3,
         3,
         4,
         4,
         2,
         2,
         3,
         3,
         5,
         2
      ]
   },
   {
      "problem_name": "First Missing Positive",
      "company": [
         "Adobe",
         "Amazon",
         "Databricks",
         "Facebook",
         "Google",
         "Grab",
         "Microsoft",
         "Walmart Global Tech"
      ],
      "num_occur": [8, 20, 2, 4, "5", 2, "16", 2]
   },
   {
      "problem_name": "Combination Sum",
      "company": [
         "Adobe",
         "Airbnb",
         "Amazon",
         "Apple",
         "Bloomberg",
         "ByteDance",
         "Facebook",
         "LinkedIn",
         "Microsoft"
      ],
      "num_occur": [3, 5, 18, 4, 3, 3, 12, 3, "6"]
   },
   {
      "problem_name": "Count and Say",
      "company": [
         "Adobe",
         "Amazon",
         "Apple",
         "Facebook",
         "Google",
         "Walmart Global Tech"
      ],
      "num_occur": [2, 2, 2, 5, "3", 2]
   },
   {
      "problem_name": "Sudoku Solver",
      "company": [
         "Adobe",
         "Amazon",
         "Apple",
         "DoorDash",
         "Facebook",
         "Google",
         "Intuit",
         "Microsoft",
         "Nutanix",
         "Salesforce",
         "tiktok",
         "Uber"
      ],
      "num_occur": [3, 7, 6, 4, 2, "5", 4, "5", 2, 2, 3, 3]
   },
   {
      "problem_name": "Search Insert Position",
      "company": [
         "Adobe",
         "Amazon",
         "Apple",
         "Bloomberg",
         "Facebook",
         "Google",
         "tiktok",
         "Uber",
         "VMware"
      ],
      "num_occur": [7, 9, 7, 3, 2, "4", 2, 2, 2]
   },
   {
      "problem_name": "Search in Rotated Sorted Array",
      "company": [
         "Adobe",
         "Amazon",
         "Apple",
         "Bloomberg",
         "ByteDance",
         "Expedia",
         "Facebook",
         "Goldman Sachs",
         "Google",
         "LinkedIn",
         "Microsoft",
         "Morgan Stanley",
         "Nvidia",
         "Oracle",
         "Salesforce",
         "ServiceNow",
         "Splunk",
         "tiktok",
         "Visa",
         "VMware",
         "Walmart Global Tech"
      ],
      "num_occur": [
         7,
         31,
         7,
         7,
         6,
         2,
         30,
         "2",
         "3",
         17,
         "24",
         2,
         2,
         5,
         2,
         3,
         2,
         4,
         3,
         3,
         5
      ]
   },
   {
      "problem_name": "Divide Two Integers",
      "company": [
         "Adobe",
         "Amazon",
         "Bloomberg",
         "Facebook",
         "Google",
         "Microsoft",
         "Yahoo"
      ],
      "num_occur": [2, 9, 2, 11, "5", "3", 2]
   },
   {
      "problem_name": "Remove Element",
      "company": ["Adobe", "Amazon", "Apple", "Google", "Microsoft"],
      "num_occur": [2, 5, 4, "2", "2"]
   },
   {
      "problem_name": "Remove Duplicates from Sorted Array",
      "company": [
         "Adobe",
         "Amazon",
         "Apple",
         "Bloomberg",
         "Facebook",
         "Google",
         "LinkedIn",
         "Microsoft",
         "VMware"
      ],
      "num_occur": [7, 9, 4, 4, 16, "4", 5, "6", 2]
   },
   {
      "problem_name": "Swap Nodes in Pairs",
      "company": [
         "Adobe",
         "Amazon",
         "Apple",
         "Bloomberg",
         "Facebook",
         "Microsoft"
      ],
      "num_occur": [2, 8, 2, 2, 9, "7"]
   },
   {
      "problem_name": "Merge k Sorted Lists",
      "company": [
         "Adobe",
         "Amazon",
         "Apple",
         "Bloomberg",
         "ByteDance",
         "Facebook",
         "Google",
         "Indeed",
         "LinkedIn",
         "Microsoft",
         "Oracle",
         "Shopee",
         "Sprinklr",
         "tiktok",
         "TuSimple",
         "VMware",
         "Walmart Global Tech",
         "Yandex"
      ],
      "num_occur": [4, 47, 8, 2, 8, 59, "8", 3, 3, "17", 3, 2, 2, 2, 2, 4, 2, 3]
   },
   {
      "problem_name": "Generate Parentheses",
      "company": [
         "Adobe",
         "Amazon",
         "Apple",
         "Bloomberg",
         "ByteDance",
         "C3 IoT",
         "Facebook",
         "Google",
         "Microsoft",
         "Oracle",
         "Tesla",
         "Uber",
         "Walmart Global Tech"
      ],
      "num_occur": [4, 15, 9, 3, 2, 3, 16, "4", "13", 3, 2, 3, 3]
   },
   {
      "problem_name": "Valid Parentheses",
      "company": [
         "Adobe",
         "Amazon",
         "Apple",
         "Arista Networks",
         "Barclays",
         "Bloomberg",
         "Booking.com",
         "Cisco",
         "Dataminr",
         "Expedia",
         "Facebook",
         "Goldman Sachs",
         "Google",
         "Intel",
         "LinkedIn",
         "Microsoft",
         "Netflix",
         "Oracle",
         "Salesforce",
         "ServiceNow",
         "Spotify",
         "tcs",
         "tiktok",
         "Uber",
         "VMware",
         "Yandex"
      ],
      "num_occur": [
         8,
         43,
         8,
         3,
         2,
         14,
         2,
         5,
         2,
         6,
         24,
         "2",
         "6",
         4,
         33,
         "22",
         2,
         6,
         2,
         2,
         13,
         2,
         3,
         2,
         5,
         3
      ]
   },
   {
      "problem_name": "4Sum",
      "company": [
         "Adobe",
         "Amazon",
         "Apple",
         "Facebook",
         "Google",
         "Infosys",
         "LinkedIn",
         "Microsoft",
         "Yahoo"
      ],
      "num_occur": [3, 6, 5, 5, "2", 2, 2, "4", 2]
   },
   {
      "problem_name": "3Sum Closest",
      "company": [
         "Adobe",
         "Amazon",
         "Apple",
         "Facebook",
         "Goldman Sachs",
         "Google",
         "Microsoft"
      ],
      "num_occur": [4, 15, 3, 25, "2", "3", "3"]
   },
   {
      "problem_name": "3Sum",
      "company": [
         "Adobe",
         "Amazon",
         "American Express",
         "Apple",
         "Bloomberg",
         "ByteDance",
         "Cisco",
         "Facebook",
         "Goldman Sachs",
         "Google",
         "Infosys",
         "Microsoft",
         "Morgan Stanley",
         "Oracle",
         "Qualtrics",
         "Salesforce",
         "Tesla",
         "tiktok",
         "Uber",
         "VMware",
         "Walmart Global Tech",
         "Yahoo"
      ],
      "num_occur": [
         9,
         44,
         2,
         10,
         6,
         3,
         2,
         28,
         "4",
         "8",
         2,
         "20",
         3,
         2,
         5,
         3,
         2,
         4,
         6,
         3,
         7,
         5
      ]
   },
   {
      "problem_name": "Longest Common Prefix",
      "company": [
         "Adobe",
         "Amazon",
         "Apple",
         "Bloomberg",
         "Facebook",
         "Google",
         "Microsoft",
         "Quora",
         "SAP",
         "Uber"
      ],
      "num_occur": [11, 9, 14, 5, 26, "12", "5", 3, 3, 4]
   },
   {
      "problem_name": "Roman to Integer",
      "company": [
         "Adobe",
         "Amazon",
         "Apple",
         "Bloomberg",
         "Facebook",
         "Google",
         "Microsoft",
         "tiktok",
         "Yahoo"
      ],
      "num_occur": [16, 27, 13, 10, 8, "10", "6", 5, 4]
   },
   {
      "problem_name": "Integer to Roman",
      "company": [
         "Adobe",
         "Amazon",
         "Apple",
         "Bloomberg",
         "Capital One",
         "Google",
         "Microsoft",
         "tiktok"
      ],
      "num_occur": [2, 27, 3, 5, 3, "2", "5", 2]
   },
   {
      "problem_name": "Container With Most Water",
      "company": [
         "Adobe",
         "Amazon",
         "Apple",
         "Bloomberg",
         "Facebook",
         "Goldman Sachs",
         "Google",
         "Microsoft",
         "Swiggy"
      ],
      "num_occur": [9, 21, 5, 5, 8, "3", "5", "9", 4]
   },
   {
      "problem_name": "Regular Expression Matching",
      "company": [
         "Adobe",
         "Amazon",
         "Apple",
         "Bloomberg",
         "Facebook",
         "Google",
         "Microsoft",
         "Nvidia",
         "Uber"
      ],
      "num_occur": [2, 8, 2, 3, 19, "9", "11", 4, 2]
   },
   {
      "problem_name": "String to Integer (atoi)",
      "company": [
         "Adobe",
         "Amazon",
         "Apple",
         "Bloomberg",
         "Facebook",
         "Goldman Sachs",
         "Google",
         "Microsoft",
         "Redfin"
      ],
      "num_occur": [4, 9, 2, 5, 32, "3", "6", "16", 3]
   },
   {
      "problem_name": "Reverse Integer",
      "company": [
         "Adobe",
         "Amazon",
         "Apple",
         "Bloomberg",
         "Facebook",
         "Google",
         "Microsoft",
         "Oracle",
         "Samsung",
         "Visa",
         "Yahoo"
      ],
      "num_occur": [13, 11, 4, 2, 4, "5", "2", 2, 2, 2, 2]
   },
   {
      "problem_name": "Zigzag Conversion",
      "company": ["Adobe", "Amazon", "Paypal"],
      "num_occur": [4, 5, 2]
   },
   {
      "problem_name": "Longest Palindromic Substring",
      "company": [
         "Adobe",
         "Amazon",
         "Apple",
         "Bloomberg",
         "Facebook",
         "Goldman Sachs",
         "Google",
         "Microsoft",
         "Oracle"
      ],
      "num_occur": [12, 35, 7, 6, 7, "5", "12", "18", 7]
   },
   {
      "problem_name": "Median of Two Sorted Arrays",
      "company": [
         "Adobe",
         "Amazon",
         "Apple",
         "Bloomberg",
         "Facebook",
         "Goldman Sachs",
         "Google",
         "LinkedIn",
         "Microsoft",
         "Paypal",
         "ServiceNow",
         "VMware",
         "Walmart Global Tech",
         "Yandex"
      ],
      "num_occur": [19, 40, 15, 2, 7, "18", "14", 2, "15", 3, 4, 2, 2, 2]
   },
   {
      "problem_name": "Longest Substring Without Repeating Characters",
      "company": [
         "Adobe",
         "Amazon",
         "Apple",
         "Bloomberg",
         "Facebook",
         "Goldman Sachs",
         "Google",
         "Intuit",
         "JPMorgan",
         "Microsoft",
         "Oracle",
         "Paypal",
         "Salesforce",
         "Samsung",
         "Spotify",
         "Uber",
         "VMware",
         "Walmart Global Tech",
         "Yahoo",
         "Yandex",
         "Zoho"
      ],
      "num_occur": [
         6,
         49,
         16,
         23,
         23,
         "4",
         "13",
         2,
         2,
         "29",
         4,
         2,
         3,
         2,
         10,
         5,
         5,
         3,
         4,
         2,
         2
      ]
   },
   {
      "problem_name": "Add Two Numbers",
      "company": [
         "Adobe",
         "Amazon",
         "Apple",
         "Bloomberg",
         "Capital One",
         "Facebook",
         "Google",
         "Huawei",
         "JPMorgan",
         "Microsoft",
         "Oracle",
         "SAP",
         "Uber",
         "Visa",
         "Yahoo"
      ],
      "num_occur": [10, 36, 19, 16, 2, 19, "10", 2, 3, "17", 4, 2, 4, 2, 6]
   },
   {
      "problem_name": "Optimal Account Balancing",
      "company": ["Affirm", "Amazon", "Google", "Uber"],
      "num_occur": [2, 2, "4", 8]
   },
   {
      "problem_name": "Insert Delete GetRandom O(1) - Duplicates allowed",
      "company": ["Affirm", "Facebook", "LinkedIn"],
      "num_occur": [3, 5, 4]
   },
   {
      "problem_name": "Insert Delete GetRandom O(1)",
      "company": [
         "Affirm",
         "Amazon",
         "Bloomberg",
         "Facebook",
         "Google",
         "LinkedIn",
         "Microsoft",
         "Twitter",
         "Uber"
      ],
      "num_occur": [10, 17, 23, 23, "4", 15, "12", "5", 7]
   },
   {
      "problem_name": "Design Hit Counter",
      "company": [
         "Affirm",
         "Amazon",
         "Apple",
         "Databricks",
         "Google",
         "Microsoft",
         "Twitter",
         "Uber"
      ],
      "num_occur": [6, 9, 2, 9, "2", "8", "7", 2]
   },
   {
      "problem_name": "Valid Anagram",
      "company": [
         "Affirm",
         "Amazon",
         "Apple",
         "Bloomberg",
         "Facebook",
         "Goldman Sachs",
         "Google",
         "Microsoft",
         "Spotify"
      ],
      "num_occur": [3, 8, 2, 8, 8, "3", "2", "6", 8]
   },
   {
      "problem_name": "Find the Smallest Divisor Given a Threshold",
      "company": ["Airbnb", "Salesforce"],
      "num_occur": [2, 3]
   },
   {
      "problem_name": "Smallest Common Region",
      "company": ["Airbnb"],
      "num_occur": [7]
   },
   {
      "problem_name": "Pyramid Transition Matrix",
      "company": ["Airbnb", "Amazon", "Google"],
      "num_occur": [1, 2, "2"]
   },
   { "problem_name": "Pour Water", "company": ["Airbnb"], "num_occur": [6] },
   {
      "problem_name": "Design Circular Queue",
      "company": [
         "Airbnb",
         "Amazon",
         "Apple",
         "Facebook",
         "Microsoft",
         "Nvidia"
      ],
      "num_occur": [3, 4, 3, 4, "4", 3]
   },
   {
      "problem_name": "Tag Validator",
      "company": ["Airbnb", "Amazon"],
      "num_occur": [2, 2]
   },
   { "problem_name": "Mini Parser", "company": ["Airbnb"], "num_occur": [1] },
   {
      "problem_name": "Flatten Nested List Iterator",
      "company": [
         "Airbnb",
         "Amazon",
         "Apple",
         "Facebook",
         "LinkedIn",
         "Salesforce",
         "Twitter",
         "Uber"
      ],
      "num_occur": [4, 2, 5, 4, 8, 2, "3", 2]
   },
   {
      "problem_name": "Palindrome Pairs",
      "company": [
         "Airbnb",
         "Apple",
         "Facebook",
         "Google",
         "Microsoft",
         "Shopee"
      ],
      "num_occur": [14, 3, 2, "3", "2", 3]
   },
   {
      "problem_name": "Alien Dictionary",
      "company": [
         "Airbnb",
         "Amazon",
         "Bloomberg",
         "Facebook",
         "Google",
         "Microsoft",
         "Pinterest",
         "Snapchat",
         "Uber"
      ],
      "num_occur": [14, 10, 4, 16, "7", "3", 2, 2, 3]
   },
   {
      "problem_name": "Flatten 2D Vector",
      "company": ["Airbnb"],
      "num_occur": [9]
   },
   {
      "problem_name": "Fraction to Recurring Decimal",
      "company": ["Airbnb", "Facebook", "Goldman Sachs", "Mathworks"],
      "num_occur": [3, 4, "3", 5]
   },
   {
      "problem_name": "N-Repeated Element in Size 2N Array",
      "company": ["Akamai"],
      "num_occur": [1]
   },
   {
      "problem_name": "Increasing Decreasing String",
      "company": ["Akuna Capital", "Amazon"],
      "num_occur": [8, 2]
   },
   {
      "problem_name": "H-Index",
      "company": ["Alation", "Amazon", "Apple", "Facebook", "Google"],
      "num_occur": [3, 2, 2, 2, "9"]
   },
   {
      "problem_name": "Path Sum IV",
      "company": ["Alibaba", "Facebook"],
      "num_occur": [1, 2]
   },
   {
      "problem_name": "Split Concatenated Strings",
      "company": ["Alibaba"],
      "num_occur": [1]
   },
   {
      "problem_name": "Number Of Rectangles That Can Form The Largest Square",
      "company": ["AllinCall"],
      "num_occur": [1]
   },
   {
      "problem_name": "Minimum Average Difference",
      "company": ["Amazon"],
      "num_occur": [1]
   },
   {
      "problem_name": "Minimum Rounds to Complete All Tasks",
      "company": ["Amazon"],
      "num_occur": [1]
   },
   {
      "problem_name": "Partition Array According to Given Pivot",
      "company": ["Amazon"],
      "num_occur": [1]
   },
   {
      "problem_name": "Minimum Sum of Four Digit Number After Splitting Digits",
      "company": ["Amazon"],
      "num_occur": [1]
   },
   {
      "problem_name": "Rearrange Array Elements by Sign",
      "company": ["Amazon"],
      "num_occur": [1]
   },
   {
      "problem_name": "Minimum Swaps to Group All 1's Together II",
      "company": ["Amazon"],
      "num_occur": [2]
   },
   {
      "problem_name": "Maximum Twin Sum of a Linked List",
      "company": ["Amazon"],
      "num_occur": [23]
   },
   {
      "problem_name": "Number of Laser Beams in a Bank",
      "company": ["Amazon"],
      "num_occur": [6]
   },
   {
      "problem_name": "Check if a Parentheses String Can Be Valid",
      "company": ["Amazon"],
      "num_occur": [2]
   },
   {
      "problem_name": "Number of Smooth Descent Periods of a Stock",
      "company": ["Amazon"],
      "num_occur": [4]
   },
   {
      "problem_name": "Adding Spaces to a String",
      "company": ["Amazon"],
      "num_occur": [1]
   },
   {
      "problem_name": "Two Furthest Houses With Different Colors",
      "company": ["Amazon"],
      "num_occur": [2]
   },
   {
      "problem_name": "Decode the Slanted Ciphertext",
      "company": ["Amazon"],
      "num_occur": [1]
   },
   {
      "problem_name": "Plates Between Candles",
      "company": ["Amazon", "tiktok"],
      "num_occur": [3, 3]
   },
   {
      "problem_name": "Kth Distinct String in an Array",
      "company": ["Amazon"],
      "num_occur": [1]
   },
   {
      "problem_name": "Number of Valid Words in a Sentence",
      "company": ["Amazon"],
      "num_occur": [2]
   },
   {
      "problem_name": "Maximize the Confusion of an Exam",
      "company": ["Amazon"],
      "num_occur": [2]
   },
   {
      "problem_name": "Sum of Beauty in the Array",
      "company": ["Amazon"],
      "num_occur": [1]
   },
   {
      "problem_name": "Count Number of Pairs With Absolute Difference K",
      "company": ["Amazon"],
      "num_occur": [1]
   },
   {
      "problem_name": "Minimize the Difference Between Target and Chosen Elements",
      "company": ["Amazon"],
      "num_occur": [1]
   },
   {
      "problem_name": "Find Unique Binary String",
      "company": ["Amazon"],
      "num_occur": [2]
   },
   {
      "problem_name": "Find if Path Exists in Graph",
      "company": ["Amazon", "Google"],
      "num_occur": [4, "3"]
   },
   {
      "problem_name": "Array With Elements Not Equal to Average of Neighbors",
      "company": ["Amazon"],
      "num_occur": [2]
   },
   {
      "problem_name": "Nearest Exit from Entrance in Maze",
      "company": ["Amazon"],
      "num_occur": [2]
   },
   {
      "problem_name": "Count Square Sum Triples",
      "company": ["Amazon"],
      "num_occur": [2]
   },
   {
      "problem_name": "Remove All Occurrences of a Substring",
      "company": ["Amazon", "Google", "MakeMyTrip", "Microsoft"],
      "num_occur": [2, "2", 2, "3"]
   },
   {
      "problem_name": "Longer Contiguous Segments of Ones than Zeros",
      "company": ["Amazon"],
      "num_occur": [2]
   },
   {
      "problem_name": "Maximum Average Pass Ratio",
      "company": ["Amazon"],
      "num_occur": [2]
   },
   {
      "problem_name": "Sort Features by Popularity",
      "company": ["Amazon"],
      "num_occur": [2]
   },
   {
      "problem_name": "Minimum Number of Operations to Move All Balls to Each Box",
      "company": ["Amazon"],
      "num_occur": [2]
   },
   {
      "problem_name": "Form Array by Concatenating Subarrays of Another Array",
      "company": ["Amazon"],
      "num_occur": [1]
   },
   {
      "problem_name": "Check if Array Is Sorted and Rotated",
      "company": ["Amazon"],
      "num_occur": [2]
   },
   {
      "problem_name": "Swapping Nodes in a Linked List",
      "company": ["Amazon", "Bloomberg", "Facebook"],
      "num_occur": [3, 2, 3]
   },
   {
      "problem_name": "Maximum Units on a Truck",
      "company": ["Amazon", "JPMorgan", "LinkedIn"],
      "num_occur": [29, 2, 2]
   },
   {
      "problem_name": "Max Number of K-Sum Pairs",
      "company": ["Amazon"],
      "num_occur": [2]
   },
   {
      "problem_name": "Minimize Deviation in Array",
      "company": ["Amazon"],
      "num_occur": [2]
   },
   {
      "problem_name": "Design Front Middle Back Queue",
      "company": ["Amazon"],
      "num_occur": [3]
   },
   {
      "problem_name": "Minimum Operations to Reduce X to Zero",
      "company": ["Amazon", "Google"],
      "num_occur": [2, "3"]
   },
   {
      "problem_name": "Lowest Common Ancestor of a Binary Tree III",
      "company": [
         "Amazon",
         "Facebook",
         "Google",
         "LinkedIn",
         "Microsoft",
         "Spotify",
         "Sumologic"
      ],
      "num_occur": [3, 156, "3", 5, "5", 2, 2]
   },
   {
      "problem_name": "Furthest Building You Can Reach",
      "company": ["Amazon", "Google", "Microsoft"],
      "num_occur": [5, "3", "2"]
   },
   {
      "problem_name": "Sort Array by Increasing Frequency",
      "company": ["Amazon", "C3 IoT", "Google", "Oracle", "Twilio"],
      "num_occur": [5, 2, "2", 3, 2]
   },
   {
      "problem_name": "Slowest Key",
      "company": ["Amazon", "Walmart Global Tech"],
      "num_occur": [17, 2]
   },
   {
      "problem_name": "Design an Expression Tree With Evaluate Function",
      "company": ["Amazon"],
      "num_occur": [7]
   },
   {
      "problem_name": "Design Parking System",
      "company": ["Amazon"],
      "num_occur": [12]
   },
   {
      "problem_name": "Shortest Subarray to be Removed to Make Array Sorted",
      "company": ["Amazon", "Flipkart"],
      "num_occur": [4, 2]
   },
   {
      "problem_name": "Matrix Diagonal Sum",
      "company": ["Amazon", "Bloomberg"],
      "num_occur": [2, 2]
   },
   {
      "problem_name": "Dot Product of Two Sparse Vectors",
      "company": ["Amazon", "Bloomberg", "Facebook", "Google", "Microsoft"],
      "num_occur": [2, 2, 121, "4", "2"]
   },
   {
      "problem_name": "Minimum Numbers of Function Calls to Make Target Array",
      "company": ["Amazon"],
      "num_occur": [1]
   },
   {
      "problem_name": "Minimum Number of Vertices to Reach All Nodes",
      "company": ["Amazon", "Google"],
      "num_occur": [2, "2"]
   },
   {
      "problem_name": "Kth Missing Positive Number",
      "company": ["Amazon", "Facebook", "Google", "Microsoft", "tiktok"],
      "num_occur": [2, 28, "2", "2", 3]
   },
   {
      "problem_name": "Number of Good Ways to Split a String",
      "company": ["Amazon"],
      "num_occur": [2]
   },
   {
      "problem_name": "Water Bottles",
      "company": ["Amazon", "IBM", "Microsoft"],
      "num_occur": [2, 4, "1"]
   },
   {
      "problem_name": "Can Make Arithmetic Progression From Sequence",
      "company": ["Amazon"],
      "num_occur": [1]
   },
   {
      "problem_name": "The kth Factor of n",
      "company": ["Amazon", "Expedia"],
      "num_occur": [25, 6]
   },
   {
      "problem_name": "Average Salary Excluding the Minimum and Maximum Salary",
      "company": ["Amazon", "Netsuite"],
      "num_occur": [2, 1]
   },
   {
      "problem_name": "Least Number of Unique Integers after K Removals",
      "company": ["Amazon", "Booking.com", "Expedia", "Salesforce"],
      "num_occur": [5, 3, 4, 2]
   },
   {
      "problem_name": "Final Prices With a Special Discount in a Shop",
      "company": ["Amazon"],
      "num_occur": [2]
   },
   {
      "problem_name": "Design Browser History",
      "company": ["Amazon", "Bloomberg", "Oracle", "Roblox"],
      "num_occur": [3, 9, 2, 5]
   },
   {
      "problem_name": "Shuffle the Array",
      "company": ["Amazon", "Apple"],
      "num_occur": [2, 3]
   },
   {
      "problem_name": "Reorder Routes to Make All Paths Lead to the City Zero",
      "company": ["Amazon", "American Express", "DRW", "Grab"],
      "num_occur": [3, 3, 4, 2]
   },
   {
      "problem_name": "Maximum Number of Vowels in a Substring of Given Length",
      "company": ["Amazon"],
      "num_occur": [1]
   },
   {
      "problem_name": "Check If a Word Occurs As a Prefix of Any Word in a Sentence",
      "company": ["Amazon"],
      "num_occur": [2]
   },
   {
      "problem_name": "Rearrange Words in a Sentence",
      "company": ["Amazon", "Expedia", "VMware"],
      "num_occur": [2, 1, 2]
   },
   {
      "problem_name": "Longest Continuous Subarray With Absolute Diff Less Than or Equal to Limit",
      "company": ["Amazon", "Google", "Uber"],
      "num_occur": [12, "3", 14]
   },
   {
      "problem_name": "Kids With the Greatest Number of Candies",
      "company": ["Amazon"],
      "num_occur": [3]
   },
   {
      "problem_name": "First Unique Number",
      "company": ["Amazon", "Facebook"],
      "num_occur": [4, 2]
   },
   {
      "problem_name": "Minimum Value to Get Positive Step by Step Sum",
      "company": ["Amazon", "JPMorgan"],
      "num_occur": [2, 2]
   },
   {
      "problem_name": "Queries on a Permutation With Key",
      "company": ["Amazon"],
      "num_occur": [1]
   },
   {
      "problem_name": "String Matching in an Array",
      "company": ["Amazon", "Bloomberg"],
      "num_occur": [3, 2]
   },
   {
      "problem_name": "Minimum Subsequence in Non-Increasing Order",
      "company": ["Amazon", "Mercari"],
      "num_occur": [2, 1]
   },
   {
      "problem_name": "Count Number of Teams",
      "company": ["Amazon", "Facebook", "Goldman Sachs"],
      "num_occur": [3, 2, "7"]
   },
   {
      "problem_name": "Longest Happy Prefix",
      "company": ["Amazon"],
      "num_occur": [2]
   },
   {
      "problem_name": "Create Target Array in the Given Order",
      "company": ["Amazon", "Apple", "Visa"],
      "num_occur": [2, 2, 1]
   },
   {
      "problem_name": "Cinema Seat Allocation",
      "company": ["Amazon", "Microsoft"],
      "num_occur": [2, "17"]
   },
   {
      "problem_name": "Find a Corresponding Node of a Binary Tree in a Clone of That Tree",
      "company": ["Amazon"],
      "num_occur": [2]
   },
   {
      "problem_name": "Frog Position After T Seconds",
      "company": ["Amazon", "Google"],
      "num_occur": [2, "2"]
   },
   {
      "problem_name": "Time Needed to Inform All Employees",
      "company": ["Amazon", "Google"],
      "num_occur": [6, "11"]
   },
   {
      "problem_name": "Maximum Sum BST in Binary Tree",
      "company": ["Amazon"],
      "num_occur": [3]
   },
   {
      "problem_name": "Longest ZigZag Path in a Binary Tree",
      "company": ["Amazon"],
      "num_occur": [6]
   },
   {
      "problem_name": "Linked List in Binary Tree",
      "company": ["Amazon", "Microsoft"],
      "num_occur": [2, "2"]
   },
   {
      "problem_name": "How Many Numbers Are Smaller Than the Current Number",
      "company": ["Amazon", "Yahoo"],
      "num_occur": [2, 2]
   },
   {
      "problem_name": "Closest Divisors",
      "company": ["Amazon"],
      "num_occur": [1]
   },
   {
      "problem_name": "Number of Days Between Two Dates",
      "company": ["Amazon"],
      "num_occur": [5]
   },
   {
      "problem_name": "Maximum Number of Events That Can Be Attended",
      "company": ["Amazon", "JPMorgan", "Salesforce"],
      "num_occur": [3, 2, 2]
   },
   {
      "problem_name": "Product of the Last K Numbers",
      "company": ["Amazon", "Apple", "Cruise Automation", "Google"],
      "num_occur": [3, 2, 2, "7"]
   },
   {
      "problem_name": "Jump Game IV",
      "company": ["Amazon", "Google", "tiktok"],
      "num_occur": [4, "5", 2]
   },
   {
      "problem_name": "Angle Between Hands of a Clock",
      "company": ["Amazon", "Facebook", "Microsoft", "Oracle"],
      "num_occur": [3, 11, "5", 2]
   },
   {
      "problem_name": "The K Weakest Rows in a Matrix",
      "company": ["Amazon"],
      "num_occur": [1]
   },
   {
      "problem_name": "Maximum Product of Splitted Binary Tree",
      "company": ["Amazon", "Two Sigma"],
      "num_occur": [4, "4"]
   },
   {
      "problem_name": "Reduce Array Size to The Half",
      "company": ["Amazon"],
      "num_occur": [2]
   },
   {
      "problem_name": "Delete Leaves With a Given Value",
      "company": ["Amazon"],
      "num_occur": [2]
   },
   {
      "problem_name": "Sum of Nodes with Even-Valued Grandparent",
      "company": ["Amazon"],
      "num_occur": [2]
   },
   {
      "problem_name": "Matrix Block Sum",
      "company": ["Amazon"],
      "num_occur": [2]
   },
   {
      "problem_name": "Decompress Run-Length Encoded List",
      "company": ["Amazon", "Apple"],
      "num_occur": [2, 3]
   },
   {
      "problem_name": "All Elements in Two Binary Search Trees",
      "company": ["Amazon", "Bloomberg", "Facebook", "Google"],
      "num_occur": [2, 2, 5, "2"]
   },
   {
      "problem_name": "Maximum Number of Occurrences of a Substring",
      "company": ["Amazon"],
      "num_occur": [2]
   },
   {
      "problem_name": "Find Numbers with Even Number of Digits",
      "company": ["Amazon"],
      "num_occur": [2]
   },
   {
      "problem_name": "Sequential Digits",
      "company": ["Amazon", "Apple"],
      "num_occur": [3, 2]
   },
   {
      "problem_name": "Convert Binary Number in a Linked List to Integer",
      "company": ["Amazon", "Oracle"],
      "num_occur": [2, 2]
   },
   {
      "problem_name": "Find Winner on a Tic Tac Toe Game",
      "company": ["Amazon", "Facebook", "Google", "Microsoft", "Tesla"],
      "num_occur": [14, 4, "11", "10", 2]
   },
   {
      "problem_name": "Synonymous Sentences",
      "company": ["Amazon", "Cruise Automation"],
      "num_occur": [3, 3]
   },
   { "problem_name": "Two Sum BSTs", "company": ["Amazon"], "num_occur": [3] },
   {
      "problem_name": "Remove All Adjacent Duplicates in String II",
      "company": [
         "Amazon",
         "Apple",
         "Bloomberg",
         "Facebook",
         "Goldman Sachs",
         "Microsoft",
         "Spotify",
         "Visa"
      ],
      "num_occur": [8, 3, 26, 7, "2", "2", 2, 2]
   },
   {
      "problem_name": "Diet Plan Performance",
      "company": ["Amazon"],
      "num_occur": [1]
   },
   {
      "problem_name": "Prime Arrangements",
      "company": ["Amazon"],
      "num_occur": [2]
   },
   {
      "problem_name": "Remove Zero Sum Consecutive Nodes from Linked List",
      "company": ["Amazon"],
      "num_occur": [2]
   },
   {
      "problem_name": "Find Words That Can Be Formed by Characters",
      "company": ["Amazon", "Google", "Indeed", "Karat"],
      "num_occur": [2, "2", 6, 12]
   },
   {
      "problem_name": "Analyze User Website Visit Pattern",
      "company": ["Amazon", "Spotify"],
      "num_occur": [50, 6]
   },
   {
      "problem_name": "Minimum Swaps to Group All 1's Together",
      "company": ["Amazon"],
      "num_occur": [21]
   },
   {
      "problem_name": "Longest Common Subsequence",
      "company": ["Amazon", "Bloomberg", "DoorDash", "Karat"],
      "num_occur": [6, 3, 5, 2]
   },
   {
      "problem_name": "Alphabet Board Path",
      "company": ["Amazon"],
      "num_occur": [2]
   },
   {
      "problem_name": "N-th Tribonacci Number",
      "company": ["Amazon"],
      "num_occur": [3]
   },
   {
      "problem_name": "Parallel Courses",
      "company": ["Amazon"],
      "num_occur": [2]
   },
   {
      "problem_name": "Armstrong Number",
      "company": ["Amazon"],
      "num_occur": [1]
   },
   {
      "problem_name": "Largest Unique Number",
      "company": ["Amazon"],
      "num_occur": [1]
   },
   {
      "problem_name": "Remove Vowels from a String",
      "company": ["Amazon"],
      "num_occur": [3]
   },
   {
      "problem_name": "Number of Days in a Month",
      "company": ["Amazon"],
      "num_occur": [1]
   },
   {
      "problem_name": "Defanging an IP Address",
      "company": ["Amazon", "Google"],
      "num_occur": [2, "2"]
   },
   {
      "problem_name": "Find K-Length Substrings With No Repeated Characters",
      "company": ["Amazon"],
      "num_occur": [4]
   },
   {
      "problem_name": "Two Sum Less Than K",
      "company": ["Amazon", "Facebook"],
      "num_occur": [3, 3]
   },
   {
      "problem_name": "Car Pooling",
      "company": [
         "Amazon",
         "Bloomberg",
         "Cruise Automation",
         "DoorDash",
         "Facebook",
         "Flipkart",
         "Google",
         "Microsoft"
      ],
      "num_occur": [9, 3, 2, 4, 2, 4, "3", "3"]
   },
   {
      "problem_name": "Brace Expansion",
      "company": ["Amazon", "Google"],
      "num_occur": [2, "4"]
   },
   {
      "problem_name": "Sum of Digits in the Minimum Number",
      "company": ["Amazon"],
      "num_occur": [1]
   },
   {
      "problem_name": "Campus Bikes II",
      "company": ["Amazon", "Google"],
      "num_occur": [2, "2"]
   },
   {
      "problem_name": "Index Pairs of a String",
      "company": ["Amazon"],
      "num_occur": [1]
   },
   { "problem_name": "Campus Bikes", "company": ["Amazon"], "num_occur": [2] },
   {
      "problem_name": "Remove All Adjacent Duplicates In String",
      "company": ["Amazon", "Facebook"],
      "num_occur": [4, 40]
   },
   {
      "problem_name": "Last Stone Weight",
      "company": ["Amazon", "Nvidia", "Salesforce", "Visa"],
      "num_occur": [4, 8, 2, 11]
   },
   {
      "problem_name": "Binary Search Tree to Greater Sum Tree",
      "company": ["Amazon", "Facebook"],
      "num_occur": [2, 2]
   },
   {
      "problem_name": "Maximum Difference Between Node and Ancestor",
      "company": ["Amazon", "Facebook", "Google"],
      "num_occur": [4, 2, "2"]
   },
   {
      "problem_name": "Video Stitching",
      "company": ["Amazon", "Google"],
      "num_occur": [2, "2"]
   },
   {
      "problem_name": "Sum of Root To Leaf Binary Numbers",
      "company": ["Amazon", "Apple", "Yahoo"],
      "num_occur": [2, 2, 2]
   },
   {
      "problem_name": "Next Greater Node In Linked List",
      "company": ["Amazon", "Bloomberg"],
      "num_occur": [5, 2]
   },
   {
      "problem_name": "Pairs of Songs With Total Durations Divisible by 60",
      "company": [
         "Amazon",
         "Apple",
         "Bloomberg",
         "C3 IoT",
         "Cisco",
         "Citadel",
         "Oracle",
         "ServiceNow"
      ],
      "num_occur": [14, 2, 3, 3, 2, 8, 2, 2]
   },
   {
      "problem_name": "Construct Binary Search Tree from Preorder Traversal",
      "company": ["Amazon", "Bloomberg", "Facebook", "Microsoft"],
      "num_occur": [4, 2, 2, "3"]
   },
   {
      "problem_name": "Maximize Sum Of Array After K Negations",
      "company": ["Amazon", "Druva"],
      "num_occur": [2, 1]
   },
   {
      "problem_name": "Max Consecutive Ones III",
      "company": [
         "Amazon",
         "Apple",
         "Bloomberg",
         "ByteDance",
         "Facebook",
         "Google",
         "Microsoft"
      ],
      "num_occur": [2, 2, 2, 2, 26, "3", "3"]
   },
   {
      "problem_name": "Find Common Characters",
      "company": ["Amazon"],
      "num_occur": [4]
   },
   {
      "problem_name": "Time Based Key-Value Store",
      "company": ["Amazon", "Google", "Lyft", "Microsoft", "Oracle", "tiktok"],
      "num_occur": [9, "4", 7, "5", 3, 3]
   },
   {
      "problem_name": "Rotting Oranges",
      "company": ["Amazon", "LinkedIn", "Microsoft", "VMware"],
      "num_occur": [35, 2, "12", 4]
   },
   {
      "problem_name": "Cousins in Binary Tree",
      "company": ["Amazon", "Facebook", "Microsoft"],
      "num_occur": [3, 2, "2"]
   },
   {
      "problem_name": "Vertical Order Traversal of a Binary Tree",
      "company": ["Amazon", "Bloomberg", "Facebook", "Microsoft", "Uber"],
      "num_occur": [10, 7, 82, "6", 2]
   },
   {
      "problem_name": "Unique Paths III",
      "company": ["Amazon", "Facebook"],
      "num_occur": [3, 2]
   },
   {
      "problem_name": "Distribute Coins in Binary Tree",
      "company": ["Amazon", "Apple", "Microsoft", "PhonePe"],
      "num_occur": [2, 2, "4", 2]
   },
   {
      "problem_name": "Squares of a Sorted Array",
      "company": ["Amazon", "Facebook", "Google", "Microsoft", "Paypal"],
      "num_occur": [13, 29, "5", "5", 2]
   },
   {
      "problem_name": "Subarray Sums Divisible by K",
      "company": ["Amazon", "Facebook", "Snapchat", "Twilio"],
      "num_occur": [3, 3, 3, 3]
   },
   {
      "problem_name": "K Closest Points to Origin",
      "company": [
         "Amazon",
         "Asana",
         "Facebook",
         "Google",
         "LinkedIn",
         "Microsoft",
         "Sumologic"
      ],
      "num_occur": [49, 5, 127, "3", 2, "6", 2]
   },
   {
      "problem_name": "Powerful Integers",
      "company": ["Amazon"],
      "num_occur": [2]
   },
   {
      "problem_name": "Verifying an Alien Dictionary",
      "company": ["Amazon", "Facebook", "LinkedIn", "Uber"],
      "num_occur": [2, 21, 2, 3]
   },
   {
      "problem_name": "Validate Stack Sequences",
      "company": ["Amazon", "Microsoft", "tiktok"],
      "num_occur": [4, "2", 2]
   },
   {
      "problem_name": "Valid Mountain Array",
      "company": ["Amazon"],
      "num_occur": [2]
   },
   {
      "problem_name": "Range Sum of BST",
      "company": ["Amazon", "Apple", "Facebook"],
      "num_occur": [4, 3, 149]
   },
   {
      "problem_name": "Knight Dialer",
      "company": [
         "Amazon",
         "Bloomberg",
         "Facebook",
         "Microsoft",
         "Snapchat",
         "Twilio"
      ],
      "num_occur": [3, 10, 6, "2", 2, 2]
   },
   {
      "problem_name": "Minimum Add to Make Parentheses Valid",
      "company": ["Amazon", "Facebook", "Microsoft", "Twitter"],
      "num_occur": [3, 100, "3", "2"]
   },
   {
      "problem_name": "Maximum Sum Circular Subarray",
      "company": ["Amazon", "Google"],
      "num_occur": [6, "3"]
   },
   {
      "problem_name": "Reverse Only Letters",
      "company": ["Amazon"],
      "num_occur": [2]
   },
   {
      "problem_name": "Sort an Array",
      "company": ["Amazon", "Bloomberg"],
      "num_occur": [3, 2]
   },
   {
      "problem_name": "Fruit Into Baskets",
      "company": ["Amazon"],
      "num_occur": [4]
   },
   {
      "problem_name": "Monotonic Array",
      "company": ["Amazon", "Facebook"],
      "num_occur": [2, 12]
   },
   {
      "problem_name": "Surface Area of 3D Shapes",
      "company": ["Amazon"],
      "num_occur": [2]
   },
   {
      "problem_name": "Fair Candy Swap",
      "company": ["Amazon", "Uber"],
      "num_occur": [2, 2]
   },
   {
      "problem_name": "Boats to Save People",
      "company": [
         "Amazon",
         "Apple",
         "Bloomberg",
         "Intuit",
         "Microsoft",
         "Salesforce",
         "Uber"
      ],
      "num_occur": [4, 2, 2, 3, "2", 5, 2]
   },
   {
      "problem_name": "Decoded String at Index",
      "company": ["Amazon"],
      "num_occur": [2]
   },
   { "problem_name": "Stone Game", "company": ["Amazon"], "num_occur": [2] },
   {
      "problem_name": "Transpose Matrix",
      "company": ["Amazon", "Apple", "Citadel", "Microsoft"],
      "num_occur": [2, 3, 2, "2"]
   },
   {
      "problem_name": "Score After Flipping Matrix",
      "company": ["Amazon", "IIT Bombay"],
      "num_occur": [2, 1]
   },
   {
      "problem_name": "Lemonade Change",
      "company": ["Amazon", "Apple", "Atlassian"],
      "num_occur": [3, 2, 4]
   },
   {
      "problem_name": "Score of Parentheses",
      "company": ["Amazon", "Bloomberg", "Facebook", "Infosys", "tiktok"],
      "num_occur": [4, 3, 4, 2, 2]
   },
   {
      "problem_name": "Peak Index in a Mountain Array",
      "company": ["Amazon", "Apple", "Bloomberg", "Google"],
      "num_occur": [10, 3, 3, "2"]
   },
   {
      "problem_name": "Maximize Distance to Closest Person",
      "company": ["Amazon", "Google", "Microsoft", "Yandex"],
      "num_occur": [3, "3", "5", 8]
   },
   {
      "problem_name": "Keys and Rooms",
      "company": ["Amazon", "Hotstar"],
      "num_occur": [6, 2]
   },
   {
      "problem_name": "Binary Trees With Factors",
      "company": ["Amazon"],
      "num_occur": [2]
   },
   {
      "problem_name": "Short Encoding of Words",
      "company": ["Amazon", "HBO"],
      "num_occur": [2, 2]
   },
   {
      "problem_name": "Most Common Word",
      "company": ["Amazon"],
      "num_occur": [2]
   },
   {
      "problem_name": "Max Increase to Keep City Skyline",
      "company": ["Amazon", "Google"],
      "num_occur": [2, "3"]
   },
   {
      "problem_name": "Max Chunks To Make Sorted",
      "company": ["Amazon", "Wayfair"],
      "num_occur": [2, 2]
   },
   {
      "problem_name": "Reorganize String",
      "company": ["Amazon", "eBay", "Facebook", "Google", "Oracle", "Uber"],
      "num_occur": [17, 3, 9, "4", 2, 2]
   },
   {
      "problem_name": "Partition Labels",
      "company": ["Amazon", "Google"],
      "num_occur": [4, "2"]
   },
   {
      "problem_name": "Prime Number of Set Bits in Binary Representation",
      "company": ["Amazon"],
      "num_occur": [1]
   },
   {
      "problem_name": "Reach a Number",
      "company": ["Amazon"],
      "num_occur": [5]
   },
   {
      "problem_name": "Find Smallest Letter Greater Than Target",
      "company": ["Amazon", "Bloomberg", "LinkedIn"],
      "num_occur": [2, 2, 4]
   },
   {
      "problem_name": "Network Delay Time",
      "company": ["Amazon", "Google"],
      "num_occur": [3, "8"]
   },
   {
      "problem_name": "Delete and Earn",
      "company": ["Amazon", "Goldman Sachs", "Google"],
      "num_occur": [5, "11", "2"]
   },
   {
      "problem_name": "Daily Temperatures",
      "company": [
         "Amazon",
         "C3 IoT",
         "Facebook",
         "Microsoft",
         "Salesforce",
         "Uber"
      ],
      "num_occur": [10, 3, 17, "5", 2, 2]
   },
   {
      "problem_name": "Monotone Increasing Digits",
      "company": ["Amazon", "Microsoft", "SAP"],
      "num_occur": [1, "2", 9]
   },
   {
      "problem_name": "Sentence Similarity II",
      "company": ["Amazon"],
      "num_occur": [2]
   },
   {
      "problem_name": "Asteroid Collision",
      "company": [
         "Amazon",
         "DoorDash",
         "Facebook",
         "Goldman Sachs",
         "Hotstar",
         "Lyft",
         "Microsoft",
         "Oracle",
         "tiktok"
      ],
      "num_occur": [14, 7, 10, "3", 3, 4, "4", 3, 5]
   },
   {
      "problem_name": "My Calendar I",
      "company": ["Amazon", "Google", "Uber"],
      "num_occur": [4, "3", 4]
   },
   {
      "problem_name": "Split Linked List in Parts",
      "company": ["Amazon", "Apple", "Oracle"],
      "num_occur": [2, 2, 2]
   },
   {
      "problem_name": "Accounts Merge",
      "company": [
         "Amazon",
         "Apple",
         "Facebook",
         "Google",
         "LinkedIn",
         "Pinterest",
         "Twitter"
      ],
      "num_occur": [2, 4, 34, "3", 2, 2, "3"]
   },
   {
      "problem_name": "Max Stack",
      "company": [
         "Amazon",
         "Facebook",
         "LinkedIn",
         "Lyft",
         "Microsoft",
         "VMware",
         "Yandex"
      ],
      "num_occur": [3, 3, 33, 2, "3", 3, 3]
   },
   {
      "problem_name": "Best Time to Buy and Sell Stock with Transaction Fee",
      "company": ["Amazon", "Facebook"],
      "num_occur": [3, 2]
   },
   {
      "problem_name": "Subarray Product Less Than K",
      "company": ["Amazon", "Facebook", "Goldman Sachs"],
      "num_occur": [3, 3, "2"]
   },
   { "problem_name": "To Lower Case", "company": ["Amazon"], "num_occur": [2] },
   {
      "problem_name": "Design HashMap",
      "company": [
         "Amazon",
         "Apple",
         "Goldman Sachs",
         "LinkedIn",
         "Microsoft",
         "Oracle",
         "Salesforce",
         "Walmart Global Tech"
      ],
      "num_occur": [10, 3, "3", 5, "6", 4, 3, 3]
   },
   {
      "problem_name": "Design HashSet",
      "company": ["Amazon", "Microsoft"],
      "num_occur": [3, "2"]
   },
   {
      "problem_name": "Insert into a Binary Search Tree",
      "company": ["Amazon", "Goldman Sachs", "LinkedIn"],
      "num_occur": [2, "2", 3]
   },
   {
      "problem_name": "Search in a Binary Search Tree",
      "company": ["Amazon"],
      "num_occur": [2]
   },
   {
      "problem_name": "Partition to K Equal Sum Subsets",
      "company": ["Amazon", "Google", "LinkedIn"],
      "num_occur": [2, "2", 10]
   },
   {
      "problem_name": "Max Area of Island",
      "company": [
         "Amazon",
         "Apple",
         "Dropbox",
         "Facebook",
         "Google",
         "LinkedIn",
         "Microsoft",
         "Oracle",
         "Qualtrics"
      ],
      "num_occur": [19, 3, 2, 18, "9", 3, "10", 2, 4]
   },
   {
      "problem_name": "Number of Distinct Islands",
      "company": ["Amazon", "Bloomberg", "DoorDash", "Microsoft"],
      "num_occur": [8, 2, 2, "4"]
   },
   {
      "problem_name": "Top K Frequent Words",
      "company": [
         "Amazon",
         "Apple",
         "Bloomberg",
         "Facebook",
         "Google",
         "Microsoft",
         "Two Sigma",
         "Uber",
         "Yahoo"
      ],
      "num_occur": [12, 3, 4, 4, "7", "8", "2", 17, 4]
   },
   {
      "problem_name": "Knight Probability in Chessboard",
      "company": ["Amazon"],
      "num_occur": [3]
   },
   {
      "problem_name": "Longest Univalue Path",
      "company": ["Amazon", "Microsoft"],
      "num_occur": [2, "2"]
   },
   {
      "problem_name": "Redundant Connection II",
      "company": ["Amazon"],
      "num_occur": [2]
   },
   {
      "problem_name": "Valid Palindrome II",
      "company": [
         "Amazon",
         "Apple",
         "Bloomberg",
         "Facebook",
         "Microsoft",
         "Oracle",
         "Walmart Global Tech"
      ],
      "num_occur": [5, 3, 2, 252, "3", 2, 2]
   },
   {
      "problem_name": "Valid Parenthesis String",
      "company": ["Amazon", "Facebook", "Google", "LinkedIn", "Yahoo"],
      "num_occur": [5, 4, "3", 10, 3]
   },
   {
      "problem_name": "Cut Off Trees for Golf Event",
      "company": ["Amazon", "Apple"],
      "num_occur": [3, 2]
   },
   {
      "problem_name": "Number of Longest Increasing Subsequence",
      "company": ["Amazon", "Google"],
      "num_occur": [2, "2"]
   },
   {
      "problem_name": "Maximum Swap",
      "company": ["Amazon", "ByteDance", "Facebook", "tiktok"],
      "num_occur": [4, 2, 36, 8]
   },
   {
      "problem_name": "Trim a Binary Search Tree",
      "company": ["Amazon", "Facebook", "Microsoft", "Yahoo"],
      "num_occur": [3, 3, "2", 2]
   },
   {
      "problem_name": "Equal Tree Partition",
      "company": ["Amazon"],
      "num_occur": [2]
   },
   {
      "problem_name": "Maximum Width of Binary Tree",
      "company": ["Amazon", "Bloomberg", "Facebook", "Google", "Microsoft"],
      "num_occur": [6, 2, 3, "4", "3"]
   },
   {
      "problem_name": "Find K Closest Elements",
      "company": [
         "Amazon",
         "Bloomberg",
         "Facebook",
         "Google",
         "Oracle",
         "tiktok",
         "Uber"
      ],
      "num_occur": [3, 2, 21, "4", 2, 4, 2]
   },
   {
      "problem_name": "Print Binary Tree",
      "company": ["Amazon", "LinkedIn"],
      "num_occur": [2, 3]
   },
   {
      "problem_name": "Maximum Binary Tree",
      "company": ["Amazon"],
      "num_occur": [2]
   },
   {
      "problem_name": "Two Sum IV - Input is a BST",
      "company": ["Amazon", "Uber"],
      "num_occur": [2, 2]
   },
   {
      "problem_name": "Find Duplicate Subtrees",
      "company": ["Amazon", "Bloomberg", "Google"],
      "num_occur": [7, 2, "13"]
   },
   {
      "problem_name": "2 Keys Keyboard",
      "company": ["Amazon", "Microsoft"],
      "num_occur": [4, "3"]
   },
   {
      "problem_name": "Maximum Length of Pair Chain",
      "company": ["Amazon", "Flipkart"],
      "num_occur": [2, 2]
   },
   {
      "problem_name": "Design Search Autocomplete System",
      "company": [
         "Amazon",
         "Google",
         "LinkedIn",
         "Microsoft",
         "Snapchat",
         "Twitter"
      ],
      "num_occur": [9, "9", 2, "4", 2, "2"]
   },
   {
      "problem_name": "Solve the Equation",
      "company": ["Amazon", "Google"],
      "num_occur": [4, "3"]
   },
   {
      "problem_name": "Shopping Offers",
      "company": ["Amazon", "Apple", "Facebook", "Google"],
      "num_occur": [2, 2, 2, "3"]
   },
   {
      "problem_name": "Average of Levels in Binary Tree",
      "company": ["Amazon", "Facebook", "Microsoft"],
      "num_occur": [4, 5, "2"]
   },
   {
      "problem_name": "Find the Derangement of An Array",
      "company": ["Amazon", "IXL"],
      "num_occur": [2, 1]
   },
   {
      "problem_name": "Sum of Square Numbers",
      "company": ["Amazon", "Bloomberg"],
      "num_occur": [2, 2]
   },
   {
      "problem_name": "Task Scheduler",
      "company": ["Amazon", "Facebook", "Microsoft", "Rubrik", "Uber"],
      "num_occur": [3, 3, "2", 2, 2]
   },
   {
      "problem_name": "Merge Two Binary Trees",
      "company": ["Amazon", "Facebook", "Uber", "Yahoo"],
      "num_occur": [3, 6, 2, 3]
   },
   {
      "problem_name": "Valid Triangle Number",
      "company": ["Amazon", "Bloomberg", "LinkedIn"],
      "num_occur": [2, 2, 2]
   },
   {
      "problem_name": "Can Place Flowers",
      "company": ["Amazon", "Bloomberg", "Facebook", "LinkedIn", "Yahoo"],
      "num_occur": [3, 3, 13, 21, 2]
   },
   {
      "problem_name": "Range Addition II",
      "company": ["Amazon"],
      "num_occur": [2]
   },
   {
      "problem_name": "N-ary Tree Postorder Traversal",
      "company": ["Amazon"],
      "num_occur": [2]
   },
   {
      "problem_name": "Design In-Memory File System",
      "company": [
         "Amazon",
         "DoorDash",
         "Goldman Sachs",
         "Google",
         "Microsoft",
         "Salesforce"
      ],
      "num_occur": [16, 4, "2", "3", "10", 3]
   },
   {
      "problem_name": "Delete Operation for Two Strings",
      "company": ["Amazon"],
      "num_occur": [2]
   },
   {
      "problem_name": "Kill Process",
      "company": ["Amazon", "Microsoft"],
      "num_occur": [8, "2"]
   },
   {
      "problem_name": "Shortest Unsorted Continuous Subarray",
      "company": ["Amazon", "Microsoft"],
      "num_occur": [5, "3"]
   },
   {
      "problem_name": "Out of Boundary Paths",
      "company": ["Amazon", "Baidu"],
      "num_occur": [3, 1]
   },
   {
      "problem_name": "Subtree of Another Tree",
      "company": ["Amazon", "Facebook", "Google", "Microsoft"],
      "num_occur": [6, 5, "2", "3"]
   },
   {
      "problem_name": "Permutation in String",
      "company": [
         "Amazon",
         "Apple",
         "Bloomberg",
         "ByteDance",
         "Google",
         "Microsoft",
         "Oracle",
         "Yandex"
      ],
      "num_occur": [3, 4, 2, 2, "2", "5", 4, 4]
   },
   {
      "problem_name": "Reverse Words in a String III",
      "company": [
         "Amazon",
         "Apple",
         "Bolt",
         "Facebook",
         "Microsoft",
         "PayTM",
         "Yandex"
      ],
      "num_occur": [3, 2, 3, 2, "5", 2, 2]
   },
   {
      "problem_name": "Optimal Division",
      "company": ["Amazon"],
      "num_occur": [1]
   },
   {
      "problem_name": "Number of Provinces",
      "company": ["Amazon", "Apple", "Bloomberg"],
      "num_occur": [3, 3, 2]
   },
   {
      "problem_name": "Boundary of Binary Tree",
      "company": ["Amazon", "Bloomberg", "Facebook", "Microsoft"],
      "num_occur": [12, 2, 3, "9"]
   },
   {
      "problem_name": "Diameter of Binary Tree",
      "company": [
         "Amazon",
         "Apple",
         "Bloomberg",
         "Facebook",
         "Google",
         "Microsoft"
      ],
      "num_occur": [12, 2, 4, 89, "3", "3"]
   },
   {
      "problem_name": "Single Element in a Sorted Array",
      "company": [
         "Amazon",
         "Apple",
         "Facebook",
         "Google",
         "Microsoft",
         "Nvidia"
      ],
      "num_occur": [9, 2, 5, "3", "5", 2]
   },
   {
      "problem_name": "Minimum Time Difference",
      "company": ["Amazon", "Google"],
      "num_occur": [2, "30"]
   },
   {
      "problem_name": "Convert BST to Greater Tree",
      "company": ["Amazon", "Bloomberg", "Facebook"],
      "num_occur": [3, 2, 3]
   },
   {
      "problem_name": "Complex Number Multiplication",
      "company": ["Amazon"],
      "num_occur": [1]
   },
   {
      "problem_name": "Encode and Decode TinyURL",
      "company": ["Amazon", "Bloomberg", "Microsoft"],
      "num_occur": [4, 2, "5"]
   },
   {
      "problem_name": "Minesweeper",
      "company": [
         "Amazon",
         "Bloomberg",
         "Docusign",
         "Facebook",
         "LiveRamp",
         "Microsoft",
         "Uber"
      ],
      "num_occur": [2, 2, 2, 6, 3, "2", 7]
   },
   {
      "problem_name": "Random Pick with Weight",
      "company": [
         "Amazon",
         "Apple",
         "Facebook",
         "Google",
         "LinkedIn",
         "Microsoft",
         "Twitter",
         "Uber"
      ],
      "num_occur": [11, 2, 140, "27", 8, "2", "2", 13]
   },
   {
      "problem_name": "Contiguous Array",
      "company": ["Amazon", "Apple", "Facebook", "Microsoft"],
      "num_occur": [7, 2, 3, "2"]
   },
   {
      "problem_name": "Continuous Subarray Sum",
      "company": [
         "Amazon",
         "Apple",
         "ByteDance",
         "Facebook",
         "Google",
         "tiktok",
         "Walmart Global Tech"
      ],
      "num_occur": [5, 2, 3, 56, "2", 2, 2]
   },
   {
      "problem_name": "Detect Capital",
      "company": ["Amazon", "Google"],
      "num_occur": [2, "2"]
   },
   {
      "problem_name": "Longest Palindromic Subsequence",
      "company": [
         "Amazon",
         "Apple",
         "Bloomberg",
         "LinkedIn",
         "Microsoft",
         "Oracle"
      ],
      "num_occur": [6, 2, 2, 5, "3", 2]
   },
   { "problem_name": "Reverse Pairs", "company": ["Amazon"], "num_occur": [3] },
   {
      "problem_name": "The Maze",
      "company": [
         "Amazon",
         "ByteDance",
         "Facebook",
         "Google",
         "Microsoft",
         "Snapchat",
         "Square"
      ],
      "num_occur": [2, 4, 2, "3", "2", 3, 2]
   },
   {
      "problem_name": "Number Complement",
      "company": ["Amazon", "Apple"],
      "num_occur": [2, 2]
   },
   {
      "problem_name": "Heaters",
      "company": ["Amazon", "Microsoft"],
      "num_occur": [2, "2"]
   },
   {
      "problem_name": "Concatenated Words",
      "company": ["Amazon", "Microsoft"],
      "num_occur": [30, "3"]
   },
   {
      "problem_name": "Validate IP Address",
      "company": ["Amazon", "Cisco", "Microsoft"],
      "num_occur": [2, 8, "2"]
   },
   {
      "problem_name": "Count The Repetitions",
      "company": ["Amazon"],
      "num_occur": [3]
   },
   {
      "problem_name": "Island Perimeter",
      "company": ["Amazon", "Facebook", "Google"],
      "num_occur": [2, 10, "3"]
   },
   {
      "problem_name": "LFU Cache",
      "company": [
         "Amazon",
         "Apple",
         "Google",
         "LinkedIn",
         "Microsoft",
         "Oracle",
         "Snapchat",
         "VMware",
         "Walmart Global Tech"
      ],
      "num_occur": [8, 2, "4", 2, "11", 2, 3, 2, 2]
   },
   { "problem_name": "132 Pattern", "company": ["Amazon"], "num_occur": [4] },
   {
      "problem_name": "Sort Characters By Frequency",
      "company": ["Amazon", "Apple", "Bloomberg", "Facebook", "Microsoft"],
      "num_occur": [2, 2, 2, 3, "5"]
   },
   {
      "problem_name": "Delete Node in a BST",
      "company": ["Amazon", "Google", "LinkedIn", "Microsoft", "Oracle"],
      "num_occur": [8, "3", 3, "6", 4]
   },
   {
      "problem_name": "Serialize and Deserialize BST",
      "company": ["Amazon", "LinkedIn", "Microsoft"],
      "num_occur": [3, 2, "2"]
   },
   {
      "problem_name": "Find All Numbers Disappeared in an Array",
      "company": ["Amazon", "Apple", "Facebook", "Microsoft"],
      "num_occur": [5, 2, 7, "2"]
   },
   {
      "problem_name": "Add Two Numbers II",
      "company": ["Amazon", "Bloomberg", "Microsoft", "Oracle"],
      "num_occur": [3, 6, "4", 2]
   },
   {
      "problem_name": "String Compression",
      "company": [
         "Amazon",
         "Apple",
         "Expedia",
         "Facebook",
         "Goldman Sachs",
         "Microsoft",
         "Redfin",
         "Visa",
         "Yandex"
      ],
      "num_occur": [8, 6, 8, 5, "6", "6", 3, 4, 3]
   },
   {
      "problem_name": "Find Right Interval",
      "company": ["Amazon", "Wish"],
      "num_occur": [2, 2]
   },
   {
      "problem_name": "Non-overlapping Intervals",
      "company": ["Amazon", "Facebook", "Microsoft"],
      "num_occur": [4, 7, "2"]
   },
   {
      "problem_name": "All O`one Data Structure",
      "company": ["Amazon", "LinkedIn", "VMware"],
      "num_occur": [3, 17, 2]
   },
   {
      "problem_name": "Flatten a Multilevel Doubly Linked List",
      "company": ["Amazon", "Bloomberg", "Google", "Oracle"],
      "num_occur": [2, 28, "2", 2]
   },
   {
      "problem_name": "Strong Password Checker",
      "company": ["Amazon", "Google"],
      "num_occur": [6, "3"]
   },
   {
      "problem_name": "Battleships in a Board",
      "company": [
         "Amazon",
         "Apple",
         "Facebook",
         "GoDaddy",
         "Google",
         "Microsoft",
         "Twitch"
      ],
      "num_occur": [2, 2, 4, 2, "10", "4", 7]
   },
   {
      "problem_name": "Pacific Atlantic Water Flow",
      "company": ["Amazon", "Google", "Salesforce", "Uber"],
      "num_occur": [2, "10", 2, 3]
   },
   {
      "problem_name": "Partition Equal Subset Sum",
      "company": [
         "Amazon",
         "Apple",
         "Facebook",
         "Google",
         "Microsoft",
         "Walmart Global Tech"
      ],
      "num_occur": [4, 2, 11, "2", "5", 2]
   },
   {
      "problem_name": "Add Strings",
      "company": [
         "Amazon",
         "Apple",
         "Bloomberg",
         "Facebook",
         "Google",
         "Microsoft",
         "Oracle",
         "Wayfair"
      ],
      "num_occur": [3, 2, 3, 54, "5", "9", 4, 20]
   },
   {
      "problem_name": "Third Maximum Number",
      "company": ["Amazon", "Apple", "Google"],
      "num_occur": [2, 2, "2"]
   },
   {
      "problem_name": "Arithmetic Slices",
      "company": ["Amazon", "Bloomberg"],
      "num_occur": [2, 2]
   },
   {
      "problem_name": "Split Array Largest Sum",
      "company": [
         "Amazon",
         "Apple",
         "ByteDance",
         "Facebook",
         "Google",
         "tiktok"
      ],
      "num_occur": [6, 2, 2, 5, "8", 6]
   },
   {
      "problem_name": "Longest Palindrome",
      "company": ["Amazon"],
      "num_occur": [2]
   },
   {
      "problem_name": "Convert a Number to Hexadecimal",
      "company": ["Amazon", "Google"],
      "num_occur": [2, "2"]
   },
   {
      "problem_name": "Frog Jump",
      "company": ["Amazon", "ByteDance", "Google", "Microsoft", "tiktok"],
      "num_occur": [6, 2, "2", "3", 2]
   },
   {
      "problem_name": "Random Pick Index",
      "company": ["Amazon", "Facebook", "Google"],
      "num_occur": [2, 21, "3"]
   },
   {
      "problem_name": "Rotate Function",
      "company": ["Amazon", "Apple", "Google"],
      "num_occur": [1, 2, "3"]
   },
   {
      "problem_name": "Longest Substring with At Least K Repeating Characters",
      "company": ["Amazon", "Microsoft"],
      "num_occur": [3, "2"]
   },
   {
      "problem_name": "Find the Difference",
      "company": ["Amazon", "Apple", "Google"],
      "num_occur": [3, 2, "6"]
   },
   {
      "problem_name": "Longest Absolute File Path",
      "company": ["Amazon", "Google"],
      "num_occur": [2, "7"]
   },
   {
      "problem_name": "First Unique Character in a String",
      "company": [
         "Amazon",
         "Apple",
         "Bloomberg",
         "Facebook",
         "Goldman Sachs",
         "Microsoft",
         "Oracle",
         "Qualtrics",
         "Yahoo"
      ],
      "num_occur": [30, 6, 13, 4, "4", "6", 5, 3, 3]
   },
   {
      "problem_name": "Linked List Random Node",
      "company": ["Amazon", "Google", "Microsoft"],
      "num_occur": [2, "1", "2"]
   },
   {
      "problem_name": "Design Phone Directory",
      "company": ["Amazon", "Dropbox"],
      "num_occur": [2, 2]
   },
   {
      "problem_name": "Combination Sum IV",
      "company": ["Amazon", "Facebook", "Google", "Microsoft"],
      "num_occur": [4, 2, "3", "2"]
   },
   {
      "problem_name": "Find K Pairs with Smallest Sums",
      "company": [
         "Amazon",
         "Apple",
         "Hotstar",
         "LinkedIn",
         "Walmart Global Tech"
      ],
      "num_occur": [2, 3, 2, 8, 2]
   },
   {
      "problem_name": "Range Addition",
      "company": ["Amazon", "Citadel"],
      "num_occur": [18, 5]
   },
   {
      "problem_name": "Find Leaves of Binary Tree",
      "company": ["Amazon", "Facebook", "Google", "LinkedIn", "Microsoft"],
      "num_occur": [2, 2, "75", 13, "4"]
   },
   {
      "problem_name": "Logger Rate Limiter",
      "company": [
         "Amazon",
         "Apple",
         "Atlassian",
         "Google",
         "Microsoft",
         "Netflix"
      ],
      "num_occur": [3, 2, 10, "22", "5", 3]
   },
   {
      "problem_name": "Design Twitter",
      "company": ["Amazon", "Google", "Walmart Global Tech"],
      "num_occur": [2, "3", 2]
   },
   {
      "problem_name": "Design Snake Game",
      "company": [
         "Amazon",
         "Atlassian",
         "Google",
         "IXL",
         "Microsoft",
         "Square",
         "tiktok"
      ],
      "num_occur": [5, 3, "2", 2, "2", 3, 3]
   },
   {
      "problem_name": "Moving Average from Data Stream",
      "company": ["Amazon", "Facebook", "Google", "Spotify"],
      "num_occur": [4, 43, "4", 16]
   },
   {
      "problem_name": "Longest Substring with At Most K Distinct Characters",
      "company": ["Amazon", "Google"],
      "num_occur": [2, "2"]
   },
   {
      "problem_name": "Nested List Weight Sum",
      "company": ["Amazon", "Facebook", "LinkedIn"],
      "num_occur": [4, 100, 34]
   },
   {
      "problem_name": "Counting Bits",
      "company": ["Amazon", "Bloomberg", "Google", "JPMorgan"],
      "num_occur": [3, 2, "2", 2]
   },
   {
      "problem_name": "Self Crossing",
      "company": ["Amazon", "Google"],
      "num_occur": [3, "2"]
   },
   {
      "problem_name": "Reconstruct Itinerary",
      "company": ["Amazon", "Facebook", "Google", "Netflix", "Twitter", "Uber"],
      "num_occur": [4, 6, "4", 2, "4", 10]
   },
   {
      "problem_name": "Patching Array",
      "company": ["Amazon"],
      "num_occur": [2]
   },
   {
      "problem_name": "Power of Three",
      "company": ["Amazon"],
      "num_occur": [2]
   },
   {
      "problem_name": "Maximum Size Subarray Sum Equals k",
      "company": ["Amazon", "Facebook"],
      "num_occur": [2, 11]
   },
   {
      "problem_name": "Number of Connected Components in an Undirected Graph",
      "company": [
         "Amazon",
         "Facebook",
         "Google",
         "LinkedIn",
         "Microsoft",
         "Pinterest"
      ],
      "num_occur": [6, 3, "2", 3, "2", 2]
   },
   {
      "problem_name": "Coin Change",
      "company": [
         "Amazon",
         "Bloomberg",
         "Facebook",
         "Goldman Sachs",
         "Google",
         "Mathworks",
         "Microsoft",
         "Yahoo"
      ],
      "num_occur": [18, 4, 2, "2", "5", 5, "14", 2]
   },
   {
      "problem_name": "Remove Duplicate Letters",
      "company": ["Amazon", "Apple", "Facebook", "Salesforce"],
      "num_occur": [2, 4, 2, 2]
   },
   {
      "problem_name": "Binary Tree Vertical Order Traversal",
      "company": ["Amazon", "Bloomberg", "Facebook", "Microsoft"],
      "num_occur": [4, 8, 188, "3"]
   },
   {
      "problem_name": "Burst Balloons",
      "company": [
         "Amazon",
         "Apple",
         "Bloomberg",
         "Google",
         "Microsoft",
         "Uber"
      ],
      "num_occur": [2, 4, 4, "7", "6", 3]
   },
   {
      "problem_name": "Sparse Matrix Multiplication",
      "company": ["Amazon", "Databricks", "Facebook", "Snapchat"],
      "num_occur": [2, 2, 10, 5]
   },
   {
      "problem_name": "Minimum Height Trees",
      "company": ["Amazon", "Snapchat"],
      "num_occur": [2, 2]
   },
   {
      "problem_name": "Range Sum Query - Mutable",
      "company": ["Amazon", "Google"],
      "num_occur": [3, "6"]
   },
   {
      "problem_name": "Range Sum Query 2D - Immutable",
      "company": ["Amazon", "Facebook", "Google", "Lyft", "Samsung"],
      "num_occur": [3, 10, "2", 4, 2]
   },
   {
      "problem_name": "Remove Invalid Parentheses",
      "company": ["Amazon", "Facebook"],
      "num_occur": [2, 36]
   },
   {
      "problem_name": "Binary Tree Longest Consecutive Sequence",
      "company": ["Amazon", "Facebook", "Google"],
      "num_occur": [2, 3, "2"]
   },
   {
      "problem_name": "Serialize and Deserialize Binary Tree",
      "company": [
         "Amazon",
         "DoorDash",
         "Google",
         "LinkedIn",
         "Microsoft",
         "Nvidia",
         "Oracle",
         "tiktok",
         "Uber"
      ],
      "num_occur": [21, 7, "3", 18, "20", 4, 3, 4, 4]
   },
   {
      "problem_name": "Find the Duplicate Number",
      "company": [
         "Amazon",
         "Apple",
         "Facebook",
         "Google",
         "Microsoft",
         "Qualcomm",
         "Uber"
      ],
      "num_occur": [16, 3, 4, "2", "11", 2, 3]
   },
   {
      "problem_name": "Walls and Gates",
      "company": [
         "Amazon",
         "Bloomberg",
         "DoorDash",
         "Facebook",
         "Google",
         "Microsoft",
         "tiktok"
      ],
      "num_occur": [4, 2, 11, 15, "5", "3", 5]
   },
   {
      "problem_name": "Peeking Iterator",
      "company": ["Amazon", "Apple", "Google", "Microsoft"],
      "num_occur": [3, 3, "8", "2"]
   },
   {
      "problem_name": "Zigzag Iterator",
      "company": ["Amazon", "Apple", "Google", "Yandex"],
      "num_occur": [2, 2, "1", 6]
   },
   { "problem_name": "Wiggle Sort", "company": ["Amazon"], "num_occur": [2] },
   {
      "problem_name": "Perfect Squares",
      "company": ["Amazon", "Apple", "Google", "Microsoft"],
      "num_occur": [2, 2, "2", "2"]
   },
   {
      "problem_name": "Find the Celebrity",
      "company": [
         "Amazon",
         "Apple",
         "Facebook",
         "LinkedIn",
         "Microsoft",
         "Pinterest"
      ],
      "num_occur": [4, 3, 2, 6, "5", 3]
   },
   {
      "problem_name": "Integer to English Words",
      "company": [
         "Amazon",
         "Apple",
         "Booking.com",
         "DoorDash",
         "Expedia",
         "Facebook",
         "Microsoft",
         "Salesforce"
      ],
      "num_occur": [19, 2, 2, 4, 3, 20, "7", 3]
   },
   {
      "problem_name": "Graph Valid Tree",
      "company": ["Amazon", "Google", "LinkedIn", "Microsoft"],
      "num_occur": [2, "3", 8, "2"]
   },
   {
      "problem_name": "Binary Tree Paths",
      "company": ["Amazon", "Bloomberg", "Facebook", "Google", "Microsoft"],
      "num_occur": [3, 3, 2, "2", "2"]
   },
   {
      "problem_name": "Paint House",
      "company": ["Amazon", "LinkedIn", "Twitter"],
      "num_occur": [3, 5, "4"]
   },
   {
      "problem_name": "Meeting Rooms II",
      "company": [
         "Amazon",
         "Bloomberg",
         "Facebook",
         "Google",
         "Microsoft",
         "Oracle",
         "Snapchat",
         "Uber",
         "Visa"
      ],
      "num_occur": [48, 20, 33, "22", "14", 13, 2, 2, 3]
   },
   {
      "problem_name": "Meeting Rooms",
      "company": ["Amazon", "Google"],
      "num_occur": [4, "2"]
   },
   {
      "problem_name": "Shortest Word Distance III",
      "company": ["Amazon", "LinkedIn"],
      "num_occur": [2, 2]
   },
   {
      "problem_name": "Shortest Word Distance",
      "company": ["Amazon", "Facebook", "LinkedIn", "Microsoft", "Salesforce"],
      "num_occur": [3, 2, 11, "2", 2]
   },
   {
      "problem_name": "Search a 2D Matrix II",
      "company": [
         "Amazon",
         "Apple",
         "Bloomberg",
         "Facebook",
         "Microsoft",
         "Oracle"
      ],
      "num_occur": [10, 2, 3, 2, "5", 2]
   },
   {
      "problem_name": "Delete Node in a Linked List",
      "company": ["Amazon", "Microsoft"],
      "num_occur": [2, "3"]
   },
   {
      "problem_name": "Lowest Common Ancestor of a Binary Tree",
      "company": [
         "Amazon",
         "Apple",
         "Facebook",
         "Google",
         "Karat",
         "LinkedIn",
         "Microsoft",
         "Oracle",
         "Sumologic"
      ],
      "num_occur": [25, 2, 180, "8", 3, 11, "10", 3, 3]
   },
   {
      "problem_name": "Lowest Common Ancestor of a Binary Search Tree",
      "company": [
         "Amazon",
         "Apple",
         "Facebook",
         "Google",
         "LinkedIn",
         "Microsoft"
      ],
      "num_occur": [3, 3, 5, "2", 18, "2"]
   },
   {
      "problem_name": "Implement Queue using Stacks",
      "company": ["Amazon", "eBay", "Goldman Sachs", "Google", "Microsoft"],
      "num_occur": [8, 2, "3", "2", "3"]
   },
   {
      "problem_name": "Power of Two",
      "company": ["Amazon", "Apple", "Google", "Snapchat"],
      "num_occur": [5, 4, "3", 2]
   },
   {
      "problem_name": "Kth Smallest Element in a BST",
      "company": ["Amazon", "Facebook", "LinkedIn", "Microsoft", "Uber"],
      "num_occur": [9, 6, 2, "2", 11]
   },
   {
      "problem_name": "Basic Calculator II",
      "company": [
         "Amazon",
         "Apple",
         "ByteDance",
         "Facebook",
         "Microsoft",
         "Oracle",
         "Snapchat",
         "Tesla",
         "Uber",
         "Yahoo"
      ],
      "num_occur": [13, 2, 4, 118, "11", 3, 3, 2, 2, 2]
   },
   {
      "problem_name": "Invert Binary Tree",
      "company": ["Amazon", "Apple", "Bloomberg", "Facebook", "Google", "Uber"],
      "num_occur": [5, 3, 2, 5, "3", 3]
   },
   {
      "problem_name": "Implement Stack using Queues",
      "company": ["Amazon"],
      "num_occur": [3]
   },
   {
      "problem_name": "Rectangle Area",
      "company": ["Amazon"],
      "num_occur": [2]
   },
   {
      "problem_name": "Count Complete Tree Nodes",
      "company": ["Amazon", "Google", "tiktok"],
      "num_occur": [5, "7", 4]
   },
   {
      "problem_name": "Maximal Square",
      "company": [
         "Amazon",
         "ByteDance",
         "FactSet",
         "Google",
         "IBM",
         "Microsoft",
         "Salesforce",
         "Visa"
      ],
      "num_occur": [3, 2, 2, "3", 3, "7", 3, 6]
   },
   {
      "problem_name": "House Robber II",
      "company": ["Amazon", "Google"],
      "num_occur": [4, "9"]
   },
   {
      "problem_name": "Word Search II",
      "company": [
         "Amazon",
         "Apple",
         "Cisco",
         "Facebook",
         "Google",
         "Karat",
         "Microsoft",
         "Snapchat",
         "Twitter",
         "Uber"
      ],
      "num_occur": [31, 4, 16, 5, "5", 5, "7", 5, "5", 36]
   },
   {
      "problem_name": "Design Add and Search Words Data Structure",
      "company": [
         "Amazon",
         "Apple",
         "ByteDance",
         "Facebook",
         "Google",
         "Microsoft",
         "Nvidia"
      ],
      "num_occur": [7, 2, 2, 7, "2", "4", 2]
   },
   {
      "problem_name": "Course Schedule II",
      "company": [
         "Amazon",
         "Apple",
         "ByteDance",
         "Facebook",
         "Google",
         "Karat",
         "Microsoft",
         "Robinhood",
         "Roblox",
         "Salesforce",
         "tiktok",
         "Twilio",
         "Uber",
         "VMware",
         "Wayfair"
      ],
      "num_occur": [34, 5, 3, 5, "11", 4, "10", 7, 5, 3, 2, 5, 2, 4, 4]
   },
   {
      "problem_name": "Minimum Size Subarray Sum",
      "company": [
         "Amazon",
         "Apple",
         "Arcesium",
         "Bloomberg",
         "Facebook",
         "Goldman Sachs",
         "Google",
         "Microsoft"
      ],
      "num_occur": [6, 2, 2, 2, 8, "2", "2", "4"]
   },
   {
      "problem_name": "Implement Trie (Prefix Tree)",
      "company": [
         "Amazon",
         "Apple",
         "ByteDance",
         "Facebook",
         "Google",
         "Microsoft",
         "Oracle",
         "Snapchat",
         "Twitter"
      ],
      "num_occur": [15, 3, 2, 2, "9", "5", 2, 4, "6"]
   },
   {
      "problem_name": "Course Schedule",
      "company": [
         "Amazon",
         "Apple",
         "Bloomberg",
         "Facebook",
         "Google",
         "Microsoft",
         "Oracle",
         "tiktok",
         "Uber"
      ],
      "num_occur": [28, 3, 2, 9, "5", "10", 2, 7, 2]
   },
   {
      "problem_name": "Reverse Linked List",
      "company": [
         "Amazon",
         "Apple",
         "Bloomberg",
         "Facebook",
         "Google",
         "Intuit",
         "Microsoft",
         "Nvidia",
         "Yandex"
      ],
      "num_occur": [12, 6, 4, 4, "3", 2, "10", 2, 3]
   },
   {
      "problem_name": "Isomorphic Strings",
      "company": ["Amazon", "Google", "LinkedIn"],
      "num_occur": [7, "3", 6]
   },
   {
      "problem_name": "Binary Tree Right Side View",
      "company": [
         "Amazon",
         "Apple",
         "Bloomberg",
         "DoorDash",
         "Facebook",
         "Microsoft",
         "Oracle",
         "Qualtrics",
         "Uber"
      ],
      "num_occur": [10, 2, 4, 2, 108, "2", 3, 4, 2]
   },
   {
      "problem_name": "Number of 1 Bits",
      "company": ["Amazon", "Box", "Cisco", "Facebook", "Google", "Oracle"],
      "num_occur": [3, 12, 4, 4, "2", 2]
   },
   {
      "problem_name": "Rotate Array",
      "company": [
         "Amazon",
         "Facebook",
         "Google",
         "Microsoft",
         "Salesforce",
         "tcs",
         "Yahoo"
      ],
      "num_occur": [9, 2, "4", "7", 2, 2, 2]
   },
   {
      "problem_name": "Best Time to Buy and Sell Stock IV",
      "company": ["Amazon", "Apple", "Citadel", "Google", "Nvidia"],
      "num_occur": [4, 3, 2, "2", 3]
   },
   {
      "problem_name": "Repeated DNA Sequences",
      "company": ["Amazon", "LinkedIn"],
      "num_occur": [2, 5]
   },
   {
      "problem_name": "Dungeon Game",
      "company": ["Amazon", "Uber"],
      "num_occur": [2, 12]
   },
   {
      "problem_name": "Binary Search Tree Iterator",
      "company": [
         "Amazon",
         "Bloomberg",
         "Facebook",
         "Google",
         "Microsoft",
         "Salesforce"
      ],
      "num_occur": [4, 4, 50, "2", "9", 3]
   },
   {
      "problem_name": "Factorial Trailing Zeroes",
      "company": ["Amazon", "Oracle"],
      "num_occur": [4, 2]
   },
   {
      "problem_name": "Excel Sheet Column Title",
      "company": ["Amazon", "Google", "Microsoft"],
      "num_occur": [2, "2", "4"]
   },
   {
      "problem_name": "Compare Version Numbers",
      "company": ["Amazon", "Arista Networks", "Microsoft", "Nutanix"],
      "num_occur": [7, 2, "4", 2]
   },
   {
      "problem_name": "Maximum Gap",
      "company": ["Amazon", "Facebook"],
      "num_occur": [2, 2]
   },
   {
      "problem_name": "Find Peak Element",
      "company": [
         "Amazon",
         "Apple",
         "Facebook",
         "Google",
         "HRT",
         "Microsoft",
         "Roblox",
         "Snapchat",
         "Uber"
      ],
      "num_occur": [8, 2, 82, "7", 3, "2", 2, 4, 5]
   },
   {
      "problem_name": "Longest Substring with At Most Two Distinct Characters",
      "company": ["Amazon", "Microsoft"],
      "num_occur": [4, "2"]
   },
   {
      "problem_name": "Read N Characters Given Read4",
      "company": ["Amazon", "Facebook", "Lyft", "Microsoft", "Rubrik"],
      "num_occur": [2, 3, 2, "4", 2]
   },
   {
      "problem_name": "Reverse Words in a String",
      "company": ["Amazon", "Apple", "Google", "LinkedIn", "Microsoft", "Visa"],
      "num_occur": [2, 3, "2", 2, "34", 2]
   },
   {
      "problem_name": "Evaluate Reverse Polish Notation",
      "company": [
         "Amazon",
         "Facebook",
         "Google",
         "LinkedIn",
         "Microsoft",
         "Oracle",
         "Yandex"
      ],
      "num_occur": [6, 2, "73", 8, "2", 2, 2]
   },
   {
      "problem_name": "Max Points on a Line",
      "company": ["Amazon", "Google", "LinkedIn", "Oracle", "Sprinklr"],
      "num_occur": [4, "3", 8, 3, 2]
   },
   {
      "problem_name": "Sort List",
      "company": ["Amazon", "Apple", "ByteDance", "Facebook", "Microsoft"],
      "num_occur": [3, 2, 3, 6, "3"]
   },
   {
      "problem_name": "Linked List Cycle II",
      "company": ["Amazon", "Microsoft"],
      "num_occur": [7, "2"]
   },
   {
      "problem_name": "Linked List Cycle",
      "company": [
         "Amazon",
         "Goldman Sachs",
         "Google",
         "Microsoft",
         "Oracle",
         "Spotify",
         "Visa"
      ],
      "num_occur": [9, "2", "2", "3", 3, 4, 3]
   },
   {
      "problem_name": "Copy List with Random Pointer",
      "company": [
         "Amazon",
         "Apple",
         "Bloomberg",
         "Facebook",
         "Google",
         "Microsoft"
      ],
      "num_occur": [19, 2, 3, 64, "3", "12"]
   },
   {
      "problem_name": "Single Number II",
      "company": ["Amazon"],
      "num_occur": [5]
   },
   { "problem_name": "Candy", "company": ["Amazon"], "num_occur": [8] },
   {
      "problem_name": "Clone Graph",
      "company": [
         "Amazon",
         "Bloomberg",
         "Facebook",
         "Google",
         "Microsoft",
         "Pinterest"
      ],
      "num_occur": [8, 6, 38, "5", "4", 2]
   },
   {
      "problem_name": "Palindrome Partitioning II",
      "company": ["Amazon"],
      "num_occur": [2]
   },
   {
      "problem_name": "Palindrome Partitioning",
      "company": ["Amazon", "Apple", "Facebook", "Google", "tiktok"],
      "num_occur": [2, 3, 2, "3", 3]
   },
   {
      "problem_name": "Sum Root to Leaf Numbers",
      "company": ["Amazon", "Facebook", "Microsoft"],
      "num_occur": [3, 31, "4"]
   },
   {
      "problem_name": "Word Ladder II",
      "company": ["Amazon", "Box", "Facebook", "Microsoft", "Snapchat"],
      "num_occur": [9, 4, 4, "2", 3]
   },
   {
      "problem_name": "Best Time to Buy and Sell Stock III",
      "company": ["Amazon", "Apple", "Uber"],
      "num_occur": [7, 2, 3]
   },
   {
      "problem_name": "Best Time to Buy and Sell Stock II",
      "company": [
         "Amazon",
         "Bloomberg",
         "ByteDance",
         "Facebook",
         "Google",
         "Microsoft",
         "Oracle",
         "Walmart Global Tech"
      ],
      "num_occur": [13, 3, 3, 5, "3", "3", 2, 4]
   },
   {
      "problem_name": "Triangle",
      "company": ["Amazon", "Microsoft"],
      "num_occur": [4, "3"]
   },
   {
      "problem_name": "Pascal's Triangle",
      "company": [
         "Amazon",
         "Apple",
         "Goldman Sachs",
         "Microsoft",
         "Snapchat",
         "Uber",
         "Yahoo"
      ],
      "num_occur": [5, 4, "3", "4", 2, 2, 2]
   },
   {
      "problem_name": "Distinct Subsequences",
      "company": ["Amazon", "Google", "Mathworks"],
      "num_occur": [4, "2", 3]
   },
   {
      "problem_name": "Flatten Binary Tree to Linked List",
      "company": ["Amazon", "Facebook", "Microsoft", "Salesforce"],
      "num_occur": [6, 10, "6", 2]
   },
   {
      "problem_name": "Path Sum II",
      "company": ["Amazon", "Facebook", "Google", "Microsoft", "Oracle"],
      "num_occur": [5, 4, "3", "2", 2]
   },
   {
      "problem_name": "Path Sum",
      "company": [
         "Amazon",
         "Facebook",
         "Microsoft",
         "Oracle",
         "Walmart Global Tech"
      ],
      "num_occur": [2, 8, "7", 2, 2]
   },
   {
      "problem_name": "Convert Sorted List to Binary Search Tree",
      "company": ["Amazon", "Facebook", "Google", "Microsoft"],
      "num_occur": [7, 11, "2", "3"]
   },
   {
      "problem_name": "Convert Sorted Array to Binary Search Tree",
      "company": ["Amazon", "Apple", "Facebook", "Microsoft", "Oracle"],
      "num_occur": [3, 2, 2, "2", 2]
   },
   {
      "problem_name": "Binary Tree Level Order Traversal II",
      "company": ["Amazon"],
      "num_occur": [2]
   },
   {
      "problem_name": "Construct Binary Tree from Preorder and Inorder Traversal",
      "company": [
         "Amazon",
         "Bloomberg",
         "ByteDance",
         "Google",
         "Microsoft",
         "Uber"
      ],
      "num_occur": [3, 3, 2, "3", "4", 2]
   },
   {
      "problem_name": "Maximum Depth of Binary Tree",
      "company": [
         "Amazon",
         "Apple",
         "Bloomberg",
         "Facebook",
         "Google",
         "LinkedIn",
         "Microsoft",
         "Spotify"
      ],
      "num_occur": [4, 2, 2, 2, "4", 10, "3", 4]
   },
   {
      "problem_name": "Binary Tree Level Order Traversal",
      "company": [
         "Amazon",
         "Apple",
         "Bloomberg",
         "Facebook",
         "Google",
         "LinkedIn",
         "Microsoft",
         "Oracle",
         "ServiceNow"
      ],
      "num_occur": [8, 2, 6, 6, "3", 9, "7", 4, 3]
   },
   {
      "problem_name": "Same Tree",
      "company": [
         "Amazon",
         "Apple",
         "Bloomberg",
         "Facebook",
         "Google",
         "LinkedIn"
      ],
      "num_occur": [5, 3, 2, 2, "3", 6]
   },
   {
      "problem_name": "Interleaving String",
      "company": ["Amazon", "Apple", "Bloomberg", "Google", "Uber"],
      "num_occur": [4, 4, 2, "3", 2]
   },
   {
      "problem_name": "Unique Binary Search Trees",
      "company": ["Amazon"],
      "num_occur": [4]
   },
   {
      "problem_name": "Restore IP Addresses",
      "company": [
         "Amazon",
         "Arista Networks",
         "ByteDance",
         "Facebook",
         "Microsoft",
         "tiktok",
         "Yahoo"
      ],
      "num_occur": [3, 2, 2, 2, "3", 3, 5]
   },
   {
      "problem_name": "Decode Ways",
      "company": [
         "Amazon",
         "Apple",
         "Bloomberg",
         "Cisco",
         "Facebook",
         "Goldman Sachs",
         "Google",
         "Lyft",
         "Microsoft"
      ],
      "num_occur": [9, 3, 3, 9, 4, "3", "8", 7, "4"]
   },
   { "problem_name": "Gray Code", "company": ["Amazon"], "num_occur": [2] },
   {
      "problem_name": "Merge Sorted Array",
      "company": [
         "Amazon",
         "Apple",
         "Bloomberg",
         "Facebook",
         "Indeed",
         "LinkedIn",
         "Microsoft",
         "Oracle",
         "Shopee",
         "Uber"
      ],
      "num_occur": [5, 8, 4, 89, 2, 5, "10", 2, 4, 2]
   },
   {
      "problem_name": "Maximal Rectangle",
      "company": ["Amazon", "Apple", "Google"],
      "num_occur": [3, 2, "4"]
   },
   {
      "problem_name": "Remove Duplicates from Sorted List II",
      "company": ["Amazon", "Facebook", "Microsoft"],
      "num_occur": [6, 2, "2"]
   },
   {
      "problem_name": "Word Search",
      "company": [
         "Amazon",
         "Bloomberg",
         "Facebook",
         "Indeed",
         "Karat",
         "Microsoft",
         "Snapchat",
         "Twitter",
         "Uber"
      ],
      "num_occur": [36, 14, 12, 9, 17, "16", 7, "23", 17]
   },
   {
      "problem_name": "Combinations",
      "company": ["Amazon", "Facebook", "Google", "Microsoft"],
      "num_occur": [2, 5, "5", "2"]
   },
   {
      "problem_name": "Set Matrix Zeroes",
      "company": ["Amazon", "Apple", "Bloomberg", "Facebook", "Microsoft"],
      "num_occur": [6, 4, 3, 5, "8"]
   },
   {
      "problem_name": "Edit Distance",
      "company": [
         "Amazon",
         "Apple",
         "Bloomberg",
         "Facebook",
         "Google",
         "LinkedIn",
         "Microsoft",
         "Rubrik"
      ],
      "num_occur": [8, 3, 2, 2, "4", 7, "6", 2]
   },
   {
      "problem_name": "Simplify Path",
      "company": ["Amazon", "Apple", "Facebook", "Google"],
      "num_occur": [8, 3, 112, "5"]
   },
   {
      "problem_name": "Minimum Path Sum",
      "company": [
         "Amazon",
         "Apple",
         "Goldman Sachs",
         "Google",
         "Microsoft",
         "Oracle",
         "Square",
         "Uber"
      ],
      "num_occur": [7, 3, "3", "4", "5", 3, 2, 2]
   },
   {
      "problem_name": "Unique Paths II",
      "company": [
         "Amazon",
         "Cisco",
         "Cruise Automation",
         "Facebook",
         "Google",
         "Microsoft",
         "Oracle",
         "Qualtrics"
      ],
      "num_occur": [7, 3, 9, 8, "3", "2", 2, 4]
   },
   {
      "problem_name": "Spiral Matrix II",
      "company": ["Amazon", "Apple", "tiktok"],
      "num_occur": [2, 4, 6]
   },
   {
      "problem_name": "Length of Last Word",
      "company": ["Amazon", "Microsoft"],
      "num_occur": [3, "2"]
   },
   {
      "problem_name": "Insert Interval",
      "company": ["Amazon", "Facebook", "Google", "LinkedIn", "Robinhood"],
      "num_occur": [5, 5, "11", 9, 3]
   },
   {
      "problem_name": "Jump Game",
      "company": [
         "Amazon",
         "Apple",
         "Bloomberg",
         "DoorDash",
         "Facebook",
         "Flipkart",
         "Google",
         "Qualtrics",
         "Salesforce"
      ],
      "num_occur": [20, 3, 2, 3, 8, 3, "2", 2, 2]
   },
   {
      "problem_name": "Permutations II",
      "company": ["Amazon", "Microsoft"],
      "num_occur": [4, "3"]
   },
   {
      "problem_name": "Wildcard Matching",
      "company": [
         "Amazon",
         "Coursera",
         "Facebook",
         "Google",
         "Microsoft",
         "Uber"
      ],
      "num_occur": [5, 2, 2, "4", "14", 2]
   },
   {
      "problem_name": "Combination Sum II",
      "company": ["Amazon", "Bloomberg", "Facebook", "Oracle", "Reddit"],
      "num_occur": [4, 2, 4, 2, 3]
   },
   {
      "problem_name": "Valid Sudoku",
      "company": [
         "Amazon",
         "Apple",
         "Cruise Automation",
         "Facebook",
         "Karat",
         "Microsoft",
         "Nvidia",
         "Uber",
         "Wayfair"
      ],
      "num_occur": [19, 4, 5, 4, 3, "8", 3, 5, 3]
   },
   {
      "problem_name": "Longest Valid Parentheses",
      "company": [
         "Amazon",
         "ByteDance",
         "Facebook",
         "Microsoft",
         "Morgan Stanley",
         "Oracle",
         "VMware"
      ],
      "num_occur": [9, 3, 4, "2", 4, 2, 2]
   },
   {
      "problem_name": "Substring with Concatenation of All Words",
      "company": ["Amazon", "Apple", "Google", "Microsoft", "Oracle"],
      "num_occur": [3, 2, "2", "2", 3]
   },
   {
      "problem_name": "Find the Index of the First Occurrence in a String",
      "company": ["Amazon", "Apple", "Facebook", "Google", "Microsoft", "Uber"],
      "num_occur": [7, 2, 3, "4", "4", 2]
   },
   {
      "problem_name": "Reverse Nodes in k-Group",
      "company": [
         "Amazon",
         "Bloomberg",
         "ByteDance",
         "Capital One",
         "Facebook",
         "Google",
         "Microsoft",
         "Yahoo",
         "Zoom"
      ],
      "num_occur": [14, 2, 2, 13, 5, "2", "13", 2, 2]
   },
   {
      "problem_name": "Remove Nth Node From End of List",
      "company": [
         "Amazon",
         "Apple",
         "Bloomberg",
         "Facebook",
         "Google",
         "Microsoft",
         "Uber",
         "Walmart Global Tech"
      ],
      "num_occur": [10, 2, 3, 23, "5", "6", 2, 3]
   },
   {
      "problem_name": "Letter Combinations of a Phone Number",
      "company": [
         "Amazon",
         "Apple",
         "Bloomberg",
         "Epic Systems",
         "Facebook",
         "Google",
         "Microsoft",
         "Swiggy",
         "Uber"
      ],
      "num_occur": [28, 7, 5, 3, 14, "5", "20", 3, 9]
   },
   {
      "problem_name": "Reducing Dishes",
      "company": ["American Express", "OT", "Sony"],
      "num_occur": [2, 1, 2]
   },
   {
      "problem_name": "Maximum Number of Balls in a Box",
      "company": ["AppDynamics", "Microsoft"],
      "num_occur": ["1", "2"]
   },
   {
      "problem_name": "Check if Numbers Are Ascending in a Sentence",
      "company": ["Apple"],
      "num_occur": [2]
   },
   {
      "problem_name": "Minimum Operations to Make the Array Increasing",
      "company": ["Apple", "Deutsche Bank"],
      "num_occur": [2, 1]
   },
   {
      "problem_name": "Implement Trie II (Prefix Tree)",
      "company": ["Apple", "Docusign"],
      "num_occur": [2, 2]
   },
   {
      "problem_name": "Find the Highest Altitude",
      "company": ["Apple"],
      "num_occur": [3]
   },
   {
      "problem_name": "Partitioning Into Minimum Number Of Deci-Binary Numbers",
      "company": ["Apple"],
      "num_occur": [2]
   },
   {
      "problem_name": "Goal Parser Interpretation",
      "company": ["Apple"],
      "num_occur": [2]
   },
   {
      "problem_name": "Check If Two String Arrays are Equivalent",
      "company": ["Apple", "Facebook"],
      "num_occur": [2, 1]
   },
   {
      "problem_name": "Number of Sub-arrays With Odd Sum",
      "company": ["Apple", "Google"],
      "num_occur": [2, "2"]
   },
   {
      "problem_name": "Consecutive Characters",
      "company": ["Apple", "Google"],
      "num_occur": [3, "2"]
   },
   {
      "problem_name": "Lucky Numbers in a Matrix",
      "company": ["Apple"],
      "num_occur": [2]
   },
   {
      "problem_name": "Number of Steps to Reduce a Number to Zero",
      "company": ["Apple", "Grab", "Microsoft"],
      "num_occur": [2, 2, "2"]
   },
   {
      "problem_name": "Deepest Leaves Sum",
      "company": ["Apple"],
      "num_occur": [2]
   },
   {
      "problem_name": "Group the People Given the Group Size They Belong To",
      "company": ["Apple", "Bloomberg"],
      "num_occur": [2, 2]
   },
   {
      "problem_name": "Minimum Time Visiting All Points",
      "company": ["Apple"],
      "num_occur": [3]
   },
   {
      "problem_name": "Day of the Week",
      "company": ["Apple", "United Health Group"],
      "num_occur": [2, 1]
   },
   {
      "problem_name": "Height Checker",
      "company": ["Apple", "Goldman Sachs", "Salesforce"],
      "num_occur": [2, "20", 1]
   },
   {
      "problem_name": "Smallest String Starting From Leaf",
      "company": ["Apple"],
      "num_occur": [2]
   },
   {
      "problem_name": "Find and Replace Pattern",
      "company": ["Apple"],
      "num_occur": [2]
   },
   {
      "problem_name": "Backspace String Compare",
      "company": [
         "Apple",
         "Bloomberg",
         "Booking.com",
         "Google",
         "IBM",
         "tiktok",
         "Visa"
      ],
      "num_occur": [3, 2, 3, "3", 6, 2, 3]
   },
   {
      "problem_name": "Shortest Distance to a Character",
      "company": ["Apple", "Bloomberg"],
      "num_occur": [2, 2]
   },
   {
      "problem_name": "Binary Tree Pruning",
      "company": ["Apple", "Facebook"],
      "num_occur": [2, 4]
   },
   {
      "problem_name": "Rotate String",
      "company": ["Apple", "Goldman Sachs", "LinkedIn", "Microsoft", "Zoom"],
      "num_occur": [2, "3", 2, "2", 4]
   },
   {
      "problem_name": "1-bit and 2-bit Characters",
      "company": ["Apple"],
      "num_occur": [2]
   },
   {
      "problem_name": "Employee Importance",
      "company": ["Apple", "Google"],
      "num_occur": [2, "6"]
   },
   {
      "problem_name": "Find Duplicate File in System",
      "company": ["Apple", "Dropbox"],
      "num_occur": [2, 6]
   },
   {
      "problem_name": "Minimum Index Sum of Two Lists",
      "company": ["Apple", "Oracle", "Yelp"],
      "num_occur": [2, 2, 1]
   },
   {
      "problem_name": "Array Partition",
      "company": ["Apple"],
      "num_occur": [2]
   },
   {
      "problem_name": "Longest Uncommon Subsequence II",
      "company": ["Apple"],
      "num_occur": [2]
   },
   {
      "problem_name": "Coin Change II",
      "company": ["Apple", "Bloomberg", "Cisco", "Goldman Sachs", "Google"],
      "num_occur": [3, 2, 2, "3", "2"]
   },
   {
      "problem_name": "Most Frequent Subtree Sum",
      "company": ["Apple"],
      "num_occur": [2]
   },
   {
      "problem_name": "Number of Longest Increasing Subsequence",
      "company": ["Apple", "Google", "Yahoo"],
      "num_occur": [2, "2", 1]
   },
   {
      "problem_name": "Max Consecutive Ones",
      "company": ["Apple", "Google"],
      "num_occur": [2, "2"]
   },
   {
      "problem_name": "Ones and Zeroes",
      "company": ["Apple"],
      "num_occur": [2]
   },
   {
      "problem_name": "Unique Substrings in Wraparound String",
      "company": ["Apple", "MAQ Software"],
      "num_occur": [2, 1]
   },
   { "problem_name": "Assign Cookies", "company": ["Apple"], "num_occur": [2] },
   {
      "problem_name": "Number of Segments in a String",
      "company": ["Apple"],
      "num_occur": [2]
   },
   {
      "problem_name": "Fizz Buzz",
      "company": ["Apple", "Facebook", "Microsoft"],
      "num_occur": [2, 3, "3"]
   },
   { "problem_name": "Nth Digit", "company": ["Apple"], "num_occur": [3] },
   {
      "problem_name": "Perfect Rectangle",
      "company": ["Apple", "Google"],
      "num_occur": [4, "2"]
   },
   {
      "problem_name": "Create Maximum Number",
      "company": ["Apple", "Google"],
      "num_occur": [2, "1"]
   },
   {
      "problem_name": "Super Ugly Number",
      "company": ["Apple", "Bloomberg", "Google"],
      "num_occur": [2, 2, "2"]
   },
   {
      "problem_name": "Shortest Palindrome",
      "company": ["Apple", "Bloomberg", "Microsoft"],
      "num_occur": [2, 3, "3"]
   },
   {
      "problem_name": "Reverse Bits",
      "company": ["Apple", "Facebook", "Google", "Microsoft", "Qualcomm"],
      "num_occur": [3, 3, "2", "2", 3]
   },
   {
      "problem_name": "Excel Sheet Column Number",
      "company": ["Apple", "Google", "Microsoft"],
      "num_occur": [2, "2", "6"]
   },
   {
      "problem_name": "Text Justification",
      "company": [
         "Apple",
         "Facebook",
         "Google",
         "Indeed",
         "Karat",
         "LinkedIn",
         "Reddit",
         "Square",
         "Twilio",
         "Uber"
      ],
      "num_occur": [3, 4, "24", 3, 10, 18, 3, 3, 3, 6]
   },
   {
      "problem_name": "Stone Game VI",
      "company": ["APT Portfolio"],
      "num_occur": [1]
   },
   {
      "problem_name": "Broken Calculator",
      "company": ["Arcesium"],
      "num_occur": [2]
   },
   {
      "problem_name": "Construct String With Repeat Limit",
      "company": ["Arista Networks"],
      "num_occur": [1]
   },
   {
      "problem_name": "Rank Teams by Votes",
      "company": ["Atlassian", "Coursera", "Google", "Square"],
      "num_occur": [18, 2, "2", 2]
   },
   {
      "problem_name": "Greatest Common Divisor of Strings",
      "company": ["Atlassian", "Goldman Sachs"],
      "num_occur": [2, "3"]
   },
   {
      "problem_name": "Zuma Game",
      "company": ["Baidu", "Bloomberg", "Salesforce"],
      "num_occur": [1, 4, 6]
   },
   {
      "problem_name": "Design Bitset",
      "company": ["Bloomberg"],
      "num_occur": [2]
   },
   {
      "problem_name": "Check if All the Integers in a Range Are Covered",
      "company": ["Bloomberg"],
      "num_occur": [1]
   },
   {
      "problem_name": "Maximum Population Year",
      "company": ["Bloomberg", "Cisco", "Google"],
      "num_occur": [2, 2, "2"]
   },
   {
      "problem_name": "Find the Winner of the Circular Game",
      "company": ["Bloomberg", "Goldman Sachs"],
      "num_occur": [2, "4"]
   },
   {
      "problem_name": "Truncate Sentence",
      "company": ["Bloomberg"],
      "num_occur": [1]
   },
   {
      "problem_name": "Maximum Score From Removing Stones",
      "company": ["Bloomberg"],
      "num_occur": [2]
   },
   {
      "problem_name": "Design an Ordered Stream",
      "company": ["Bloomberg"],
      "num_occur": [20]
   },
   {
      "problem_name": "Arithmetic Subarrays",
      "company": ["Bloomberg"],
      "num_occur": [2]
   },
   {
      "problem_name": "Maximum Nesting Depth of the Parentheses",
      "company": ["Bloomberg", "Facebook"],
      "num_occur": [4, 3]
   },
   {
      "problem_name": "Even Odd Tree",
      "company": ["Bloomberg", "JPMorgan"],
      "num_occur": [1, 3]
   },
   {
      "problem_name": "Count Unhappy Friends",
      "company": ["Bloomberg"],
      "num_occur": [3]
   },
   {
      "problem_name": "XOR Operation in an Array",
      "company": ["Bloomberg"],
      "num_occur": [2]
   },
   {
      "problem_name": "Pseudo-Palindromic Paths in a Binary Tree",
      "company": ["Bloomberg"],
      "num_occur": [2]
   },
   {
      "problem_name": "Find the Kth Smallest Sum of a Matrix With Sorted Rows",
      "company": ["Bloomberg"],
      "num_occur": [2]
   },
   {
      "problem_name": "Design Underground System",
      "company": ["Bloomberg"],
      "num_occur": [64]
   },
   {
      "problem_name": "Sort Integers by The Power Value",
      "company": ["Bloomberg", "Qualtrics"],
      "num_occur": [2, 2]
   },
   {
      "problem_name": "Minimum Number of Steps to Make Two Strings Anagram",
      "company": ["Bloomberg", "DoorDash", "tiktok", "Twitter"],
      "num_occur": [8, 7, 2, "2"]
   },
   {
      "problem_name": "Remove Palindromic Subsequences",
      "company": ["Bloomberg", "Bloomberg"],
      "num_occur": [2, 2]
   },
   {
      "problem_name": "Sum of Mutated Array Closest to Target",
      "company": ["Bloomberg"],
      "num_occur": [2]
   },
   {
      "problem_name": "Count Square Submatrices with All Ones",
      "company": ["Bloomberg", "Google"],
      "num_occur": [2, "8"]
   },
   {
      "problem_name": "Shift 2D Grid",
      "company": ["Bloomberg"],
      "num_occur": [2]
   },
   {
      "problem_name": "Minimum Cost to Move Chips to The Same Position",
      "company": ["Bloomberg"],
      "num_occur": [2]
   },
   {
      "problem_name": "Two City Scheduling",
      "company": ["Bloomberg", "Facebook"],
      "num_occur": [14, 2]
   },
   {
      "problem_name": "Divisor Game",
      "company": ["Bloomberg", "Google"],
      "num_occur": [2, "2"]
   },
   {
      "problem_name": "Number of Recent Calls",
      "company": ["Bloomberg", "Yandex"],
      "num_occur": [1, 3]
   },
   {
      "problem_name": "Push Dominoes",
      "company": ["Bloomberg"],
      "num_occur": [2]
   },
   {
      "problem_name": "Minimum Distance Between BST Nodes",
      "company": ["Bloomberg", "Microsoft"],
      "num_occur": [2, "2"]
   },
   {
      "problem_name": "Toeplitz Matrix",
      "company": ["Bloomberg", "Facebook"],
      "num_occur": [3, 30]
   },
   {
      "problem_name": "Couples Holding Hands",
      "company": ["Bloomberg"],
      "num_occur": [2]
   },
   {
      "problem_name": "Candy Crush",
      "company": ["Bloomberg", "Capital One", "eBay", "Facebook"],
      "num_occur": [7, 3, 2, 2]
   },
   {
      "problem_name": "Non-decreasing Array",
      "company": ["Bloomberg"],
      "num_occur": [3]
   },
   {
      "problem_name": "Split Array into Consecutive Subsequences",
      "company": ["Bloomberg", "Google"],
      "num_occur": [2, "2"]
   },
   {
      "problem_name": "Course Schedule III",
      "company": ["Bloomberg"],
      "num_occur": [2]
   },
   {
      "problem_name": "Reshape the Matrix",
      "company": ["Bloomberg", "Facebook"],
      "num_occur": [2, 2]
   },
   {
      "problem_name": "Brick Wall",
      "company": ["Bloomberg", "Grab"],
      "num_occur": [2, 2]
   },
   {
      "problem_name": "Construct the Rectangle",
      "company": ["Bloomberg"],
      "num_occur": [2]
   },
   {
      "problem_name": "Valid Word Square",
      "company": ["Bloomberg", "Google"],
      "num_occur": [2, "1"]
   },
   {
      "problem_name": "Integer Replacement",
      "company": ["Bloomberg"],
      "num_occur": [2]
   },
   {
      "problem_name": "Wiggle Subsequence",
      "company": ["Bloomberg"],
      "num_occur": [2]
   },
   {
      "problem_name": "Count Numbers with Unique Digits",
      "company": ["Bloomberg"],
      "num_occur": [2]
   },
   {
      "problem_name": "Reverse Vowels of a String",
      "company": ["Bloomberg"],
      "num_occur": [2]
   },
   {
      "problem_name": "Maximum Product of Word Lengths",
      "company": ["Bloomberg"],
      "num_occur": [2]
   },
   { "problem_name": "Add Digits", "company": ["Bloomberg"], "num_occur": [2] },
   {
      "problem_name": "Different Ways to Add Parentheses",
      "company": ["Bloomberg", "Google", "Snapchat"],
      "num_occur": [3, "3", 2]
   },
   {
      "problem_name": "Surrounded Regions",
      "company": ["Bloomberg", "Google", "tiktok", "Uber"],
      "num_occur": [4, "5", 2, 2]
   },
   {
      "problem_name": "Minimum Depth of Binary Tree",
      "company": ["Bloomberg", "Facebook"],
      "num_occur": [2, 4]
   },
   {
      "problem_name": "Rotate List",
      "company": ["Bloomberg", "Microsoft"],
      "num_occur": [3, "4"]
   },
   {
      "problem_name": "Check if All Characters Have Equal Number of Occurrences",
      "company": ["Bolt"],
      "num_occur": [5]
   },
   {
      "problem_name": "Word Pattern II",
      "company": ["Bolt", "Pinterest", "Uber"],
      "num_occur": [2, 2, 3]
   },
   {
      "problem_name": "Two Out of Three",
      "company": ["Booking.com"],
      "num_occur": [1]
   },
   {
      "problem_name": "Additive Number",
      "company": ["Booking.com", "Epic Systems"],
      "num_occur": [3, 2]
   },
   {
      "problem_name": "The Number of Weak Characters in the Game",
      "company": ["ByteDance", "Google", "tiktok"],
      "num_occur": [4, "3", 3]
   },
   {
      "problem_name": "Closest Dessert Cost",
      "company": ["ByteDance", "Microsoft", "tiktok"],
      "num_occur": [3, "2", 2]
   },
   {
      "problem_name": "K Inverse Pairs Array",
      "company": ["ByteDance", "Works Applications"],
      "num_occur": [2, 1]
   },
   {
      "problem_name": "The Maze II",
      "company": ["ByteDance", "Google", "Microsoft"],
      "num_occur": [2, "2", "2"]
   },
   {
      "problem_name": "K-th Smallest in Lexicographical Order",
      "company": ["ByteDance", "Hulu"],
      "num_occur": [2, 1]
   },
   {
      "problem_name": "N-Queens II",
      "company": ["ByteDance", "Zenefits"],
      "num_occur": [2, 1]
   },
   {
      "problem_name": "Divide a String Into Groups of Size k",
      "company": ["Canonical"],
      "num_occur": [1]
   },
   {
      "problem_name": "Rotating the Box",
      "company": ["Capital One", "eBay", "Netflix", "Uber"],
      "num_occur": [2, 2, 4, 4]
   },
   {
      "problem_name": "Restore the Array From Adjacent Pairs",
      "company": ["Capital One"],
      "num_occur": [2]
   },
   {
      "problem_name": "Four Divisors",
      "company": ["Capital One"],
      "num_occur": [1]
   },
   {
      "problem_name": "License Key Formatting",
      "company": ["Capital One", "Google"],
      "num_occur": [18, "1"]
   },
   {
      "problem_name": "Maximum Erasure Value",
      "company": ["Cashfree"],
      "num_occur": [1]
   },
   {
      "problem_name": "Maximum Difference Between Increasing Elements",
      "company": ["Cisco", "Expedia"],
      "num_occur": [6, 3]
   },
   {
      "problem_name": "Check if Binary String Has at Most One Segment of Ones",
      "company": ["Cisco"],
      "num_occur": [1]
   },
   {
      "problem_name": "Expressive Words",
      "company": ["Cisco", "Facebook", "Google"],
      "num_occur": [11, 2, "3"]
   },
   {
      "problem_name": "Beautiful Arrangement",
      "company": ["Cisco"],
      "num_occur": [3]
   },
   {
      "problem_name": "Find All Groups of Farmland",
      "company": ["Citrix"],
      "num_occur": [1]
   },
   {
      "problem_name": "Smallest Value of the Rearranged Number",
      "company": ["Cognizant"],
      "num_occur": ["1"]
   },
   {
      "problem_name": "Largest BST Subtree",
      "company": ["Cohesity", "Facebook", "Oracle"],
      "num_occur": [2, 7, 2]
   },
   {
      "problem_name": "Count Vowel Substrings of a String",
      "company": ["Commvault"],
      "num_occur": [1]
   },
   {
      "problem_name": "Palindrome Permutation II",
      "company": ["Cruise Automation", "Google"],
      "num_occur": [2, "3"]
   },
   {
      "problem_name": "The Skyline Problem",
      "company": ["Cruise Automation", "Google", "Microsoft", "Uber"],
      "num_occur": [3, "2", "4", 2]
   },
   {
      "problem_name": "Freedom Trail",
      "company": ["DE Shaw", "Google"],
      "num_occur": [3, "1"]
   },
   {
      "problem_name": "The Time When the Network Becomes Idle",
      "company": ["Deutsche Bank"],
      "num_occur": [1]
   },
   {
      "problem_name": "Find the Winner of an Array Game",
      "company": ["Directi"],
      "num_occur": [1]
   },
   {
      "problem_name": "Three Consecutive Odds",
      "company": ["DJI"],
      "num_occur": [1]
   },
   {
      "problem_name": "Rectangle Overlap",
      "company": ["Docusign", "Facebook", "ServiceNow"],
      "num_occur": [2, 2, 2]
   },
   {
      "problem_name": "Find Nearest Point That Has the Same X or Y Coordinate",
      "company": ["DoorDash"],
      "num_occur": [3]
   },
   {
      "problem_name": "Buddy Strings",
      "company": ["DoorDash", "Facebook"],
      "num_occur": [13, 2]
   },
   {
      "problem_name": "Exclusive Time of Functions",
      "company": ["DoorDash", "Facebook", "Google", "LinkedIn", "Microsoft"],
      "num_occur": [2, 33, "3", 8, "3"]
   },
   {
      "problem_name": "Path Sum III",
      "company": ["DoorDash", "Facebook", "Google", "tiktok"],
      "num_occur": [3, 4, "3", 4]
   },
   {
      "problem_name": "Shortest Distance from All Buildings",
      "company": ["DoorDash", "Facebook", "Google", "Microsoft"],
      "num_occur": [5, 22, "6", "7"]
   },
   {
      "problem_name": "Set Intersection Size At Least Two",
      "company": ["Drawbridge", "Uber"],
      "num_occur": [1, 7]
   },
   {
      "problem_name": "Seat Reservation Manager",
      "company": ["Dropbox"],
      "num_occur": [1]
   },
   {
      "problem_name": "Counting Elements",
      "company": ["DRW"],
      "num_occur": [1]
   },
   { "problem_name": "Stone Game VII", "company": ["Dunzo"], "num_occur": [1] },
   {
      "problem_name": "Ways to Make a Fair Array",
      "company": ["Dunzo", "Microsoft"],
      "num_occur": [1, "2"]
   },
   {
      "problem_name": "Maximum Number of Coins You Can Get",
      "company": ["Dunzo", "Flipkart"],
      "num_occur": [2, 3]
   },
   {
      "problem_name": "Max Sum of Rectangle No Larger Than K",
      "company": ["Dunzo"],
      "num_occur": [2]
   },
   {
      "problem_name": "Minimum Number of People to Teach",
      "company": ["Duolingo"],
      "num_occur": [2]
   },
   {
      "problem_name": "Calculate Money in Leetcode Bank",
      "company": ["edabit"],
      "num_occur": [1]
   },
   {
      "problem_name": "Number of Different Integers in a String",
      "company": ["Expedia"],
      "num_occur": [2]
   },
   {
      "problem_name": "Reformat Date",
      "company": ["Expedia", "tiktok", "Walmart Global Tech"],
      "num_occur": [14, 10, 2]
   },
   {
      "problem_name": "Making File Names Unique",
      "company": ["Expedia", "Microsoft"],
      "num_occur": [14, "2"]
   },
   {
      "problem_name": "Palindromic Substrings",
      "company": ["Expedia", "Facebook", "Twitter"],
      "num_occur": [2, 24, "2"]
   },
   {
      "problem_name": "Best Meeting Point",
      "company": ["Expedia", "Facebook", "Google"],
      "num_occur": [4, 2, "2"]
   },
   {
      "problem_name": "Count Hills and Valleys in an Array",
      "company": ["Facebook"],
      "num_occur": [1]
   },
   {
      "problem_name": "K Radius Subarray Averages",
      "company": ["Facebook"],
      "num_occur": [3]
   },
   {
      "problem_name": "Find Target Indices After Sorting Array",
      "company": ["Facebook", "Google"],
      "num_occur": [2, "4"]
   },
   {
      "problem_name": "Process Restricted Friend Requests",
      "company": ["Facebook"],
      "num_occur": [5]
   },
   {
      "problem_name": "Minimum Operations to Make a Uni-Value Grid",
      "company": ["Facebook"],
      "num_occur": [3]
   },
   {
      "problem_name": "Number of Pairs of Strings With Concatenation Equal to Target",
      "company": ["Facebook"],
      "num_occur": [2]
   },
   {
      "problem_name": "Find the Middle Index in Array",
      "company": ["Facebook"],
      "num_occur": [3]
   },
   {
      "problem_name": "Find the Kth Largest Integer in the Array",
      "company": ["Facebook"],
      "num_occur": [4]
   },
   {
      "problem_name": "Remove One Element to Make the Array Strictly Increasing",
      "company": ["Facebook"],
      "num_occur": [2]
   },
   {
      "problem_name": "Cutting Ribbons",
      "company": ["Facebook"],
      "num_occur": [31]
   },
   {
      "problem_name": "Check if the Sentence Is Pangram",
      "company": ["Facebook", "Goldman Sachs"],
      "num_occur": [2, "3"]
   },
   {
      "problem_name": "Faulty Sensor",
      "company": ["Facebook"],
      "num_occur": [1]
   },
   {
      "problem_name": "Check if One String Swap Can Make Strings Equal",
      "company": ["Facebook"],
      "num_occur": [2]
   },
   {
      "problem_name": "Sum of Unique Elements",
      "company": ["Facebook"],
      "num_occur": [2]
   },
   {
      "problem_name": "Construct the Lexicographically Largest Valid Sequence",
      "company": ["Facebook", "Salesforce"],
      "num_occur": [1, 3]
   },
   {
      "problem_name": "Lowest Common Ancestor of a Binary Tree II",
      "company": ["Facebook"],
      "num_occur": [8]
   },
   {
      "problem_name": "Check Array Formation Through Concatenation",
      "company": ["Facebook"],
      "num_occur": [2]
   },
   {
      "problem_name": "Minimum Insertions to Balance a Parentheses String",
      "company": ["Facebook", "Microsoft"],
      "num_occur": [4, "4"]
   },
   {
      "problem_name": "Clone Binary Tree With Random Pointer",
      "company": ["Facebook"],
      "num_occur": [2]
   },
   {
      "problem_name": "Maximum Product of Two Elements in an Array",
      "company": ["Facebook", "Samsung", "Yahoo"],
      "num_occur": [2, 1, 2]
   },
   {
      "problem_name": "Make Two Arrays Equal by Reversing Subarrays",
      "company": ["Facebook"],
      "num_occur": [4]
   },
   {
      "problem_name": "Leftmost Column with at Least a One",
      "company": ["Facebook", "Google", "Uber"],
      "num_occur": [10, "2", 10]
   },
   {
      "problem_name": "Balance a Binary Search Tree",
      "company": ["Facebook"],
      "num_occur": [11]
   },
   {
      "problem_name": "Validate Binary Tree Nodes",
      "company": ["Facebook"],
      "num_occur": [2]
   },
   {
      "problem_name": "Apply Discount Every n Orders",
      "company": ["Facebook"],
      "num_occur": [1]
   },
   {
      "problem_name": "Count Negative Numbers in a Sorted Matrix",
      "company": ["Facebook"],
      "num_occur": [2]
   },
   {
      "problem_name": "Rank Transform of an Array",
      "company": ["Facebook", "Google"],
      "num_occur": [3, "2"]
   },
   {
      "problem_name": "Replace Elements with Greatest Element on Right Side",
      "company": ["Facebook"],
      "num_occur": [2]
   },
   {
      "problem_name": "Element Appearing More Than 25% In Sorted Array",
      "company": ["Facebook", "Google"],
      "num_occur": [5, "2"]
   },
   {
      "problem_name": "Intersection of Three Sorted Arrays",
      "company": ["Facebook"],
      "num_occur": [3]
   },
   {
      "problem_name": "Maximum Level Sum of a Binary Tree",
      "company": ["Facebook"],
      "num_occur": [3]
   },
   {
      "problem_name": "Check If a Number Is Majority Element in a Sorted Array",
      "company": ["Facebook", "Salesforce"],
      "num_occur": [2, 1]
   },
   {
      "problem_name": "Delete Nodes And Return Forest",
      "company": ["Facebook", "Google", "Intuit", "Microsoft"],
      "num_occur": [7, "6", 2, "2"]
   },
   {
      "problem_name": "Moving Stones Until Consecutive",
      "company": ["Facebook"],
      "num_occur": [1]
   },
   {
      "problem_name": "Add to Array-Form of Integer",
      "company": ["Facebook"],
      "num_occur": [2]
   },
   {
      "problem_name": "Check Completeness of a Binary Tree",
      "company": ["Facebook"],
      "num_occur": [11]
   },
   {
      "problem_name": "Increasing Order Search Tree",
      "company": ["Facebook"],
      "num_occur": [2]
   },
   {
      "problem_name": "Groups of Special-Equivalent Strings",
      "company": ["Facebook"],
      "num_occur": [1]
   },
   {
      "problem_name": "Uncommon Words from Two Sentences",
      "company": ["Facebook", "Google"],
      "num_occur": [3, "2"]
   },
   {
      "problem_name": "Advantage Shuffle",
      "company": ["Facebook"],
      "num_occur": [2]
   },
   { "problem_name": "Goat Latin", "company": ["Facebook"], "num_occur": [5] },
   {
      "problem_name": "Custom Sort String",
      "company": ["Facebook", "tiktok"],
      "num_occur": [67, 2]
   },
   {
      "problem_name": "Rotated Digits",
      "company": ["Facebook", "Google"],
      "num_occur": [4, "2"]
   },
   {
      "problem_name": "Number Of Corner Rectangles",
      "company": ["Facebook"],
      "num_occur": [1]
   },
   {
      "problem_name": "Closest Leaf in a Binary Tree",
      "company": ["Facebook"],
      "num_occur": [3]
   },
   {
      "problem_name": "Sentence Similarity",
      "company": ["Facebook", "Google"],
      "num_occur": [2, "1"]
   },
   {
      "problem_name": "Find K-th Smallest Pair Distance",
      "company": ["Facebook"],
      "num_occur": [3]
   },
   {
      "problem_name": "Stickers to Spell Word",
      "company": ["Facebook"],
      "num_occur": [3]
   },
   {
      "problem_name": "Maximum Sum of 3 Non-Overlapping Subarrays",
      "company": ["Facebook"],
      "num_occur": [3]
   },
   {
      "problem_name": "Implement Magic Dictionary",
      "company": ["Facebook", "Google"],
      "num_occur": [3, "2"]
   },
   {
      "problem_name": "Longest Continuous Increasing Subsequence",
      "company": ["Facebook"],
      "num_occur": [4]
   },
   {
      "problem_name": "Replace Words",
      "company": ["Facebook"],
      "num_occur": [2]
   },
   {
      "problem_name": "Maximum Average Subarray I",
      "company": ["Facebook"],
      "num_occur": [7]
   },
   {
      "problem_name": "Add Bold Tag in String",
      "company": ["Facebook"],
      "num_occur": [13]
   },
   {
      "problem_name": "Construct String from Binary Tree",
      "company": ["Facebook"],
      "num_occur": [2]
   },
   {
      "problem_name": "Split Array with Equal Sum",
      "company": ["Facebook"],
      "num_occur": [3]
   },
   {
      "problem_name": "Construct Binary Tree from String",
      "company": ["Facebook"],
      "num_occur": [7]
   },
   {
      "problem_name": "Find Largest Value in Each Tree Row",
      "company": ["Facebook"],
      "num_occur": [18]
   },
   {
      "problem_name": "Diagonal Traverse",
      "company": ["Facebook", "Google", "Microsoft"],
      "num_occur": [48, "2", "6"]
   },
   {
      "problem_name": "Sliding Window Median",
      "company": ["Facebook", "HBO", "Microsoft", "Spotify"],
      "num_occur": [9, 2, "3", 4]
   },
   {
      "problem_name": "Repeated Substring Pattern",
      "company": ["Facebook", "Google"],
      "num_occur": [2, "2"]
   },
   {
      "problem_name": "Minimum Number of Arrows to Burst Balloons",
      "company": ["Facebook", "Goldman Sachs", "Google"],
      "num_occur": [2, "2", "2"]
   },
   {
      "problem_name": "Valid Word Abbreviation",
      "company": ["Facebook", "Google"],
      "num_occur": [114, "3"]
   },
   {
      "problem_name": "Queue Reconstruction by Height",
      "company": ["Facebook"],
      "num_occur": [3]
   },
   {
      "problem_name": "UTF-8 Validation",
      "company": ["Facebook", "Palantir Technologies"],
      "num_occur": [2, 2]
   },
   {
      "problem_name": "Sum of Two Integers",
      "company": ["Facebook"],
      "num_occur": [2]
   },
   {
      "problem_name": "Integer Break",
      "company": ["Facebook"],
      "num_occur": [3]
   },
   {
      "problem_name": "Increasing Triplet Subsequence",
      "company": ["Facebook", "Google"],
      "num_occur": [2, "3"]
   },
   {
      "problem_name": "Range Sum Query - Immutable",
      "company": ["Facebook"],
      "num_occur": [2]
   },
   {
      "problem_name": "Bulls and Cows",
      "company": ["Facebook", "Google"],
      "num_occur": [2, "12"]
   },
   {
      "problem_name": "Unique Word Abbreviation",
      "company": ["Facebook", "Google"],
      "num_occur": [3, "1"]
   },
   {
      "problem_name": "Expression Add Operators",
      "company": ["Facebook"],
      "num_occur": [23]
   },
   {
      "problem_name": "Encode and Decode Strings",
      "company": ["Facebook", "LinkedIn"],
      "num_occur": [3, 2]
   },
   {
      "problem_name": "Closest Binary Search Tree Value",
      "company": ["Facebook"],
      "num_occur": [21]
   },
   {
      "problem_name": "Palindrome Permutation",
      "company": ["Facebook"],
      "num_occur": [12]
   },
   {
      "problem_name": "Paint House II",
      "company": ["Facebook", "LinkedIn", "Walmart Global Tech"],
      "num_occur": [1, 3, 2]
   },
   { "problem_name": "Ugly Number", "company": ["Facebook"], "num_occur": [3] },
   {
      "problem_name": "Group Shifted Strings",
      "company": ["Facebook", "Google"],
      "num_occur": [47, "2"]
   },
   {
      "problem_name": "Strobogrammatic Number II",
      "company": ["Facebook", "Google", "Uber"],
      "num_occur": [4, "2", 3]
   },
   {
      "problem_name": "Strobogrammatic Number",
      "company": ["Facebook", "Uber"],
      "num_occur": [19, 2]
   },
   {
      "problem_name": "Missing Ranges",
      "company": ["Facebook"],
      "num_occur": [8]
   },
   {
      "problem_name": "One Edit Distance",
      "company": ["Facebook", "Google", "Yahoo"],
      "num_occur": [7, "5", 2]
   },
   {
      "problem_name": "Read N Characters Given read4 II - Call Multiple Times",
      "company": ["Facebook", "Google", "Lyft", "Microsoft"],
      "num_occur": [2, "4", 8, "2"]
   },
   {
      "problem_name": "Binary Tree Postorder Traversal",
      "company": ["Facebook", "TuSimple"],
      "num_occur": [2, 2]
   },
   {
      "problem_name": "Valid Number",
      "company": ["Facebook", "LinkedIn"],
      "num_occur": [53, 10]
   },
   {
      "problem_name": "Number of Students Unable to Eat Lunch",
      "company": ["Flipkart"],
      "num_occur": [7]
   },
   {
      "problem_name": "Find Three Consecutive Integers That Sum to a Given Number",
      "company": ["FPT"],
      "num_occur": [1]
   },
   {
      "problem_name": "Add One Row to Tree",
      "company": ["Gilt Groupe"],
      "num_occur": [1]
   },
   {
      "problem_name": "Keep Multiplying Found Values by Two",
      "company": ["Goldman Sachs"],
      "num_occur": ["1"]
   },
   {
      "problem_name": "Remove Duplicates From an Unsorted Linked List",
      "company": ["Goldman Sachs", "Microsoft"],
      "num_occur": ["2", "2"]
   },
   {
      "problem_name": "Minimum Length of String After Deleting Similar Ends",
      "company": ["Goldman Sachs", "Amazon"],
      "num_occur": [1, 1]
   },
   {
      "problem_name": "Perform String Shifts",
      "company": ["Goldman Sachs"],
      "num_occur": ["1"]
   },
   {
      "problem_name": "High Five",
      "company": ["Goldman Sachs"],
      "num_occur": ["12"]
   },
   {
      "problem_name": "Fraction Addition and Subtraction",
      "company": ["Goldman Sachs"],
      "num_occur": ["5"]
   },
   {
      "problem_name": "Find Permutation",
      "company": ["Goldman Sachs", "Google"],
      "num_occur": ["2", "1"]
   },
   {
      "problem_name": "Circular Array Loop",
      "company": ["Goldman Sachs"],
      "num_occur": ["2"]
   },
   {
      "problem_name": "Minimum Moves to Equal Array Elements",
      "company": ["Goldman Sachs", "Mathworks", "Twitter", "Visa"],
      "num_occur": ["4", 3, "3", 3]
   },
   {
      "problem_name": "H-Index II",
      "company": ["Goldman Sachs"],
      "num_occur": ["2"]
   },
   {
      "problem_name": "Pascal's Triangle II",
      "company": ["Goldman Sachs", "Microsoft"],
      "num_occur": ["2", "2"]
   },
   {
      "problem_name": "Minimum Consecutive Cards to Pick Up",
      "company": ["Google"],
      "num_occur": ["1"]
   },
   {
      "problem_name": "Count Prefixes of a Given String",
      "company": ["Google"],
      "num_occur": ["1"]
   },
   {
      "problem_name": "Find the Difference of Two Arrays",
      "company": ["Google"],
      "num_occur": ["1"]
   },
   {
      "problem_name": "Find All K-Distant Indices in an Array",
      "company": ["Google"],
      "num_occur": ["1"]
   },
   {
      "problem_name": "Most Frequent Number Following Key In an Array",
      "company": ["Google"],
      "num_occur": ["1"]
   },
   {
      "problem_name": "Counting Words With a Given Prefix",
      "company": ["Google"],
      "num_occur": ["1"]
   },
   {
      "problem_name": "All Divisions With the Highest Score of a Binary Array",
      "company": ["Google"],
      "num_occur": ["1"]
   },
   {
      "problem_name": "Find All Lonely Numbers in the Array",
      "company": ["Google"],
      "num_occur": ["1"]
   },
   {
      "problem_name": "Destroying Asteroids",
      "company": ["Google"],
      "num_occur": ["1"]
   },
   {
      "problem_name": "Maximum Number of Words Found in Sentences",
      "company": ["Google"],
      "num_occur": ["1"]
   },
   {
      "problem_name": "Rings and Rods",
      "company": ["Google"],
      "num_occur": ["6"]
   },
   {
      "problem_name": "Watering Plants",
      "company": ["Google"],
      "num_occur": ["1"]
   },
   {
      "problem_name": "Smallest Index With Equal Value",
      "company": ["Google"],
      "num_occur": ["1"]
   },
   {
      "problem_name": "Stock Price Fluctuation ",
      "company": ["Google"],
      "num_occur": ["30"]
   },
   {
      "problem_name": "Convert 1D Array Into 2D Array",
      "company": ["Google"],
      "num_occur": ["1"]
   },
   {
      "problem_name": "Check if Word Can Be Placed In Crossword",
      "company": ["Google"],
      "num_occur": ["4"]
   },
   {
      "problem_name": "Find Original Array From Doubled Array",
      "company": ["Google", "Microsoft"],
      "num_occur": ["14", "2"]
   },
   {
      "problem_name": "Binary Searchable Numbers in an Unsorted Array",
      "company": ["Google"],
      "num_occur": ["1"]
   },
   {
      "problem_name": "Minimize Maximum Pair Sum in Array",
      "company": ["Google"],
      "num_occur": ["3"]
   },
   {
      "problem_name": "Minimize Product Sum of Two Arrays",
      "company": ["Google"],
      "num_occur": ["1"]
   },
   {
      "problem_name": "Queries on Number of Points Inside a Circle",
      "company": ["Google"],
      "num_occur": ["1"]
   },
   {
      "problem_name": "Sentence Similarity III",
      "company": ["Google"],
      "num_occur": ["1"]
   },
   {
      "problem_name": "Evaluate the Bracket Pairs of a String",
      "company": ["Google"],
      "num_occur": ["2"]
   },
   {
      "problem_name": "Minimum Number of Operations to Reinitialize a Permutation",
      "company": ["Google"],
      "num_occur": ["1"]
   },
   {
      "problem_name": "Sum of Beauty of All Substrings",
      "company": ["Google"],
      "num_occur": ["1"]
   },
   {
      "problem_name": "Map of Highest Peak",
      "company": ["Google", "Microsoft"],
      "num_occur": ["2", "2"]
   },
   {
      "problem_name": "Design Most Recently Used Queue",
      "company": ["Google"],
      "num_occur": ["1"]
   },
   {
      "problem_name": "Latest Time by Replacing Hidden Digits",
      "company": ["Google"],
      "num_occur": ["1"]
   },
   {
      "problem_name": "Largest Submatrix With Rearrangements",
      "company": ["Google", "Directi"],
      "num_occur": [1, 1]
   },
   {
      "problem_name": "Tuple with Same Product",
      "company": ["Google"],
      "num_occur": ["1"]
   },
   {
      "problem_name": "Maximum Score From Removing Substrings",
      "company": ["Google"],
      "num_occur": ["1"]
   },
   {
      "problem_name": "Largest Subarray Length K",
      "company": ["Google"],
      "num_occur": ["1"]
   },
   {
      "problem_name": "Concatenation of Consecutive Binary Numbers",
      "company": ["Google"],
      "num_occur": ["3"]
   },
   {
      "problem_name": "Find the Most Competitive Subsequence",
      "company": ["Google"],
      "num_occur": ["2"]
   },
   {
      "problem_name": "Count Sorted Vowel Strings",
      "company": ["Google", "Salesforce"],
      "num_occur": ["3", 2]
   },
   {
      "problem_name": "Largest Substring Between Two Equal Characters",
      "company": ["Google"],
      "num_occur": ["2"]
   },
   {
      "problem_name": "Mean of Array After Removing Some Elements",
      "company": ["Google"],
      "num_occur": ["1"]
   },
   {
      "problem_name": "Special Array With X Elements Greater Than or Equal X",
      "company": ["Google"],
      "num_occur": ["1"]
   },
   {
      "problem_name": "Rearrange Spaces Between Words",
      "company": ["Google"],
      "num_occur": ["4"]
   },
   {
      "problem_name": "Count Good Triplets",
      "company": ["Google"],
      "num_occur": ["2"]
   },
   {
      "problem_name": "Shuffle String",
      "company": ["Google"],
      "num_occur": ["2"]
   },
   {
      "problem_name": "Minimum Number of Increments on Subarrays to Form a Target Array",
      "company": ["Google"],
      "num_occur": ["4"]
   },
   {
      "problem_name": "Path with Maximum Probability",
      "company": ["Google"],
      "num_occur": ["5"]
   },
   {
      "problem_name": "Range Sum of Sorted Subarray Sums",
      "company": ["Google"],
      "num_occur": ["1"]
   },
   {
      "problem_name": "Path Crossing",
      "company": ["Google"],
      "num_occur": ["2"]
   },
   {
      "problem_name": "Clone N-ary Tree",
      "company": ["Google"],
      "num_occur": ["2"]
   },
   {
      "problem_name": "Minimum Number of Days to Make m Bouquets",
      "company": ["Google"],
      "num_occur": ["2"]
   },
   {
      "problem_name": "The k Strongest Values in an Array",
      "company": ["Google"],
      "num_occur": ["1"]
   },
   {
      "problem_name": "Check If a String Contains All Binary Codes of Size K",
      "company": ["Google"],
      "num_occur": ["1"]
   },
   {
      "problem_name": "People Whose List of Favorite Companies Is Not a Subset of Another List",
      "company": ["Google"],
      "num_occur": ["1"]
   },
   {
      "problem_name": "Simplified Fractions",
      "company": ["Google"],
      "num_occur": ["2"]
   },
   {
      "problem_name": "Build an Array With Stack Operations",
      "company": ["Google"],
      "num_occur": ["2"]
   },
   {
      "problem_name": "Destination City",
      "company": ["Google", "Yelp"],
      "num_occur": ["2", 5]
   },
   {
      "problem_name": "Maximum Score After Splitting a String",
      "company": ["Google"],
      "num_occur": ["1"]
   },
   {
      "problem_name": "Reformat The String",
      "company": ["Google", "Microsoft"],
      "num_occur": ["4", "1"]
   },
   {
      "problem_name": "Pizza With 3n Slices",
      "company": ["Google"],
      "num_occur": ["2"]
   },
   {
      "problem_name": "Check If N and Its Double Exist",
      "company": ["Google"],
      "num_occur": ["2"]
   },
   {
      "problem_name": "Divide Array in Sets of K Consecutive Numbers",
      "company": ["Google"],
      "num_occur": ["4"]
   },
   {
      "problem_name": "Minimum Falling Path Sum II",
      "company": ["Google", "Roblox"],
      "num_occur": ["1", 4]
   },
   {
      "problem_name": "Find Elements in a Contaminated Binary Tree",
      "company": ["Google"],
      "num_occur": ["1"]
   },
   {
      "problem_name": "Cells with Odd Values in a Matrix",
      "company": ["Google"],
      "num_occur": ["2"]
   },
   {
      "problem_name": "Find Positive Integer Solution for a Given Equation",
      "company": ["Google"],
      "num_occur": ["2"]
   },
   {
      "problem_name": "Minimum Absolute Difference",
      "company": ["Google", "JPMorgan", "Salesforce"],
      "num_occur": ["2", 2, 3]
   },
   {
      "problem_name": "Distance Between Bus Stops",
      "company": ["Google"],
      "num_occur": ["1"]
   },
   {
      "problem_name": "Single-Row Keyboard",
      "company": ["Google"],
      "num_occur": ["1"]
   },
   {
      "problem_name": "Snapshot Array",
      "company": ["Google", "Microsoft", "Rubrik"],
      "num_occur": ["36", "2", 5]
   },
   {
      "problem_name": "Relative Sort Array",
      "company": ["Google"],
      "num_occur": ["2"]
   },
   {
      "problem_name": "Compare Strings by Frequency of the Smallest Character",
      "company": ["Google"],
      "num_occur": ["2"]
   },
   {
      "problem_name": "Print in Order",
      "company": ["Google"],
      "num_occur": ["2"]
   },
   {
      "problem_name": "Largest Values From Labels",
      "company": ["Google"],
      "num_occur": ["1"]
   },
   {
      "problem_name": "Letter Tile Possibilities",
      "company": ["Google", "Microsoft"],
      "num_occur": ["1", "3"]
   },
   {
      "problem_name": "Occurrences After Bigram",
      "company": ["Google"],
      "num_occur": ["1"]
   },
   {
      "problem_name": "Confusing Number",
      "company": ["Google"],
      "num_occur": ["2"]
   },
   {
      "problem_name": "Valid Boomerang",
      "company": ["Google"],
      "num_occur": ["1"]
   },
   {
      "problem_name": "Number of Enclaves",
      "company": ["Google"],
      "num_occur": ["1"]
   },
   {
      "problem_name": "Best Sightseeing Pair",
      "company": ["Google"],
      "num_occur": ["2"]
   },
   {
      "problem_name": "Univalued Binary Tree",
      "company": ["Google"],
      "num_occur": ["3"]
   },
   {
      "problem_name": "Array of Doubled Pairs",
      "company": ["Google"],
      "num_occur": ["3"]
   },
   {
      "problem_name": "Flip Equivalent Binary Trees",
      "company": ["Google"],
      "num_occur": ["2"]
   },
   {
      "problem_name": "Delete Columns to Make Sorted",
      "company": ["Google"],
      "num_occur": ["1"]
   },
   {
      "problem_name": "Minimum Falling Path Sum",
      "company": ["Google"],
      "num_occur": ["2"]
   },
   {
      "problem_name": "Long Pressed Name",
      "company": ["Google"],
      "num_occur": ["2"]
   },
   {
      "problem_name": "X of a Kind in a Deck of Cards",
      "company": ["Google"],
      "num_occur": ["2"]
   },
   {
      "problem_name": "RLE Iterator",
      "company": ["Google"],
      "num_occur": ["3"]
   },
   {
      "problem_name": "Leaf-Similar Trees",
      "company": ["Google"],
      "num_occur": ["2"]
   },
   {
      "problem_name": "Magic Squares In Grid",
      "company": ["Google"],
      "num_occur": ["3"]
   },
   {
      "problem_name": "Flipping an Image",
      "company": ["Google"],
      "num_occur": ["3"]
   },
   {
      "problem_name": "Positions of Large Groups",
      "company": ["Google"],
      "num_occur": ["3"]
   },
   {
      "problem_name": "Ambiguous Coordinates",
      "company": ["Google"],
      "num_occur": ["1"]
   },
   {
      "problem_name": "Largest Triangle Area",
      "company": ["Google"],
      "num_occur": ["1"]
   },
   {
      "problem_name": "Similar RGB Color",
      "company": ["Google"],
      "num_occur": ["1"]
   },
   {
      "problem_name": "Number of Matching Subsequences",
      "company": ["Google", "Roblox"],
      "num_occur": ["15", 2]
   },
   {
      "problem_name": "Escape The Ghosts",
      "company": ["Google"],
      "num_occur": ["1"]
   },
   { "problem_name": "Split BST", "company": ["Google"], "num_occur": ["3"] },
   {
      "problem_name": "Global and Local Inversions",
      "company": ["Google"],
      "num_occur": ["2"]
   },
   {
      "problem_name": "Find Anagram Mappings",
      "company": ["Google"],
      "num_occur": ["1"]
   },
   {
      "problem_name": "Bold Words in String",
      "company": ["Google"],
      "num_occur": ["2"]
   },
   {
      "problem_name": "Shortest Completing Word",
      "company": ["Google"],
      "num_occur": ["2"]
   },
   {
      "problem_name": "Minimum Window Subsequence",
      "company": ["Google"],
      "num_occur": ["2"]
   },
   {
      "problem_name": "Longest Word in Dictionary",
      "company": ["Google"],
      "num_occur": ["6"]
   },
   {
      "problem_name": "Repeated String Match",
      "company": ["Google"],
      "num_occur": ["2"]
   },
   {
      "problem_name": "Redundant Connection",
      "company": ["Google", "Microsoft"],
      "num_occur": ["2", "2"]
   },
   {
      "problem_name": "K Empty Slots",
      "company": ["Google", "Nvidia"],
      "num_occur": ["1", 2]
   },
   {
      "problem_name": "24 Game",
      "company": ["Google", "HRT"],
      "num_occur": ["2", 3]
   },
   {
      "problem_name": "Map Sum Pairs",
      "company": ["Google"],
      "num_occur": ["2"]
   },
   {
      "problem_name": "Beautiful Arrangement II",
      "company": ["Google"],
      "num_occur": ["1"]
   },
   {
      "problem_name": "Strange Printer",
      "company": ["Google", "Walmart Global Tech"],
      "num_occur": ["3", 4]
   },
   { "problem_name": "Remove 9", "company": ["Google"], "num_occur": ["2"] },
   { "problem_name": "Coin Path", "company": ["Google"], "num_occur": ["1"] },
   {
      "problem_name": "Maximum Average Subarray II",
      "company": ["Google"],
      "num_occur": ["1"]
   },
   {
      "problem_name": "Design Excel Sum Formula",
      "company": ["Google", "Opendoor"],
      "num_occur": ["3", 3]
   },
   {
      "problem_name": "Design Compressed String Iterator",
      "company": ["Google"],
      "num_occur": ["2"]
   },
   {
      "problem_name": "Valid Square",
      "company": ["Google", "Microsoft", "Pure Storage"],
      "num_occur": ["4", "2", 2]
   },
   {
      "problem_name": "N-ary Tree Preorder Traversal",
      "company": ["Google"],
      "num_occur": ["3"]
   },
   {
      "problem_name": "Erect the Fence",
      "company": ["Google"],
      "num_occur": ["1"]
   },
   {
      "problem_name": "Longest Line of Consecutive One in Matrix",
      "company": ["Google"],
      "num_occur": ["5"]
   },
   {
      "problem_name": "Student Attendance Record II",
      "company": ["Google"],
      "num_occur": ["14"]
   },
   {
      "problem_name": "Student Attendance Record I",
      "company": ["Google"],
      "num_occur": ["5"]
   },
   {
      "problem_name": "Binary Tree Longest Consecutive Sequence II",
      "company": ["Google"],
      "num_occur": ["4"]
   },
   {
      "problem_name": "Lonely Pixel II",
      "company": ["Google"],
      "num_occur": ["1"]
   },
   {
      "problem_name": "Lonely Pixel I",
      "company": ["Google", "Microsoft", "Nvidia"],
      "num_occur": ["1", "3", 3]
   },
   {
      "problem_name": "Minimum Absolute Difference in BST",
      "company": ["Google"],
      "num_occur": ["3"]
   },
   {
      "problem_name": "Word Abbreviation",
      "company": ["Google", "Snapchat"],
      "num_occur": ["3", 1]
   },
   {
      "problem_name": "Longest Word in Dictionary through Deleting",
      "company": ["Google"],
      "num_occur": ["4"]
   },
   {
      "problem_name": "Longest Uncommon Subsequence I",
      "company": ["Google"],
      "num_occur": ["1"]
   },
   {
      "problem_name": "Relative Ranks",
      "company": ["Google"],
      "num_occur": ["1"]
   },
   { "problem_name": "Base 7", "company": ["Google"], "num_occur": ["3"] },
   {
      "problem_name": "The Maze III",
      "company": ["Google"],
      "num_occur": ["2"]
   },
   {
      "problem_name": "Predict the Winner",
      "company": ["Google", "Snapchat"],
      "num_occur": ["2", 2]
   },
   {
      "problem_name": "Magical String",
      "company": ["Google"],
      "num_occur": ["1"]
   },
   {
      "problem_name": "Encode String with Shortest Length",
      "company": ["Google"],
      "num_occur": ["2"]
   },
   {
      "problem_name": "Convex Polygon",
      "company": ["Google"],
      "num_occur": ["1"]
   },
   {
      "problem_name": "Hamming Distance",
      "company": ["Google"],
      "num_occur": ["2"]
   },
   {
      "problem_name": "Number of Boomerangs",
      "company": ["Google"],
      "num_occur": ["5"]
   },
   {
      "problem_name": "Sequence Reconstruction",
      "company": ["Google"],
      "num_occur": ["2"]
   },
   {
      "problem_name": "Word Squares",
      "company": ["Google"],
      "num_occur": ["3"]
   },
   {
      "problem_name": "Sentence Screen Fitting",
      "company": ["Google"],
      "num_occur": ["8"]
   },
   {
      "problem_name": "Minimum Unique Word Abbreviation",
      "company": ["Google"],
      "num_occur": ["1"]
   },
   {
      "problem_name": "Trapping Rain Water II",
      "company": ["Google"],
      "num_occur": ["4"]
   },
   {
      "problem_name": "Binary Watch",
      "company": ["Google"],
      "num_occur": ["1"]
   },
   {
      "problem_name": "Guess Number Higher or Lower II",
      "company": ["Google"],
      "num_occur": ["2"]
   },
   {
      "problem_name": "Plus One Linked List",
      "company": ["Google"],
      "num_occur": ["1"]
   },
   {
      "problem_name": "Largest Divisible Subset",
      "company": ["Google"],
      "num_occur": ["2"]
   },
   {
      "problem_name": "Valid Perfect Square",
      "company": ["Google", "LinkedIn"],
      "num_occur": ["3", 3]
   },
   {
      "problem_name": "Rearrange String k Distance Apart",
      "company": ["Google", "Microsoft", "Twitter", "VMware"],
      "num_occur": ["3", "2", "3", 2]
   },
   {
      "problem_name": "Russian Doll Envelopes",
      "company": ["Google", "tiktok"],
      "num_occur": ["7", 2]
   },
   {
      "problem_name": "Verify Preorder Serialization of a Binary Tree",
      "company": ["Google"],
      "num_occur": ["1"]
   },
   {
      "problem_name": "Generalized Abbreviation",
      "company": ["Google"],
      "num_occur": ["1"]
   },
   {
      "problem_name": "Range Sum Query 2D - Mutable",
      "company": ["Google"],
      "num_occur": ["3"]
   },
   {
      "problem_name": "Number of Islands II",
      "company": ["Google", "Uber"],
      "num_occur": ["2", 5]
   },
   {
      "problem_name": "Smallest Rectangle Enclosing Black Pixels",
      "company": ["Google"],
      "num_occur": ["7"]
   },
   {
      "problem_name": "Flip Game II",
      "company": ["Google"],
      "num_occur": ["1"]
   },
   { "problem_name": "Flip Game", "company": ["Google"], "num_occur": ["1"] },
   {
      "problem_name": "Paint Fence",
      "company": ["Google", "JPMorgan"],
      "num_occur": ["2", 2]
   },
   {
      "problem_name": "Closest Binary Search Tree Value II",
      "company": ["Google", "LinkedIn"],
      "num_occur": ["2", 26]
   },
   {
      "problem_name": "Single Number III",
      "company": ["Google"],
      "num_occur": ["2"]
   },
   {
      "problem_name": "Count Univalue Subtrees",
      "company": ["Google", "Microsoft"],
      "num_occur": ["2", "3"]
   },
   {
      "problem_name": "Strobogrammatic Number III",
      "company": ["Google"],
      "num_occur": ["4"]
   },
   {
      "problem_name": "Number of Digit One",
      "company": ["Google", "Microsoft"],
      "num_occur": ["4", "4"]
   },
   {
      "problem_name": "Combination Sum III",
      "company": ["Google"],
      "num_occur": ["3"]
   },
   {
      "problem_name": "Find Minimum in Rotated Sorted Array II",
      "company": ["Google"],
      "num_occur": ["2"]
   },
   {
      "problem_name": "Insertion Sort List",
      "company": ["Google"],
      "num_occur": ["2"]
   },
   {
      "problem_name": "Minimum Number of Food Buckets to Feed the Hamsters",
      "company": ["Grab"],
      "num_occur": [1]
   },
   {
      "problem_name": "Number of Times Binary String Is Prefix-Aligned",
      "company": ["Grab", "Microsoft"],
      "num_occur": [4, "2"]
   },
   {
      "problem_name": "Minimum Distance to the Target Element",
      "company": ["Honeywell"],
      "num_occur": [1]
   },
   {
      "problem_name": "Equal Sum Arrays With Minimum Number of Operations",
      "company": ["HRT", "Microsoft"],
      "num_occur": [7, "2"]
   },
   {
      "problem_name": "Detect Pattern of Length M Repeated K or More Times",
      "company": ["HRT"],
      "num_occur": [1]
   },
   {
      "problem_name": "Maximum 69 Number",
      "company": ["HRT"],
      "num_occur": [1]
   },
   {
      "problem_name": "Convert Integer to the Sum of Two No-Zero Integers",
      "company": ["HRT"],
      "num_occur": [1]
   },
   {
      "problem_name": "Most Visited Sector in  a Circular Track",
      "company": ["IBM"],
      "num_occur": [6]
   },
   {
      "problem_name": "Count Artifacts That Can Be Extracted",
      "company": ["IMC"],
      "num_occur": [1]
   },
   {
      "problem_name": "Alert Using Same Key-Card Three or More Times in a One Hour Period",
      "company": ["Indeed", "Karat", "Robinhood", "Wayfair"],
      "num_occur": [4, 16, 8, 5]
   },
   {
      "problem_name": "Sum of Even Numbers After Queries",
      "company": ["Indeed"],
      "num_occur": [1]
   },
   {
      "problem_name": "Subdomain Visit Count",
      "company": [
         "Indeed",
         "Intuit",
         "Karat",
         "Walmart Global Tech",
         "Wayfair"
      ],
      "num_occur": [25, 2, 40, 2, 9]
   },
   {
      "problem_name": "Maximum Length of Repeated Subarray",
      "company": ["Indeed", "Karat", "Wayfair"],
      "num_occur": [8, 16, 7]
   },
   {
      "problem_name": "Binary Tree Tilt",
      "company": ["Indeed"],
      "num_occur": [1]
   },
   {
      "problem_name": "Find the Minimum and Maximum Number of Nodes Between Critical Points",
      "company": ["Info Edge"],
      "num_occur": [1]
   },
   {
      "problem_name": "Sort Integers by The Number of 1 Bits",
      "company": ["Infosys"],
      "num_occur": [2]
   },
   {
      "problem_name": "Check if Every Row and Column Contains All Numbers",
      "company": ["instacart", "Karat"],
      "num_occur": [2, 4]
   },
   {
      "problem_name": "Unique Email Addresses",
      "company": ["Intuit"],
      "num_occur": [6]
   },
   {
      "problem_name": "Count Common Words With One Occurrence",
      "company": ["Jane Street"],
      "num_occur": [1]
   },
   {
      "problem_name": "Minimum Moves to Convert String",
      "company": ["Jeavio"],
      "num_occur": [1]
   },
   {
      "problem_name": "Lexicographically Smallest String After Applying Operations",
      "company": ["JP Morgan"],
      "num_occur": ["1"]
   },
   {
      "problem_name": "Display Table of Food Orders in a Restaurant",
      "company": ["JP Morgan"],
      "num_occur": ["1"]
   },
   {
      "problem_name": "Determine Color of a Chessboard Square",
      "company": ["JPMorgan"],
      "num_occur": [1]
   },
   {
      "problem_name": "Reconstruct Original Digits from English",
      "company": ["JPMorgan"],
      "num_occur": [69]
   },
   {
      "problem_name": "Generate Random Point in a Circle",
      "company": ["Leap Motion"],
      "num_occur": [1]
   },
   {
      "problem_name": "Number of Sub-arrays of Size K and Average Greater than or Equal to Threshold",
      "company": ["LinkedIn"],
      "num_occur": [1]
   },
   {
      "problem_name": "Second Minimum Node In a Binary Tree",
      "company": ["LinkedIn"],
      "num_occur": [11]
   },
   { "problem_name": "Can I Win", "company": ["LinkedIn"], "num_occur": [3] },
   {
      "problem_name": "Nested List Weight Sum II",
      "company": ["LinkedIn"],
      "num_occur": [48]
   },
   {
      "problem_name": "Sort Transformed Array",
      "company": ["LinkedIn"],
      "num_occur": [10]
   },
   {
      "problem_name": "Bulb Switcher",
      "company": ["LinkedIn", "Microsoft"],
      "num_occur": [4, "3"]
   },
   {
      "problem_name": "Factor Combinations",
      "company": ["LinkedIn"],
      "num_occur": [5]
   },
   {
      "problem_name": "Shortest Word Distance II",
      "company": ["LinkedIn"],
      "num_occur": [71]
   },
   {
      "problem_name": "Two Sum III - Data structure design",
      "company": ["LinkedIn"],
      "num_occur": [2]
   },
   {
      "problem_name": "Binary Tree Upside Down",
      "company": ["LinkedIn"],
      "num_occur": [9]
   },
   {
      "problem_name": "Longest Harmonious Subsequence",
      "company": ["LiveRamp"],
      "num_occur": [1]
   },
   {
      "problem_name": "Distribute Candies",
      "company": ["LiveRamp"],
      "num_occur": [1]
   },
   {
      "problem_name": "Water and Jug Problem",
      "company": ["Lyft"],
      "num_occur": [4]
   },
   {
      "problem_name": "Keyboard Row",
      "company": ["Mathworks"],
      "num_occur": [2]
   },
   {
      "problem_name": "Crawler Log Folder",
      "company": ["Mercari"],
      "num_occur": [1]
   },
   {
      "problem_name": "Max Difference You Can Get From Changing an Integer",
      "company": ["Mercari"],
      "num_occur": [1]
   },
   {
      "problem_name": "Count Largest Group",
      "company": ["Mercari"],
      "num_occur": [1]
   },
   {
      "problem_name": "Remove Digit From Number to Maximize Result",
      "company": ["Microsoft"],
      "num_occur": ["2"]
   },
   {
      "problem_name": "Minimum Operations to Halve Array Sum",
      "company": ["Microsoft"],
      "num_occur": ["1"]
   },
   {
      "problem_name": "Divide Array Into Equal Pairs",
      "company": ["Microsoft"],
      "num_occur": ["1"]
   },
   {
      "problem_name": "Merge Nodes in Between Zeros",
      "company": ["Microsoft"],
      "num_occur": ["1"]
   },
   {
      "problem_name": "Check if All A's Appears Before All B's",
      "company": ["Microsoft"],
      "num_occur": ["1"]
   },
   {
      "problem_name": "Find Missing Observations",
      "company": ["Microsoft", "Amazon"],
      "num_occur": [1, 1]
   },
   {
      "problem_name": "Three Divisors",
      "company": ["Microsoft"],
      "num_occur": ["1"]
   },
   {
      "problem_name": "Sum of Digits of String After Convert",
      "company": ["Microsoft"],
      "num_occur": ["1"]
   },
   {
      "problem_name": "Sign of the Product of an Array",
      "company": ["Microsoft"],
      "num_occur": ["45"]
   },
   {
      "problem_name": "Find Center of Star Graph",
      "company": ["Microsoft"],
      "num_occur": ["1"]
   },
   {
      "problem_name": "Check if Number is a Sum of Powers of Three",
      "company": ["Microsoft"],
      "num_occur": ["2"]
   },
   {
      "problem_name": "Longest Nice Substring",
      "company": ["Microsoft"],
      "num_occur": ["4"]
   },
   {
      "problem_name": "Maximum Number of Eaten Apples",
      "company": ["Microsoft", "Uber"],
      "num_occur": ["2", 1]
   },
   {
      "problem_name": "Widest Vertical Area Between Two Points Containing No Points",
      "company": ["Microsoft"],
      "num_occur": ["1"]
   },
   {
      "problem_name": "Replace All ?'s to Avoid Consecutive Repeating Characters",
      "company": ["Microsoft"],
      "num_occur": ["2"]
   },
   {
      "problem_name": "Minimum Operations to Make Array Equal",
      "company": ["Microsoft"],
      "num_occur": ["2"]
   },
   {
      "problem_name": "Running Sum of 1d Array",
      "company": ["Microsoft"],
      "num_occur": ["2"]
   },
   {
      "problem_name": "Delete N Nodes After M Nodes of a Linked List",
      "company": ["Microsoft"],
      "num_occur": ["1"]
   },
   {
      "problem_name": "Find All The Lonely Nodes",
      "company": ["Microsoft"],
      "num_occur": ["1"]
   },
   {
      "problem_name": "Count Good Nodes in Binary Tree",
      "company": ["Microsoft", "Salesforce"],
      "num_occur": ["11", 2]
   },
   {
      "problem_name": "The k-th Lexicographical String of All Happy Strings of Length n",
      "company": ["Microsoft"],
      "num_occur": ["1"]
   },
   {
      "problem_name": "Find Lucky Integer in an Array",
      "company": ["Microsoft"],
      "num_occur": ["1"]
   },
   {
      "problem_name": "Generate a String With Characters That Have Odd Counts",
      "company": ["Microsoft"],
      "num_occur": ["2"]
   },
   {
      "problem_name": "Find the Longest Substring Containing Vowels in Even Counts",
      "company": ["Microsoft"],
      "num_occur": ["1"]
   },
   {
      "problem_name": "Sort the Matrix Diagonally",
      "company": ["Microsoft"],
      "num_occur": ["2"]
   },
   {
      "problem_name": "Print Words Vertically",
      "company": ["Microsoft", "Postmates"],
      "num_occur": ["1", "2"]
   },
   {
      "problem_name": "Find N Unique Integers Sum up to Zero",
      "company": ["Microsoft"],
      "num_occur": ["22"]
   },
   {
      "problem_name": "Delete Tree Nodes",
      "company": ["Microsoft"],
      "num_occur": ["1"]
   },
   {
      "problem_name": "Count Servers that Communicate",
      "company": ["Microsoft"],
      "num_occur": ["6"]
   },
   {
      "problem_name": "Check If It Is a Straight Line",
      "company": ["Microsoft", "Palantir Technologies"],
      "num_occur": ["2", 1]
   },
   {
      "problem_name": "Reverse Substrings Between Each Pair of Parentheses",
      "company": ["Microsoft", "Paypal"],
      "num_occur": ["2", 2]
   },
   {
      "problem_name": "Remove Outermost Parentheses",
      "company": ["Microsoft"],
      "num_occur": ["2"]
   },
   {
      "problem_name": "DI String Match",
      "company": ["Microsoft"],
      "num_occur": ["2"]
   },
   {
      "problem_name": "Sort Array By Parity II",
      "company": ["Microsoft"],
      "num_occur": ["2"]
   },
   {
      "problem_name": "Letter Case Permutation",
      "company": ["Microsoft"],
      "num_occur": ["2"]
   },
   {
      "problem_name": "Bulb Switcher II",
      "company": ["Microsoft"],
      "num_occur": ["1"]
   },
   {
      "problem_name": "Image Smoother",
      "company": ["Microsoft"],
      "num_occur": ["2"]
   },
   {
      "problem_name": "4 Keys Keyboard",
      "company": ["Microsoft"],
      "num_occur": ["2"]
   },
   {
      "problem_name": "Decode Ways II",
      "company": ["Microsoft"],
      "num_occur": ["2"]
   },
   {
      "problem_name": "Maximum Vacation Days",
      "company": ["Microsoft"],
      "num_occur": ["2"]
   },
   {
      "problem_name": "Maximum Depth of N-ary Tree",
      "company": ["Microsoft"],
      "num_occur": ["2"]
   },
   {
      "problem_name": "Super Washing Machines",
      "company": ["Microsoft"],
      "num_occur": ["2"]
   },
   {
      "problem_name": "Max Consecutive Ones II",
      "company": ["Microsoft", "tiktok"],
      "num_occur": ["2", 3]
   },
   {
      "problem_name": "Smallest Good Base",
      "company": ["Microsoft"],
      "num_occur": ["2"]
   },
   {
      "problem_name": "Matchsticks to Square",
      "company": ["Microsoft"],
      "num_occur": ["2"]
   },
   {
      "problem_name": "Minimum Moves to Equal Array Elements II",
      "company": ["Microsoft"],
      "num_occur": ["5"]
   },
   {
      "problem_name": "N-ary Tree Level Order Traversal",
      "company": ["Microsoft"],
      "num_occur": ["3"]
   },
   {
      "problem_name": "Data Stream as Disjoint Intervals",
      "company": ["Microsoft"],
      "num_occur": ["2"]
   },
   {
      "problem_name": "Android Unlock Patterns",
      "company": ["Microsoft", "Snapchat"],
      "num_occur": ["2", 3]
   },
   {
      "problem_name": "Ugly Number II",
      "company": ["Microsoft"],
      "num_occur": ["2"]
   },
   {
      "problem_name": "Reverse Words in a String II",
      "company": ["Microsoft"],
      "num_occur": ["4"]
   },
   {
      "problem_name": "Unique Binary Search Trees II",
      "company": ["Microsoft"],
      "num_occur": ["4"]
   },
   {
      "problem_name": "Count Integers With Even Digit Sum",
      "company": ["MindTree"],
      "num_occur": [1]
   },
   {
      "problem_name": "Redistribute Characters to Make All Strings Equal",
      "company": ["Moengage"],
      "num_occur": [1]
   },
   {
      "problem_name": "Best Team With No Conflicts",
      "company": ["Morgan Stanley", "Uber"],
      "num_occur": [1, 2]
   },
   {
      "problem_name": "Subrectangle Queries",
      "company": ["Nuro"],
      "num_occur": [1]
   },
   {
      "problem_name": "Check If Word Is Valid After Substitutions",
      "company": ["Nutanix"],
      "num_occur": [1]
   },
   {
      "problem_name": "Reverse Prefix of Word",
      "company": ["Optum"],
      "num_occur": [1]
   },
   {
      "problem_name": "HTML Entity Parser",
      "company": ["Oracle"],
      "num_occur": [1]
   },
   {
      "problem_name": "Shifting Letters",
      "company": ["Oracle"],
      "num_occur": [2]
   },
   {
      "problem_name": "Verify Preorder Sequence in Binary Search Tree",
      "company": ["Oracle", "VMware", "Zenefits"],
      "num_occur": [2, 4, 1]
   },
   {
      "problem_name": "Distribute Candies to People",
      "company": ["PayTM"],
      "num_occur": [2]
   },
   {
      "problem_name": "Count Operations to Obtain Zero",
      "company": ["payu"],
      "num_occur": [1]
   },
   {
      "problem_name": "Coordinate With Maximum Network Quality",
      "company": ["peak6"],
      "num_occur": [1]
   },
   {
      "problem_name": "Minimum Bit Flips to Convert Number",
      "company": ["persistent systems"],
      "num_occur": [1]
   },
   {
      "problem_name": "Simple Bank System",
      "company": ["PhonePe"],
      "num_occur": [1]
   },
   {
      "problem_name": "Parallel Courses III",
      "company": ["Pinterest"],
      "num_occur": [4]
   },
   {
      "problem_name": "Non-negative Integers without Consecutive Ones",
      "company": ["Pocket Gems"],
      "num_occur": [1]
   },
   {
      "problem_name": "Most Beautiful Item for Each Query",
      "company": ["Postmates"],
      "num_occur": ["1"]
   },
   {
      "problem_name": "Determine if Two Strings Are Close",
      "company": ["Postmates"],
      "num_occur": ["1"]
   },
   {
      "problem_name": "Maximum Repeating Substring",
      "company": ["Pure Storage"],
      "num_occur": [3]
   },
   {
      "problem_name": "Fixed Point",
      "company": ["Qualtrics"],
      "num_occur": [2]
   },
   {
      "problem_name": "Summary Ranges",
      "company": ["Qualtrics", "Yandex"],
      "num_occur": [2, 6]
   },
   {
      "problem_name": "Range Frequency Queries",
      "company": ["Quora"],
      "num_occur": [1]
   },
   {
      "problem_name": "Maximum Number of Words You Can Type",
      "company": ["Quora"],
      "num_occur": [1]
   },
   {
      "problem_name": "Substrings of Size Three with Distinct Characters",
      "company": ["Quora"],
      "num_occur": [1]
   },
   {
      "problem_name": "Construct Target Array With Multiple Sums",
      "company": ["Quora"],
      "num_occur": [3]
   },
   {
      "problem_name": "Sum of Floored Pairs",
      "company": ["Rakuten"],
      "num_occur": [1]
   },
   {
      "problem_name": "Two Best Non-Overlapping Events",
      "company": ["razorpay"],
      "num_occur": [1]
   },
   {
      "problem_name": "Teemo Attacking",
      "company": ["Riot Games", "Salesforce"],
      "num_occur": [1, 2]
   },
   {
      "problem_name": "Kth Smallest Number in Multiplication Table",
      "company": ["Rubrik"],
      "num_occur": [4]
   },
   {
      "problem_name": "Find Kth Bit in Nth Binary String",
      "company": ["Rupeek"],
      "num_occur": [1]
   },
   {
      "problem_name": "Check Whether Two Strings are Almost Equivalent",
      "company": ["Salesforce"],
      "num_occur": [1]
   },
   {
      "problem_name": "Maximum Product of Three Numbers",
      "company": ["Salesforce"],
      "num_occur": [7]
   },
   {
      "problem_name": "Maximum Students Taking Exam",
      "company": ["SAP"],
      "num_occur": [1]
   },
   {
      "problem_name": "Prison Cells After N Days",
      "company": ["SAP"],
      "num_occur": [2]
   },
   {
      "problem_name": "Construct Binary Tree from Inorder and Postorder Traversal",
      "company": ["Shopee"],
      "num_occur": [3]
   },
   {
      "problem_name": "Largest Merge Of Two Strings",
      "company": ["Snapchat"],
      "num_occur": [1]
   },
   {
      "problem_name": "Ternary Expression Parser",
      "company": ["Snapchat"],
      "num_occur": [1]
   },
   {
      "problem_name": "Second Largest Digit in a String",
      "company": ["Softwire"],
      "num_occur": [1]
   },
   {
      "problem_name": "Next Greater Numerically Balanced Number",
      "company": ["Sprinklr"],
      "num_occur": [1]
   },
   {
      "problem_name": "Maximum Subarray Sum After One Operation",
      "company": ["Sprinklr"],
      "num_occur": [1]
   },
   {
      "problem_name": "Available Captures for Rook",
      "company": ["Square"],
      "num_occur": [2]
   },
   {
      "problem_name": "Unique Morse Code Words",
      "company": ["Square"],
      "num_occur": [2]
   },
   {
      "problem_name": "Squirrel Simulation",
      "company": ["Square"],
      "num_occur": [1]
   },
   { "problem_name": "Grid Game", "company": ["T System"], "num_occur": [1] },
   {
      "problem_name": "Maximum Ascending Subarray Sum",
      "company": ["tcs"],
      "num_occur": [1]
   },
   {
      "problem_name": "Palindrome Partitioning IV",
      "company": ["tcs"],
      "num_occur": [1]
   },
   {
      "problem_name": "Minimum Factorization",
      "company": ["Tencent"],
      "num_occur": [1]
   },
   {
      "problem_name": "Minimum Changes To Make Alternating Binary String",
      "company": ["Tesla"],
      "num_occur": [2]
   },
   {
      "problem_name": "Largest Perimeter Triangle",
      "company": ["Tesla"],
      "num_occur": [3]
   },
   {
      "problem_name": "Spiral Matrix III",
      "company": ["Tesla"],
      "num_occur": [2]
   },
   {
      "problem_name": "Vowel Spellchecker",
      "company": ["Thumbtack"],
      "num_occur": [1]
   },
   {
      "problem_name": "Find Greatest Common Divisor of Array",
      "company": ["TIAA"],
      "num_occur": [1]
   },
   {
      "problem_name": "Find Closest Number to Zero",
      "company": ["Tiger Analytics"],
      "num_occur": [1]
   },
   {
      "problem_name": "Minimum Time to Type Word Using Special Typewriter",
      "company": ["tiktok"],
      "num_occur": [3]
   },
   {
      "problem_name": "Incremental Memory Leak",
      "company": ["tiktok"],
      "num_occur": [1]
   },
   {
      "problem_name": "Design a Stack With Increment Operation",
      "company": ["tiktok"],
      "num_occur": [13]
   },
   {
      "problem_name": "Path with Maximum Gold",
      "company": ["tiktok"],
      "num_occur": [2]
   },
   {
      "problem_name": "Reformat Phone Number",
      "company": ["Toptal"],
      "num_occur": [3]
   },
   {
      "problem_name": "Time Needed to Buy Tickets",
      "company": ["Twitter"],
      "num_occur": ["2"]
   },
   {
      "problem_name": "Finding the Users Active Minutes",
      "company": ["Twitter"],
      "num_occur": ["10"]
   },
   {
      "problem_name": "Design Authentication Manager",
      "company": ["Twitter"],
      "num_occur": ["1"]
   },
   {
      "problem_name": "Minimum Elements to Add to Form a Given Sum",
      "company": ["Twitter"],
      "num_occur": ["1"]
   },
   {
      "problem_name": "Tweet Counts Per Frequency",
      "company": ["Twitter"],
      "num_occur": ["6"]
   },
   {
      "problem_name": "Binary Gap",
      "company": ["Twitter", "eBay"],
      "num_occur": [1, 1]
   },
   {
      "problem_name": "Design Log Storage System",
      "company": ["Twitter"],
      "num_occur": ["5"]
   },
   {
      "problem_name": "Power of Four",
      "company": ["Two Sigma"],
      "num_occur": ["1"]
   },
   {
      "problem_name": "Intersection of Multiple Arrays",
      "company": ["Uber"],
      "num_occur": [1]
   },
   {
      "problem_name": "Calculate Digit Sum of a String",
      "company": ["Uber"],
      "num_occur": [1]
   },
   {
      "problem_name": "Number of Strings That Appear as Substrings in Word",
      "company": ["Uber"],
      "num_occur": [1]
   },
   {
      "problem_name": "Check If String Is a Prefix of Array",
      "company": ["Uber"],
      "num_occur": [1]
   },
   {
      "problem_name": "Maximum XOR for Each Query",
      "company": ["Uber"],
      "num_occur": [1]
   },
   {
      "problem_name": "Count Nice Pairs in an Array",
      "company": ["Uber"],
      "num_occur": [3]
   },
   {
      "problem_name": "Merge Strings Alternately",
      "company": ["Uber"],
      "num_occur": [3]
   },
   {
      "problem_name": "Special Positions in a Binary Matrix",
      "company": ["Uber"],
      "num_occur": [2]
   },
   {
      "problem_name": "Thousand Separator",
      "company": ["Uber"],
      "num_occur": [2]
   },
   {
      "problem_name": "Construct K Palindrome Strings",
      "company": ["Uber"],
      "num_occur": [7]
   },
   {
      "problem_name": "Find the Distance Value Between Two Arrays",
      "company": ["Uber"],
      "num_occur": [2]
   },
   {
      "problem_name": "Iterator for Combination",
      "company": ["Uber"],
      "num_occur": [2]
   },
   {
      "problem_name": "Subtract the Product and Sum of Digits of an Integer",
      "company": ["Uber"],
      "num_occur": [5]
   },
   {
      "problem_name": "Shortest Distance to Target Color",
      "company": ["Uber"],
      "num_occur": [2]
   },
   {
      "problem_name": "Largest Plus Sign",
      "company": ["Uber"],
      "num_occur": [3]
   },
   { "problem_name": "Baseball Game", "company": ["Uber"], "num_occur": [2] },
   { "problem_name": "Remove Boxes", "company": ["Uber"], "num_occur": [2] },
   { "problem_name": "IPO", "company": ["Uber"], "num_occur": [5] },
   { "problem_name": "Bomb Enemy", "company": ["Uber"], "num_occur": [4] },
   {
      "problem_name": "Check If All 1's Are at Least Length K Places Away",
      "company": ["United Health Group"],
      "num_occur": [1]
   },
   { "problem_name": "Dota2 Senate", "company": ["Valve"], "num_occur": [1] },
   {
      "problem_name": "Count Number of Homogenous Substrings",
      "company": ["Virtu Financial"],
      "num_occur": [1]
   },
   {
      "problem_name": "Hexspeak",
      "company": ["Virtu Financial"],
      "num_occur": [2]
   },
   {
      "problem_name": "Array Transformation",
      "company": ["Virtu Financial"],
      "num_occur": [2]
   },
   {
      "problem_name": "How Many Apples Can You Put into the Basket",
      "company": ["Virtu Financial"],
      "num_occur": [2]
   },
   {
      "problem_name": "Count Substrings with Only One Distinct Letter",
      "company": ["Virtu Financial"],
      "num_occur": [2]
   },
   {
      "problem_name": "Missing Number In Arithmetic Progression",
      "company": ["VMware"],
      "num_occur": [2]
   },
   {
      "problem_name": "Longest Repeating Substring",
      "company": ["VMware"],
      "num_occur": [2]
   },
   {
      "problem_name": "Remove Colored Pieces if Both Neighbors are the Same Color",
      "company": ["Walmart Global Tech"],
      "num_occur": [9]
   },
   {
      "problem_name": "Find Smallest Common Element in All Rows",
      "company": ["Walmart Global Tech"],
      "num_occur": [2]
   },
   {
      "problem_name": "Minimum Moves to Reach Target Score",
      "company": ["Wayfair"],
      "num_occur": [1]
   },
   {
      "problem_name": "Delete Characters to Make Fancy String",
      "company": ["Wayfair"],
      "num_occur": [1]
   },
   {
      "problem_name": "The Number of Full Rounds You Have Played",
      "company": ["Wayfair"],
      "num_occur": [4]
   },
   {
      "problem_name": "Minimum Number of Steps to Make Two Strings Anagram II",
      "company": ["Wealthfront"],
      "num_occur": [1]
   },
   {
      "problem_name": "Matrix Cells in Distance Order",
      "company": ["Yahoo"],
      "num_occur": [1]
   },
   {
      "problem_name": "Binary Number with Alternating Bits",
      "company": ["Yahoo"],
      "num_occur": [1]
   },
   {
      "problem_name": "Maximum Distance in Arrays",
      "company": ["Yahoo"],
      "num_occur": [1]
   },
   {
      "problem_name": "Find Bottom Left Tree Value",
      "company": ["Yahoo"],
      "num_occur": [2]
   },
   {
      "problem_name": "Largest Palindrome Product",
      "company": ["Yahoo"],
      "num_occur": [1]
   },
   {
      "problem_name": "Scramble String",
      "company": ["Yahoo"],
      "num_occur": [2]
   },
   {
      "problem_name": "Longest Subarray of 1's After Deleting One Element",
      "company": ["Yandex"],
      "num_occur": [3]
   },
   {
      "problem_name": "Number of Students Doing Homework at a Given Time",
      "company": ["Yandex"],
      "num_occur": [2]
   },
   {
      "problem_name": "Line Reflection",
      "company": ["Yandex"],
      "num_occur": [2]
   },
   {
      "problem_name": "Filter Restaurants by Vegan-Friendly, Price and Distance",
      "company": ["Yelp"],
      "num_occur": [4]
   },
   {
      "problem_name": "Count Equal and Divisible Pairs in an Array",
      "company": ["zeta suite"],
      "num_occur": [1]
   },
   {
      "problem_name": "Sort Even and Odd Indices Independently",
      "company": ["Zoho"],
      "num_occur": [1]
   },
   {
      "problem_name": "Reverse Nodes in Even Length Groups",
      "company": ["Zopsmart"],
      "num_occur": [1]
   },
   {
      "problem_name": "Day of the Year",
      "company": ["ZScaler"],
      "num_occur": [1]
   }
]
